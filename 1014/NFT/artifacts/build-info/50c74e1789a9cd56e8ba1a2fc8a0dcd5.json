{
	"id": "50c74e1789a9cd56e8ba1a2fc8a0dcd5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"1014/NFT/BaseERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ncontract ERC721 is IERC721{\n    using Strings for uint256;\n    using Address for address;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Token baseURI\n    string private _baseURI;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name`, a `symbol` and a `baseURI` to the token collection.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        string memory baseURI_\n    ) {\n        /**code*/\n        _name = name_;\n        _symbol = symbol_;\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\n            interfaceId == 0x80ac58cd || // ERC165 Interface ID for ERC721\n            interfaceId == 0x5b5e139f;   // ERC165 Interface ID for ERC721Metadata\n    }\n    \n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view returns (string memory) {\n        /**code*/\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view returns (string memory) {\n        /**code*/\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\n        require(\n            /**code*/\n            _owners[tokenId]!=address(0),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        // should return baseURI\n        /**code*/\n        return _baseURI;\n\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function mint(address to, uint256 tokenId) public {\n        require(/**code*/ to!=address(0), \"ERC721: mint to the zero address\");\n        require(/**code*/ _owners[tokenId] == address(0), \"ERC721: token already minted\");\n\n        /**code*/\n        _owners[tokenId] = to;\n        _balances[to] += 1;\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view returns (uint256) {\n        /**code*/\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view returns (address) {\n        /**code*/\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public {\n        address owner = ownerOf(tokenId);\n        require(/**code*/owner!=to, \"ERC721: approval to current owner\");\n\n        require(\n            /**code*/\n            msg.sender==owner \n            || msg.sender == _tokenApprovals[tokenId]\n            || _operatorApprovals[_owners[tokenId]][msg.sender],\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n       _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view returns (address) {\n        require(\n            /**code*/\n            _owners[tokenId]!=address(0),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        /**code*/\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public {\n        address sender = msg.sender;\n        require(/**code*/sender!=operator, \"ERC721: approve to caller\");\n        \n        /**code*/\n        _operatorApprovals[sender][operator] = approved;\n        emit ApprovalForAll(sender, operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(\n        address owner,\n        address operator\n    ) public view returns (bool) {\n        /**code*/\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public {\n        require(\n            _isApprovedOrOwner(msg.sender, tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public {\n        require(\n            _isApprovedOrOwner(msg.sender, tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        /**code*/\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(\n        address spender,\n        uint256 tokenId\n    ) internal view returns (bool) {\n        require(\n            /**code*/\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n\n        /**code*/\n        address addressOwner = _owners[tokenId];\n        return addressOwner == spender \n                || _tokenApprovals[tokenId] == spender \n                || _operatorApprovals[addressOwner][spender];\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        require(\n           /**code*/\n           from == _owners[tokenId],\n            \"ERC721: transfer from incorrect owner\"\n        );\n\n        require(/**code*/to!=address(0), \"ERC721: transfer to the zero address\");\n\n        /**code*/\n        require(_isApprovedOrOwner(msg.sender, tokenId));\n        _owners[tokenId] = to;\n        _balances[to] += 1;\n        _balances[from] -= 1;\n        _tokenApprovals[tokenId] = address(0);\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        /**code*/\n        require(_owners[tokenId]==msg.sender||_operatorApprovals[_owners[tokenId]][msg.sender], \"ERC721: caller not token owner\");\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (isContract(to)) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    msg.sender,\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    function isContract(address account) public view returns (bool) {\n        uint256 size;\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n\ncontract BaseERC721Receiver is IERC721Receiver {\n    constructor() {}\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"1014/NFT/BaseERC721.sol": {
				"BaseERC721Receiver": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1014/NFT/BaseERC721.sol\":11133:11402  contract BaseERC721Receiver is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"1014/NFT/BaseERC721.sol\":11186:11202  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"1014/NFT/BaseERC721.sol\":11133:11402  contract BaseERC721Receiver is IERC721Receiver {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"1014/NFT/BaseERC721.sol\":11133:11402  contract BaseERC721Receiver is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"1014/NFT/BaseERC721.sol\":11208:11400  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"1014/NFT/BaseERC721.sol\":11338:11344  bytes4 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":11363:11393  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"1014/NFT/BaseERC721.sol\":11356:11393  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":11208:11400  function onERC721Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_33\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_35\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_36:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_38\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_41\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_42:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_44\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_23:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_24:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_50\n      tag_21\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1663:1785   */\n    tag_49:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_52\n      tag_22\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1833:1950   */\n    tag_51:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_54\n      tag_23\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1997:2125   */\n    tag_53:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3100   */\n    tag_6:\n        /* \"#utility.yul\":2234:2240   */\n      0x00\n        /* \"#utility.yul\":2242:2248   */\n      dup1\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2315:2318   */\n      0x80\n        /* \"#utility.yul\":2303:2312   */\n      dup7\n        /* \"#utility.yul\":2294:2301   */\n      dup9\n        /* \"#utility.yul\":2290:2313   */\n      sub\n        /* \"#utility.yul\":2286:2319   */\n      slt\n        /* \"#utility.yul\":2283:2403   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_57\n      tag_12\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2283:2403   */\n    tag_56:\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2467:2520   */\n      tag_58\n        /* \"#utility.yul\":2512:2519   */\n      dup9\n        /* \"#utility.yul\":2503:2509   */\n      dup3\n        /* \"#utility.yul\":2492:2501   */\n      dup10\n        /* \"#utility.yul\":2488:2510   */\n      add\n        /* \"#utility.yul\":2467:2520   */\n      tag_17\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2457:2520   */\n      swap6\n      pop\n        /* \"#utility.yul\":2413:2530   */\n      pop\n        /* \"#utility.yul\":2569:2571   */\n      0x20\n        /* \"#utility.yul\":2595:2648   */\n      tag_59\n        /* \"#utility.yul\":2640:2647   */\n      dup9\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup10\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_17\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2585:2648   */\n      swap5\n      pop\n        /* \"#utility.yul\":2540:2658   */\n      pop\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2723:2776   */\n      tag_60\n        /* \"#utility.yul\":2768:2775   */\n      dup9\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup10\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2723:2776   */\n      tag_20\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2713:2776   */\n      swap4\n      pop\n        /* \"#utility.yul\":2668:2786   */\n      pop\n        /* \"#utility.yul\":2853:2855   */\n      0x60\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"#utility.yul\":2825:2857   */\n      calldataload\n        /* \"#utility.yul\":2884:2902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2873:2903   */\n      gt\n        /* \"#utility.yul\":2870:2987   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2906:2985   */\n      tag_62\n      tag_13\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2870:2987   */\n    tag_61:\n        /* \"#utility.yul\":3019:3083   */\n      tag_63\n        /* \"#utility.yul\":3075:3082   */\n      dup9\n        /* \"#utility.yul\":3066:3072   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      dup10\n        /* \"#utility.yul\":3051:3073   */\n      add\n        /* \"#utility.yul\":3019:3083   */\n      tag_24\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":3001:3083   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2796:3093   */\n      pop\n        /* \"#utility.yul\":2137:3100   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3255   */\n    tag_25:\n        /* \"#utility.yul\":3142:3149   */\n      0x00\n        /* \"#utility.yul\":3182:3248   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3175:3180   */\n      dup3\n        /* \"#utility.yul\":3171:3249   */\n      and\n        /* \"#utility.yul\":3160:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3376   */\n    tag_26:\n        /* \"#utility.yul\":3346:3369   */\n      tag_66\n        /* \"#utility.yul\":3363:3368   */\n      dup2\n        /* \"#utility.yul\":3346:3369   */\n      tag_25\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":3341:3344   */\n      dup3\n        /* \"#utility.yul\":3334:3370   */\n      mstore\n        /* \"#utility.yul\":3261:3376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3382:3600   */\n    tag_9:\n        /* \"#utility.yul\":3473:3477   */\n      0x00\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3500:3509   */\n      dup3\n        /* \"#utility.yul\":3496:3514   */\n      add\n        /* \"#utility.yul\":3488:3514   */\n      swap1\n      pop\n        /* \"#utility.yul\":3524:3593   */\n      tag_68\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3524:3593   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3382:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208e2c5952659d80d099396c04a9da9db1028a311ee14da997e3ab68961f8a2f7f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_688": {
									"entryPoint": null,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102748061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063150b7a021461002d575b5f80fd5b61004760048036038101906100429190610167565b61005d565b6040516100549190610225565b60405180910390f35b5f63150b7a0260e01b905095945050505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a282610079565b9050919050565b6100b281610098565b81146100bc575f80fd5b50565b5f813590506100cd816100a9565b92915050565b5f819050919050565b6100e5816100d3565b81146100ef575f80fd5b50565b5f81359050610100816100dc565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261012757610126610106565b5b8235905067ffffffffffffffff8111156101445761014361010a565b5b6020830191508360018202830111156101605761015f61010e565b5b9250929050565b5f805f805f608086880312156101805761017f610071565b5b5f61018d888289016100bf565b955050602061019e888289016100bf565b94505060406101af888289016100f2565b935050606086013567ffffffffffffffff8111156101d0576101cf610075565b5b6101dc88828901610112565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61021f816101eb565b82525050565b5f6020820190506102385f830184610216565b9291505056fea26469706673582212208e2c5952659d80d099396c04a9da9db1028a311ee14da997e3ab68961f8a2f7f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2 DUP3 PUSH2 0x79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x98 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD DUP2 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5 DUP2 PUSH2 0xD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0xDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x127 JUMPI PUSH2 0x126 PUSH2 0x106 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144 JUMPI PUSH2 0x143 PUSH2 0x10A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x160 JUMPI PUSH2 0x15F PUSH2 0x10E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH2 0x17F PUSH2 0x71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D DUP9 DUP3 DUP10 ADD PUSH2 0xBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x19E DUP9 DUP3 DUP10 ADD PUSH2 0xBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AF DUP9 DUP3 DUP10 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0 JUMPI PUSH2 0x1CF PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC DUP9 DUP3 DUP10 ADD PUSH2 0x112 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F DUP2 PUSH2 0x1EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238 PUSH0 DUP4 ADD DUP5 PUSH2 0x216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0x2C MSIZE MSTORE PUSH6 0x9D80D099396C DIV 0xA9 0xDA SWAP14 0xB1 MUL DUP11 BALANCE 0x1E 0xE1 0x4D 0xA9 SWAP8 0xE3 0xAB PUSH9 0x961F8A2F7F64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "11133:269:0:-:0;;;11186:16;;;;;;;;;;11133:269;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_706": {
									"entryPoint": 93,
									"id": 706,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3603:9",
										"nodeType": "YulBlock",
										"src": "0:3603:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "748:87:9",
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nativeSrc": "758:29:9",
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nativeSrc": "767:20:9",
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nativeSrc": "796:33:9",
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nativeSrc": "796:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:9",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:9",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:9",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nativeSrc": "886:32:9",
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nativeSrc": "896:16:9",
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:9",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:9",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:9",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nativeSrc": "967:79:9",
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:9",
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nativeSrc": "1026:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nativeSrc": "1026:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nativeSrc": "997:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nativeSrc": "987:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nativeSrc": "980:43:9",
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nativeSrc": "977:63:9",
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:9",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nativeSrc": "1104:87:9",
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nativeSrc": "1114:29:9",
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nativeSrc": "1123:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nativeSrc": "1152:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nativeSrc": "1152:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:9",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:9",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:9",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nativeSrc": "1286:28:9",
													"nodeType": "YulBlock",
													"src": "1286:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1303:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1296:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:9"
																},
																"nativeSrc": "1296:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1296:12:9"
															},
															"nativeSrc": "1296:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1197:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:9"
											},
											{
												"body": {
													"nativeSrc": "1409:28:9",
													"nodeType": "YulBlock",
													"src": "1409:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1426:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1419:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:9"
																},
																"nativeSrc": "1419:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1419:12:9"
															},
															"nativeSrc": "1419:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1320:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:9"
											},
											{
												"body": {
													"nativeSrc": "1532:28:9",
													"nodeType": "YulBlock",
													"src": "1532:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1549:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1542:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:9"
																},
																"nativeSrc": "1542:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1542:12:9"
															},
															"nativeSrc": "1542:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1443:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:9"
											},
											{
												"body": {
													"nativeSrc": "1653:478:9",
													"nodeType": "YulBlock",
													"src": "1653:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1702:83:9",
																"nodeType": "YulBlock",
																"src": "1702:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1704:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:9"
																			},
																			"nativeSrc": "1704:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:9"
																		},
																		"nativeSrc": "1704:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1681:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1689:4:9",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1677:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:9"
																				},
																				"nativeSrc": "1677:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1696:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1673:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:9"
																		},
																		"nativeSrc": "1673:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1666:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:9"
																},
																"nativeSrc": "1666:35:9",
																"nodeType": "YulFunctionCall",
																"src": "1666:35:9"
															},
															"nativeSrc": "1663:122:9",
															"nodeType": "YulIf",
															"src": "1663:122:9"
														},
														{
															"nativeSrc": "1794:30:9",
															"nodeType": "YulAssignment",
															"src": "1794:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1817:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1804:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:9"
																},
																"nativeSrc": "1804:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1804:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1794:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1867:83:9",
																"nodeType": "YulBlock",
																"src": "1867:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1869:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:9"
																			},
																			"nativeSrc": "1869:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:9"
																		},
																		"nativeSrc": "1869:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1839:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1847:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1836:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:9"
																},
																"nativeSrc": "1836:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1836:30:9"
															},
															"nativeSrc": "1833:117:9",
															"nodeType": "YulIf",
															"src": "1833:117:9"
														},
														{
															"nativeSrc": "1959:29:9",
															"nodeType": "YulAssignment",
															"src": "1959:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1975:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1971:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:9"
																},
																"nativeSrc": "1971:17:9",
																"nodeType": "YulFunctionCall",
																"src": "1971:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1959:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2042:83:9",
																"nodeType": "YulBlock",
																"src": "2042:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2044:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:9"
																			},
																			"nativeSrc": "2044:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:9"
																		},
																		"nativeSrc": "2044:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2007:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2021:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2029:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2017:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:9"
																				},
																				"nativeSrc": "2017:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:9"
																		},
																		"nativeSrc": "2003:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2037:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2000:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:9"
																},
																"nativeSrc": "2000:41:9",
																"nodeType": "YulFunctionCall",
																"src": "2000:41:9"
															},
															"nativeSrc": "1997:128:9",
															"nodeType": "YulIf",
															"src": "1997:128:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "1579:552:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:9",
														"nodeType": "YulTypedName",
														"src": "1620:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:9",
														"nodeType": "YulTypedName",
														"src": "1628:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1636:8:9",
														"nodeType": "YulTypedName",
														"src": "1636:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1646:6:9",
														"nodeType": "YulTypedName",
														"src": "1646:6:9",
														"type": ""
													}
												],
												"src": "1579:552:9"
											},
											{
												"body": {
													"nativeSrc": "2273:827:9",
													"nodeType": "YulBlock",
													"src": "2273:827:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:9",
																"nodeType": "YulBlock",
																"src": "2320:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2322:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:9"
																			},
																			"nativeSrc": "2322:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:9"
																		},
																		"nativeSrc": "2322:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2294:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2294:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2303:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2290:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:9"
																		},
																		"nativeSrc": "2290:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2290:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2315:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2315:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2286:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:9"
																},
																"nativeSrc": "2286:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2286:33:9"
															},
															"nativeSrc": "2283:120:9",
															"nodeType": "YulIf",
															"src": "2283:120:9"
														},
														{
															"nativeSrc": "2413:117:9",
															"nodeType": "YulBlock",
															"src": "2413:117:9",
															"statements": [
																{
																	"nativeSrc": "2428:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2428:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2442:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2432:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2432:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2457:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2457:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2492:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2503:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2503:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2488:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:9"
																				},
																				"nativeSrc": "2488:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2488:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2512:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2467:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2467:20:9"
																		},
																		"nativeSrc": "2467:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2467:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2457:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2457:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2540:118:9",
															"nodeType": "YulBlock",
															"src": "2540:118:9",
															"statements": [
																{
																	"nativeSrc": "2555:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2555:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2569:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2559:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2559:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2585:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2585:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2620:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2631:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2616:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:9"
																				},
																				"nativeSrc": "2616:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2640:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2595:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:9"
																		},
																		"nativeSrc": "2595:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2585:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2668:118:9",
															"nodeType": "YulBlock",
															"src": "2668:118:9",
															"statements": [
																{
																	"nativeSrc": "2683:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2683:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2697:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2687:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2687:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2713:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2713:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2748:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2759:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2744:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:9"
																				},
																				"nativeSrc": "2744:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2768:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2723:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2723:20:9"
																		},
																		"nativeSrc": "2723:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2713:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2796:297:9",
															"nodeType": "YulBlock",
															"src": "2796:297:9",
															"statements": [
																{
																	"nativeSrc": "2811:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2853:2:9",
																						"nodeType": "YulLiteral",
																						"src": "2853:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:9"
																				},
																				"nativeSrc": "2838:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2825:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "2825:12:9"
																		},
																		"nativeSrc": "2825:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2815:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2904:83:9",
																		"nodeType": "YulBlock",
																		"src": "2904:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2906:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "2906:77:9"
																					},
																					"nativeSrc": "2906:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:79:9"
																				},
																				"nativeSrc": "2906:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2906:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2876:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2884:18:9",
																				"nodeType": "YulLiteral",
																				"src": "2884:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2873:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2873:2:9"
																		},
																		"nativeSrc": "2873:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2873:30:9"
																	},
																	"nativeSrc": "2870:117:9",
																	"nodeType": "YulIf",
																	"src": "2870:117:9"
																},
																{
																	"nativeSrc": "3001:82:9",
																	"nodeType": "YulAssignment",
																	"src": "3001:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3055:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3055:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3066:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3066:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3051:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:9"
																				},
																				"nativeSrc": "3051:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3051:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3075:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3075:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "3019:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "3019:31:9"
																		},
																		"nativeSrc": "3019:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3001:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3001:6:9"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3009:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3009:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "2137:963:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2211:9:9",
														"nodeType": "YulTypedName",
														"src": "2211:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2222:7:9",
														"nodeType": "YulTypedName",
														"src": "2222:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2234:6:9",
														"nodeType": "YulTypedName",
														"src": "2234:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2242:6:9",
														"nodeType": "YulTypedName",
														"src": "2242:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2250:6:9",
														"nodeType": "YulTypedName",
														"src": "2250:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2258:6:9",
														"nodeType": "YulTypedName",
														"src": "2258:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2266:6:9",
														"nodeType": "YulTypedName",
														"src": "2266:6:9",
														"type": ""
													}
												],
												"src": "2137:963:9"
											},
											{
												"body": {
													"nativeSrc": "3150:105:9",
													"nodeType": "YulBlock",
													"src": "3150:105:9",
													"statements": [
														{
															"nativeSrc": "3160:89:9",
															"nodeType": "YulAssignment",
															"src": "3160:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3175:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3175:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3182:66:9",
																		"nodeType": "YulLiteral",
																		"src": "3182:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3171:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:9"
																},
																"nativeSrc": "3171:78:9",
																"nodeType": "YulFunctionCall",
																"src": "3171:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3160:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3160:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "3106:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3132:5:9",
														"nodeType": "YulTypedName",
														"src": "3132:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3142:7:9",
														"nodeType": "YulTypedName",
														"src": "3142:7:9",
														"type": ""
													}
												],
												"src": "3106:149:9"
											},
											{
												"body": {
													"nativeSrc": "3324:52:9",
													"nodeType": "YulBlock",
													"src": "3324:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3341:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3341:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3363:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "3346:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "3346:16:9"
																		},
																		"nativeSrc": "3346:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3346:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:9"
																},
																"nativeSrc": "3334:36:9",
																"nodeType": "YulFunctionCall",
																"src": "3334:36:9"
															},
															"nativeSrc": "3334:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "3334:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "3261:115:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3312:5:9",
														"nodeType": "YulTypedName",
														"src": "3312:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3319:3:9",
														"nodeType": "YulTypedName",
														"src": "3319:3:9",
														"type": ""
													}
												],
												"src": "3261:115:9"
											},
											{
												"body": {
													"nativeSrc": "3478:122:9",
													"nodeType": "YulBlock",
													"src": "3478:122:9",
													"statements": [
														{
															"nativeSrc": "3488:26:9",
															"nodeType": "YulAssignment",
															"src": "3488:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3500:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3511:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3496:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:9"
																},
																"nativeSrc": "3496:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3496:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3488:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3488:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3566:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:9"
																		},
																		"nativeSrc": "3575:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "3524:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "3524:41:9"
																},
																"nativeSrc": "3524:69:9",
																"nodeType": "YulFunctionCall",
																"src": "3524:69:9"
															},
															"nativeSrc": "3524:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "3524:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "3382:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3450:9:9",
														"nodeType": "YulTypedName",
														"src": "3450:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3462:6:9",
														"nodeType": "YulTypedName",
														"src": "3462:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3473:4:9",
														"nodeType": "YulTypedName",
														"src": "3473:4:9",
														"type": ""
													}
												],
												"src": "3382:218:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063150b7a021461002d575b5f80fd5b61004760048036038101906100429190610167565b61005d565b6040516100549190610225565b60405180910390f35b5f63150b7a0260e01b905095945050505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a282610079565b9050919050565b6100b281610098565b81146100bc575f80fd5b50565b5f813590506100cd816100a9565b92915050565b5f819050919050565b6100e5816100d3565b81146100ef575f80fd5b50565b5f81359050610100816100dc565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261012757610126610106565b5b8235905067ffffffffffffffff8111156101445761014361010a565b5b6020830191508360018202830111156101605761015f61010e565b5b9250929050565b5f805f805f608086880312156101805761017f610071565b5b5f61018d888289016100bf565b955050602061019e888289016100bf565b94505060406101af888289016100f2565b935050606086013567ffffffffffffffff8111156101d0576101cf610075565b5b6101dc88828901610112565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61021f816101eb565b82525050565b5f6020820190506102385f830184610216565b9291505056fea26469706673582212208e2c5952659d80d099396c04a9da9db1028a311ee14da997e3ab68961f8a2f7f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2 DUP3 PUSH2 0x79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x98 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD DUP2 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5 DUP2 PUSH2 0xD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100 DUP2 PUSH2 0xDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x127 JUMPI PUSH2 0x126 PUSH2 0x106 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144 JUMPI PUSH2 0x143 PUSH2 0x10A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x160 JUMPI PUSH2 0x15F PUSH2 0x10E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH2 0x17F PUSH2 0x71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D DUP9 DUP3 DUP10 ADD PUSH2 0xBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x19E DUP9 DUP3 DUP10 ADD PUSH2 0xBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AF DUP9 DUP3 DUP10 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0 JUMPI PUSH2 0x1CF PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x1DC DUP9 DUP3 DUP10 ADD PUSH2 0x112 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F DUP2 PUSH2 0x1EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x238 PUSH0 DUP4 ADD DUP5 PUSH2 0x216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0x2C MSIZE MSTORE PUSH6 0x9D80D099396C DIV 0xA9 0xDA SWAP14 0xB1 MUL DUP11 BALANCE 0x1E 0xE1 0x4D 0xA9 SWAP8 0xE3 0xAB PUSH9 0x961F8A2F7F64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "11133:269:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11208:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;11338:6;11363:30;;;11356:37;;11208:192;;;;;;;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "125600",
								"executionCost": "169",
								"totalCost": "125769"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11186,
									"end": 11202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11133,
									"end": 11402,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e2c5952659d80d099396c04a9da9db1028a311ee14da997e3ab68961f8a2f7f64736f6c634300081a0033",
									".code": [
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11133,
											"end": 11402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11208,
											"end": 11400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11208,
											"end": 11400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11208,
											"end": 11400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11338,
											"end": 11344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11393,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 11363,
											"end": 11393,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11363,
											"end": 11393,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 11356,
											"end": 11393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11356,
											"end": 11393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11208,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2319,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2467,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2903,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2906,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3019,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2796,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3106,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3346,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3524,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1014/NFT/BaseERC721.sol\":\"BaseERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1014/NFT/BaseERC721.sol\":{\"keccak256\":\"0xdd2a684ad7041ebc8d93a29f9a584eb85373361f813979e5b7ef2e15ab0ca2ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14dc76cbbbc448fd7b7b3231b6e92d55d13d530c73d11d84b1b8df61814e24eb\",\"dweb:/ipfs/QmSVGaPwJJJ2yoodaFFtSDH2mXXmQU1jveMy7sKgJLxrKe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name`, a `symbol` and a `baseURI` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"mint(address,uint256)": {
								"details": "Mints `tokenId` and transfers it to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` must not exist. Emits a {Transfer} event."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1014/NFT/BaseERC721.sol\":340:11131  contract ERC721 is IERC721{... */\n  mstore(0x40, 0x80)\n    /* \"1014/NFT/BaseERC721.sol\":1131:1345  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"1014/NFT/BaseERC721.sol\":1277:1282  name_ */\n  dup3\n    /* \"1014/NFT/BaseERC721.sol\":1269:1274  _name */\n  0x00\n    /* \"1014/NFT/BaseERC721.sol\":1269:1282  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"1014/NFT/BaseERC721.sol\":1302:1309  symbol_ */\n  dup2\n    /* \"1014/NFT/BaseERC721.sol\":1292:1299  _symbol */\n  0x01\n    /* \"1014/NFT/BaseERC721.sol\":1292:1309  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"1014/NFT/BaseERC721.sol\":1330:1338  baseURI_ */\n  dup1\n    /* \"1014/NFT/BaseERC721.sol\":1319:1327  _baseURI */\n  0x02\n    /* \"1014/NFT/BaseERC721.sol\":1319:1338  _baseURI = baseURI_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_9:\n  pop\n    /* \"1014/NFT/BaseERC721.sol\":1131:1345  constructor(... */\n  pop\n  pop\n  pop\n    /* \"1014/NFT/BaseERC721.sol\":340:11131  contract ERC721 is IERC721{... */\n  jump(tag_10)\n    /* \"#utility.yul\":7:82   */\ntag_11:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_13:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_14:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_15:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_16:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_17:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_18:\n    /* \"#utility.yul\":957:984   */\n  tag_52\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_16\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_54\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1030:1118   */\ntag_53:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_19:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_56\n  tag_11\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_18\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_20:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_60\n  tag_17\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1434:1490   */\ntag_59:\n    /* \"#utility.yul\":1508:1537   */\n  tag_61\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_16\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_21:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_22:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_64\n    /* \"#utility.yul\":1885:1934   */\n  tag_65\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_20\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1869:1935   */\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_67\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2010:2122   */\ntag_66:\n    /* \"#utility.yul\":2131:2183   */\n  tag_68\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_21\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_23:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_71\n  tag_14\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2292:2414   */\ntag_70:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_72\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3752   */\ntag_3:\n    /* \"#utility.yul\":2688:2694   */\n  0x00\n    /* \"#utility.yul\":2696:2702   */\n  dup1\n    /* \"#utility.yul\":2704:2710   */\n  0x00\n    /* \"#utility.yul\":2753:2755   */\n  0x60\n    /* \"#utility.yul\":2741:2750   */\n  dup5\n    /* \"#utility.yul\":2732:2739   */\n  dup7\n    /* \"#utility.yul\":2728:2751   */\n  sub\n    /* \"#utility.yul\":2724:2756   */\n  slt\n    /* \"#utility.yul\":2721:2840   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2759:2838   */\n  tag_75\n  tag_12\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2721:2840   */\ntag_74:\n    /* \"#utility.yul\":2900:2901   */\n  0x00\n    /* \"#utility.yul\":2889:2898   */\n  dup5\n    /* \"#utility.yul\":2885:2902   */\n  add\n    /* \"#utility.yul\":2879:2903   */\n  mload\n    /* \"#utility.yul\":2930:2948   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2922:2928   */\n  dup2\n    /* \"#utility.yul\":2919:2949   */\n  gt\n    /* \"#utility.yul\":2916:3033   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2952:3031   */\n  tag_77\n  tag_13\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2916:3033   */\ntag_76:\n    /* \"#utility.yul\":3057:3131   */\n  tag_78\n    /* \"#utility.yul\":3123:3130   */\n  dup7\n    /* \"#utility.yul\":3114:3120   */\n  dup3\n    /* \"#utility.yul\":3103:3112   */\n  dup8\n    /* \"#utility.yul\":3099:3121   */\n  add\n    /* \"#utility.yul\":3057:3131   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3047:3131   */\n  swap4\n  pop\n    /* \"#utility.yul\":2850:3141   */\n  pop\n    /* \"#utility.yul\":3201:3203   */\n  0x20\n    /* \"#utility.yul\":3190:3199   */\n  dup5\n    /* \"#utility.yul\":3186:3204   */\n  add\n    /* \"#utility.yul\":3180:3205   */\n  mload\n    /* \"#utility.yul\":3232:3250   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3224:3230   */\n  dup2\n    /* \"#utility.yul\":3221:3251   */\n  gt\n    /* \"#utility.yul\":3218:3335   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3254:3333   */\n  tag_80\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3218:3335   */\ntag_79:\n    /* \"#utility.yul\":3359:3433   */\n  tag_81\n    /* \"#utility.yul\":3425:3432   */\n  dup7\n    /* \"#utility.yul\":3416:3422   */\n  dup3\n    /* \"#utility.yul\":3405:3414   */\n  dup8\n    /* \"#utility.yul\":3401:3423   */\n  add\n    /* \"#utility.yul\":3359:3433   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3349:3433   */\n  swap3\n  pop\n    /* \"#utility.yul\":3151:3443   */\n  pop\n    /* \"#utility.yul\":3503:3505   */\n  0x40\n    /* \"#utility.yul\":3492:3501   */\n  dup5\n    /* \"#utility.yul\":3488:3506   */\n  add\n    /* \"#utility.yul\":3482:3507   */\n  mload\n    /* \"#utility.yul\":3534:3552   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3526:3532   */\n  dup2\n    /* \"#utility.yul\":3523:3553   */\n  gt\n    /* \"#utility.yul\":3520:3637   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3556:3635   */\n  tag_83\n  tag_13\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3520:3637   */\ntag_82:\n    /* \"#utility.yul\":3661:3735   */\n  tag_84\n    /* \"#utility.yul\":3727:3734   */\n  dup7\n    /* \"#utility.yul\":3718:3724   */\n  dup3\n    /* \"#utility.yul\":3707:3716   */\n  dup8\n    /* \"#utility.yul\":3703:3725   */\n  add\n    /* \"#utility.yul\":3661:3735   */\n  tag_23\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3651:3735   */\n  swap2\n  pop\n    /* \"#utility.yul\":3453:3745   */\n  pop\n    /* \"#utility.yul\":2570:3752   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3758:3857   */\ntag_24:\n    /* \"#utility.yul\":3810:3816   */\n  0x00\n    /* \"#utility.yul\":3844:3849   */\n  dup2\n    /* \"#utility.yul\":3838:3850   */\n  mload\n    /* \"#utility.yul\":3828:3850   */\n  swap1\n  pop\n    /* \"#utility.yul\":3758:3857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3863:4043   */\ntag_25:\n    /* \"#utility.yul\":3911:3988   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3908:3909   */\n  0x00\n    /* \"#utility.yul\":3901:3989   */\n  mstore\n    /* \"#utility.yul\":4008:4012   */\n  0x22\n    /* \"#utility.yul\":4005:4006   */\n  0x04\n    /* \"#utility.yul\":3998:4013   */\n  mstore\n    /* \"#utility.yul\":4032:4036   */\n  0x24\n    /* \"#utility.yul\":4029:4030   */\n  0x00\n    /* \"#utility.yul\":4022:4037   */\n  revert\n    /* \"#utility.yul\":4049:4369   */\ntag_26:\n    /* \"#utility.yul\":4093:4099   */\n  0x00\n    /* \"#utility.yul\":4130:4131   */\n  0x02\n    /* \"#utility.yul\":4124:4128   */\n  dup3\n    /* \"#utility.yul\":4120:4132   */\n  div\n    /* \"#utility.yul\":4110:4132   */\n  swap1\n  pop\n    /* \"#utility.yul\":4177:4178   */\n  0x01\n    /* \"#utility.yul\":4171:4175   */\n  dup3\n    /* \"#utility.yul\":4167:4179   */\n  and\n    /* \"#utility.yul\":4198:4216   */\n  dup1\n    /* \"#utility.yul\":4188:4269   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4254:4258   */\n  0x7f\n    /* \"#utility.yul\":4246:4252   */\n  dup3\n    /* \"#utility.yul\":4242:4259   */\n  and\n    /* \"#utility.yul\":4232:4259   */\n  swap2\n  pop\n    /* \"#utility.yul\":4188:4269   */\ntag_88:\n    /* \"#utility.yul\":4316:4318   */\n  0x20\n    /* \"#utility.yul\":4308:4314   */\n  dup3\n    /* \"#utility.yul\":4305:4319   */\n  lt\n    /* \"#utility.yul\":4285:4303   */\n  dup2\n    /* \"#utility.yul\":4282:4320   */\n  sub\n    /* \"#utility.yul\":4279:4363   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4335:4353   */\n  tag_90\n  tag_25\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4279:4363   */\ntag_89:\n    /* \"#utility.yul\":4100:4369   */\n  pop\n    /* \"#utility.yul\":4049:4369   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4375:4516   */\ntag_27:\n    /* \"#utility.yul\":4424:4428   */\n  0x00\n    /* \"#utility.yul\":4447:4450   */\n  dup2\n    /* \"#utility.yul\":4439:4450   */\n  swap1\n  pop\n    /* \"#utility.yul\":4470:4473   */\n  dup2\n    /* \"#utility.yul\":4467:4468   */\n  0x00\n    /* \"#utility.yul\":4460:4474   */\n  mstore\n    /* \"#utility.yul\":4504:4508   */\n  0x20\n    /* \"#utility.yul\":4501:4502   */\n  0x00\n    /* \"#utility.yul\":4491:4509   */\n  keccak256\n    /* \"#utility.yul\":4483:4509   */\n  swap1\n  pop\n    /* \"#utility.yul\":4375:4516   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4522:4615   */\ntag_28:\n    /* \"#utility.yul\":4559:4565   */\n  0x00\n    /* \"#utility.yul\":4606:4608   */\n  0x20\n    /* \"#utility.yul\":4601:4603   */\n  0x1f\n    /* \"#utility.yul\":4594:4599   */\n  dup4\n    /* \"#utility.yul\":4590:4604   */\n  add\n    /* \"#utility.yul\":4586:4609   */\n  div\n    /* \"#utility.yul\":4576:4609   */\n  swap1\n  pop\n    /* \"#utility.yul\":4522:4615   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4621:4728   */\ntag_29:\n    /* \"#utility.yul\":4665:4673   */\n  0x00\n    /* \"#utility.yul\":4715:4720   */\n  dup3\n    /* \"#utility.yul\":4709:4713   */\n  dup3\n    /* \"#utility.yul\":4705:4721   */\n  shl\n    /* \"#utility.yul\":4684:4721   */\n  swap1\n  pop\n    /* \"#utility.yul\":4621:4728   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4734:5127   */\ntag_30:\n    /* \"#utility.yul\":4803:4809   */\n  0x00\n    /* \"#utility.yul\":4853:4854   */\n  0x08\n    /* \"#utility.yul\":4841:4851   */\n  dup4\n    /* \"#utility.yul\":4837:4855   */\n  mul\n    /* \"#utility.yul\":4876:4973   */\n  tag_95\n    /* \"#utility.yul\":4906:4972   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4895:4904   */\n  dup3\n    /* \"#utility.yul\":4876:4973   */\n  tag_29\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4994:5033   */\n  tag_96\n    /* \"#utility.yul\":5024:5032   */\n  dup7\n    /* \"#utility.yul\":5013:5022   */\n  dup4\n    /* \"#utility.yul\":4994:5033   */\n  tag_29\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4982:5033   */\n  swap6\n  pop\n    /* \"#utility.yul\":5066:5070   */\n  dup1\n    /* \"#utility.yul\":5062:5071   */\n  not\n    /* \"#utility.yul\":5055:5060   */\n  dup5\n    /* \"#utility.yul\":5051:5072   */\n  and\n    /* \"#utility.yul\":5042:5072   */\n  swap4\n  pop\n    /* \"#utility.yul\":5115:5119   */\n  dup1\n    /* \"#utility.yul\":5105:5113   */\n  dup7\n    /* \"#utility.yul\":5101:5120   */\n  and\n    /* \"#utility.yul\":5094:5099   */\n  dup5\n    /* \"#utility.yul\":5091:5121   */\n  or\n    /* \"#utility.yul\":5081:5121   */\n  swap3\n  pop\n    /* \"#utility.yul\":4810:5127   */\n  pop\n  pop\n    /* \"#utility.yul\":4734:5127   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5133:5210   */\ntag_31:\n    /* \"#utility.yul\":5170:5177   */\n  0x00\n    /* \"#utility.yul\":5199:5204   */\n  dup2\n    /* \"#utility.yul\":5188:5204   */\n  swap1\n  pop\n    /* \"#utility.yul\":5133:5210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5216:5276   */\ntag_32:\n    /* \"#utility.yul\":5244:5247   */\n  0x00\n    /* \"#utility.yul\":5265:5270   */\n  dup2\n    /* \"#utility.yul\":5258:5270   */\n  swap1\n  pop\n    /* \"#utility.yul\":5216:5276   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5282:5424   */\ntag_33:\n    /* \"#utility.yul\":5332:5341   */\n  0x00\n    /* \"#utility.yul\":5365:5418   */\n  tag_100\n    /* \"#utility.yul\":5383:5417   */\n  tag_101\n    /* \"#utility.yul\":5392:5416   */\n  tag_102\n    /* \"#utility.yul\":5410:5415   */\n  dup5\n    /* \"#utility.yul\":5392:5416   */\n  tag_31\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5383:5417   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5365:5418   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5352:5418   */\n  swap1\n  pop\n    /* \"#utility.yul\":5282:5424   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5430:5505   */\ntag_34:\n    /* \"#utility.yul\":5473:5476   */\n  0x00\n    /* \"#utility.yul\":5494:5499   */\n  dup2\n    /* \"#utility.yul\":5487:5499   */\n  swap1\n  pop\n    /* \"#utility.yul\":5430:5505   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5511:5780   */\ntag_35:\n    /* \"#utility.yul\":5621:5660   */\n  tag_105\n    /* \"#utility.yul\":5652:5659   */\n  dup4\n    /* \"#utility.yul\":5621:5660   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5682:5773   */\n  tag_106\n    /* \"#utility.yul\":5731:5772   */\n  tag_107\n    /* \"#utility.yul\":5755:5771   */\n  dup3\n    /* \"#utility.yul\":5731:5772   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5723:5729   */\n  dup5\n    /* \"#utility.yul\":5716:5720   */\n  dup5\n    /* \"#utility.yul\":5710:5721   */\n  sload\n    /* \"#utility.yul\":5682:5773   */\n  tag_30\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5676:5680   */\n  dup3\n    /* \"#utility.yul\":5669:5774   */\n  sstore\n    /* \"#utility.yul\":5587:5780   */\n  pop\n    /* \"#utility.yul\":5511:5780   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5786:5859   */\ntag_36:\n    /* \"#utility.yul\":5831:5834   */\n  0x00\n    /* \"#utility.yul\":5786:5859   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5865:6054   */\ntag_37:\n    /* \"#utility.yul\":5942:5974   */\n  tag_110\n  tag_36\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5983:6048   */\n  tag_111\n    /* \"#utility.yul\":6041:6047   */\n  dup2\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6027:6031   */\n  dup5\n    /* \"#utility.yul\":5983:6048   */\n  tag_35\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5918:6054   */\n  pop\n    /* \"#utility.yul\":5865:6054   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6060:6246   */\ntag_38:\n    /* \"#utility.yul\":6120:6240   */\ntag_113:\n    /* \"#utility.yul\":6137:6140   */\n  dup2\n    /* \"#utility.yul\":6130:6135   */\n  dup2\n    /* \"#utility.yul\":6127:6141   */\n  lt\n    /* \"#utility.yul\":6120:6240   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":6191:6230   */\n  tag_116\n    /* \"#utility.yul\":6228:6229   */\n  0x00\n    /* \"#utility.yul\":6221:6226   */\n  dup3\n    /* \"#utility.yul\":6191:6230   */\n  tag_37\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6164:6165   */\n  0x01\n    /* \"#utility.yul\":6157:6162   */\n  dup2\n    /* \"#utility.yul\":6153:6166   */\n  add\n    /* \"#utility.yul\":6144:6166   */\n  swap1\n  pop\n    /* \"#utility.yul\":6120:6240   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":6060:6246   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6252:6795   */\ntag_39:\n    /* \"#utility.yul\":6353:6355   */\n  0x1f\n    /* \"#utility.yul\":6348:6351   */\n  dup3\n    /* \"#utility.yul\":6345:6356   */\n  gt\n    /* \"#utility.yul\":6342:6788   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6387:6425   */\n  tag_119\n    /* \"#utility.yul\":6419:6424   */\n  dup2\n    /* \"#utility.yul\":6387:6425   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6471:6500   */\n  tag_120\n    /* \"#utility.yul\":6489:6499   */\n  dup5\n    /* \"#utility.yul\":6471:6500   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6461:6469   */\n  dup2\n    /* \"#utility.yul\":6457:6501   */\n  add\n    /* \"#utility.yul\":6654:6656   */\n  0x20\n    /* \"#utility.yul\":6642:6652   */\n  dup6\n    /* \"#utility.yul\":6639:6657   */\n  lt\n    /* \"#utility.yul\":6636:6685   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6675:6683   */\n  dup2\n    /* \"#utility.yul\":6660:6683   */\n  swap1\n  pop\n    /* \"#utility.yul\":6636:6685   */\ntag_121:\n    /* \"#utility.yul\":6698:6778   */\n  tag_122\n    /* \"#utility.yul\":6754:6776   */\n  tag_123\n    /* \"#utility.yul\":6772:6775   */\n  dup6\n    /* \"#utility.yul\":6754:6776   */\n  tag_28\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6744:6752   */\n  dup4\n    /* \"#utility.yul\":6740:6777   */\n  add\n    /* \"#utility.yul\":6727:6738   */\n  dup3\n    /* \"#utility.yul\":6698:6778   */\n  tag_38\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6357:6788   */\n  pop\n  pop\n    /* \"#utility.yul\":6342:6788   */\ntag_118:\n    /* \"#utility.yul\":6252:6795   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6801:6918   */\ntag_40:\n    /* \"#utility.yul\":6855:6863   */\n  0x00\n    /* \"#utility.yul\":6905:6910   */\n  dup3\n    /* \"#utility.yul\":6899:6903   */\n  dup3\n    /* \"#utility.yul\":6895:6911   */\n  shr\n    /* \"#utility.yul\":6874:6911   */\n  swap1\n  pop\n    /* \"#utility.yul\":6801:6918   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6924:7093   */\ntag_41:\n    /* \"#utility.yul\":6968:6974   */\n  0x00\n    /* \"#utility.yul\":7001:7052   */\n  tag_126\n    /* \"#utility.yul\":7049:7050   */\n  0x00\n    /* \"#utility.yul\":7045:7051   */\n  not\n    /* \"#utility.yul\":7037:7042   */\n  dup5\n    /* \"#utility.yul\":7034:7035   */\n  0x08\n    /* \"#utility.yul\":7030:7043   */\n  mul\n    /* \"#utility.yul\":7001:7052   */\n  tag_40\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6997:7053   */\n  not\n    /* \"#utility.yul\":7082:7086   */\n  dup1\n    /* \"#utility.yul\":7076:7080   */\n  dup4\n    /* \"#utility.yul\":7072:7087   */\n  and\n    /* \"#utility.yul\":7062:7087   */\n  swap2\n  pop\n    /* \"#utility.yul\":6975:7093   */\n  pop\n    /* \"#utility.yul\":6924:7093   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7098:7393   */\ntag_42:\n    /* \"#utility.yul\":7174:7178   */\n  0x00\n    /* \"#utility.yul\":7320:7349   */\n  tag_128\n    /* \"#utility.yul\":7345:7348   */\n  dup4\n    /* \"#utility.yul\":7339:7343   */\n  dup4\n    /* \"#utility.yul\":7320:7349   */\n  tag_41\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7312:7349   */\n  swap2\n  pop\n    /* \"#utility.yul\":7382:7385   */\n  dup3\n    /* \"#utility.yul\":7379:7380   */\n  0x02\n    /* \"#utility.yul\":7375:7386   */\n  mul\n    /* \"#utility.yul\":7369:7373   */\n  dup3\n    /* \"#utility.yul\":7366:7387   */\n  or\n    /* \"#utility.yul\":7358:7387   */\n  swap1\n  pop\n    /* \"#utility.yul\":7098:7393   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7398:8793   */\ntag_7:\n    /* \"#utility.yul\":7515:7552   */\n  tag_130\n    /* \"#utility.yul\":7548:7551   */\n  dup3\n    /* \"#utility.yul\":7515:7552   */\n  tag_24\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7617:7635   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7609:7615   */\n  dup2\n    /* \"#utility.yul\":7606:7636   */\n  gt\n    /* \"#utility.yul\":7603:7659   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":7639:7657   */\n  tag_132\n  tag_17\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7603:7659   */\ntag_131:\n    /* \"#utility.yul\":7683:7721   */\n  tag_133\n    /* \"#utility.yul\":7715:7719   */\n  dup3\n    /* \"#utility.yul\":7709:7720   */\n  sload\n    /* \"#utility.yul\":7683:7721   */\n  tag_26\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7768:7835   */\n  tag_134\n    /* \"#utility.yul\":7828:7834   */\n  dup3\n    /* \"#utility.yul\":7820:7826   */\n  dup3\n    /* \"#utility.yul\":7814:7818   */\n  dup6\n    /* \"#utility.yul\":7768:7835   */\n  tag_39\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7862:7863   */\n  0x00\n    /* \"#utility.yul\":7886:7890   */\n  0x20\n    /* \"#utility.yul\":7873:7890   */\n  swap1\n  pop\n    /* \"#utility.yul\":7918:7920   */\n  0x1f\n    /* \"#utility.yul\":7910:7916   */\n  dup4\n    /* \"#utility.yul\":7907:7921   */\n  gt\n    /* \"#utility.yul\":7935:7936   */\n  0x01\n    /* \"#utility.yul\":7930:8548   */\n  dup2\n  eq\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8592:8593   */\n  0x00\n    /* \"#utility.yul\":8609:8615   */\n  dup5\n    /* \"#utility.yul\":8606:8683   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8658:8667   */\n  dup3\n    /* \"#utility.yul\":8653:8656   */\n  dup8\n    /* \"#utility.yul\":8649:8668   */\n  add\n    /* \"#utility.yul\":8643:8669   */\n  mload\n    /* \"#utility.yul\":8634:8669   */\n  swap1\n  pop\n    /* \"#utility.yul\":8606:8683   */\ntag_137:\n    /* \"#utility.yul\":8709:8776   */\n  tag_138\n    /* \"#utility.yul\":8769:8775   */\n  dup6\n    /* \"#utility.yul\":8762:8767   */\n  dup3\n    /* \"#utility.yul\":8709:8776   */\n  tag_42\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":8703:8707   */\n  dup7\n    /* \"#utility.yul\":8696:8777   */\n  sstore\n    /* \"#utility.yul\":8565:8787   */\n  pop\n    /* \"#utility.yul\":7900:8787   */\n  jump(tag_135)\n    /* \"#utility.yul\":7930:8548   */\ntag_136:\n    /* \"#utility.yul\":7982:7986   */\n  0x1f\n    /* \"#utility.yul\":7978:7987   */\n  not\n    /* \"#utility.yul\":7970:7976   */\n  dup5\n    /* \"#utility.yul\":7966:7988   */\n  and\n    /* \"#utility.yul\":8016:8053   */\n  tag_139\n    /* \"#utility.yul\":8048:8052   */\n  dup7\n    /* \"#utility.yul\":8016:8053   */\n  tag_27\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8075:8076   */\n  0x00\n    /* \"#utility.yul\":8089:8297   */\ntag_140:\n    /* \"#utility.yul\":8103:8110   */\n  dup3\n    /* \"#utility.yul\":8100:8101   */\n  dup2\n    /* \"#utility.yul\":8097:8111   */\n  lt\n    /* \"#utility.yul\":8089:8297   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8182:8191   */\n  dup5\n    /* \"#utility.yul\":8177:8180   */\n  dup10\n    /* \"#utility.yul\":8173:8192   */\n  add\n    /* \"#utility.yul\":8167:8193   */\n  mload\n    /* \"#utility.yul\":8159:8165   */\n  dup3\n    /* \"#utility.yul\":8152:8194   */\n  sstore\n    /* \"#utility.yul\":8233:8234   */\n  0x01\n    /* \"#utility.yul\":8225:8231   */\n  dup3\n    /* \"#utility.yul\":8221:8235   */\n  add\n    /* \"#utility.yul\":8211:8235   */\n  swap2\n  pop\n    /* \"#utility.yul\":8280:8282   */\n  0x20\n    /* \"#utility.yul\":8269:8278   */\n  dup6\n    /* \"#utility.yul\":8265:8283   */\n  add\n    /* \"#utility.yul\":8252:8283   */\n  swap5\n  pop\n    /* \"#utility.yul\":8126:8130   */\n  0x20\n    /* \"#utility.yul\":8123:8124   */\n  dup2\n    /* \"#utility.yul\":8119:8131   */\n  add\n    /* \"#utility.yul\":8114:8131   */\n  swap1\n  pop\n    /* \"#utility.yul\":8089:8297   */\n  jump(tag_140)\ntag_142:\n    /* \"#utility.yul\":8325:8331   */\n  dup7\n    /* \"#utility.yul\":8316:8323   */\n  dup4\n    /* \"#utility.yul\":8313:8332   */\n  lt\n    /* \"#utility.yul\":8310:8489   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8383:8392   */\n  dup5\n    /* \"#utility.yul\":8378:8381   */\n  dup10\n    /* \"#utility.yul\":8374:8393   */\n  add\n    /* \"#utility.yul\":8368:8394   */\n  mload\n    /* \"#utility.yul\":8426:8474   */\n  tag_144\n    /* \"#utility.yul\":8468:8472   */\n  0x1f\n    /* \"#utility.yul\":8460:8466   */\n  dup10\n    /* \"#utility.yul\":8456:8473   */\n  and\n    /* \"#utility.yul\":8445:8454   */\n  dup3\n    /* \"#utility.yul\":8426:8474   */\n  tag_41\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8418:8424   */\n  dup4\n    /* \"#utility.yul\":8411:8475   */\n  sstore\n    /* \"#utility.yul\":8333:8489   */\n  pop\n    /* \"#utility.yul\":8310:8489   */\ntag_143:\n    /* \"#utility.yul\":8535:8536   */\n  0x01\n    /* \"#utility.yul\":8531:8532   */\n  0x02\n    /* \"#utility.yul\":8523:8529   */\n  dup9\n    /* \"#utility.yul\":8519:8533   */\n  mul\n    /* \"#utility.yul\":8515:8537   */\n  add\n    /* \"#utility.yul\":8509:8513   */\n  dup9\n    /* \"#utility.yul\":8502:8538   */\n  sstore\n    /* \"#utility.yul\":7937:8548   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7900:8787   */\ntag_135:\n  pop\n    /* \"#utility.yul\":7490:8793   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7398:8793   */\n  pop\n  pop\n  jump\t// out\n    /* \"1014/NFT/BaseERC721.sol\":340:11131  contract ERC721 is IERC721{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"1014/NFT/BaseERC721.sol\":340:11131  contract ERC721 is IERC721{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42842e0e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x16279055\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"1014/NFT/BaseERC721.sol\":1412:1741  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":1807:1906  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":3994:4280  function getApproved(uint256 tokenId) public view returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":3454:3933  function approve(address to, uint256 tokenId) public {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":10961:11129  function isContract(address account) public view returns (bool) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":4985:5248  function transferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":2684:3037  function mint(address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":5314:5476  function safeTransferFrom(... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":3275:3397  function ownerOf(uint256 tokenId) public view returns (address) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":3096:3218  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":1970:2073  function symbol() public view returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":4347:4672  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":5542:5877  function safeTransferFrom(... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"1014/NFT/BaseERC721.sol\":2139:2449  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":4738:4923  function isApprovedForAll(... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1014/NFT/BaseERC721.sol\":1412:1741  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_24:\n        /* \"1014/NFT/BaseERC721.sol\":1480:1484  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":1530:1540  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"1014/NFT/BaseERC721.sol\":1515:1540  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"1014/NFT/BaseERC721.sol\":1515:1526  interfaceId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":1515:1540  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":1515:1615  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":1605:1615  0x80ac58cd */\n      0x80ac58cd\n        /* \"1014/NFT/BaseERC721.sol\":1590:1615  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"1014/NFT/BaseERC721.sol\":1590:1601  interfaceId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":1590:1615  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":1515:1615  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_86:\n        /* \"1014/NFT/BaseERC721.sol\":1515:1690  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":1680:1690  0x5b5e139f */\n      0x5b5e139f\n        /* \"1014/NFT/BaseERC721.sol\":1665:1690  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"1014/NFT/BaseERC721.sol\":1665:1676  interfaceId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":1665:1690  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":1515:1690  interfaceId == 0x01ffc9a7 || // ERC165 Interface ID for ERC165... */\n    tag_87:\n        /* \"1014/NFT/BaseERC721.sol\":1496:1690  return... */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":1412:1741  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":1807:1906  function name() public view returns (string memory) {... */\n    tag_28:\n        /* \"1014/NFT/BaseERC721.sol\":1844:1857  string memory */\n      0x60\n        /* \"1014/NFT/BaseERC721.sol\":1894:1899  _name */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":1887:1899  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":1807:1906  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":3994:4280  function getApproved(uint256 tokenId) public view returns (address) {... */\n    tag_34:\n        /* \"1014/NFT/BaseERC721.sol\":4053:4060  address */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4141:4142  0 */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":4115:4143  _owners[tokenId]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4115:4122  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":4115:4131  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4123:4130  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":4115:4131  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4115:4143  _owners[tokenId]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":4072:4213  require(... */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"1014/NFT/BaseERC721.sol\":4249:4264  _tokenApprovals */\n      0x05\n        /* \"1014/NFT/BaseERC721.sol\":4249:4273  _tokenApprovals[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4265:4272  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":4249:4273  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4242:4273  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3994:4280  function getApproved(uint256 tokenId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":3454:3933  function approve(address to, uint256 tokenId) public {... */\n    tag_40:\n        /* \"1014/NFT/BaseERC721.sol\":3517:3530  address owner */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3533:3549  ownerOf(tokenId) */\n      tag_100\n        /* \"1014/NFT/BaseERC721.sol\":3541:3548  tokenId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":3533:3540  ownerOf */\n      tag_58\n        /* \"1014/NFT/BaseERC721.sol\":3533:3549  ownerOf(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"1014/NFT/BaseERC721.sol\":3517:3549  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3583:3585  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":3576:3585  owner!=to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3576:3581  owner */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":3576:3585  owner!=to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":3559:3623  require(/**code*/owner!=to, \"ERC721: approval to current owner\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"1014/NFT/BaseERC721.sol\":3689:3694  owner */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":3677:3694  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3677:3687  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":3677:3694  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":3677:3749  msg.sender==owner ... */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3725:3740  _tokenApprovals */\n      0x05\n        /* \"1014/NFT/BaseERC721.sol\":3725:3749  _tokenApprovals[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3741:3748  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":3725:3749  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3711:3749  msg.sender == _tokenApprovals[tokenId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3711:3721  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":3711:3749  msg.sender == _tokenApprovals[tokenId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":3677:3749  msg.sender==owner ... */\n    tag_104:\n        /* \"1014/NFT/BaseERC721.sol\":3677:3813  msg.sender==owner ... */\n      dup1\n      tag_105\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3765:3783  _operatorApprovals */\n      0x06\n        /* \"1014/NFT/BaseERC721.sol\":3765:3801  _operatorApprovals[_owners[tokenId]] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3784:3791  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":3784:3800  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3792:3799  tokenId */\n      dup6\n        /* \"1014/NFT/BaseERC721.sol\":3784:3800  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3765:3801  _operatorApprovals[_owners[tokenId]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"1014/NFT/BaseERC721.sol\":3765:3813  _operatorApprovals[_owners[tokenId]][msg.sender] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3802:3812  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":3765:3813  _operatorApprovals[_owners[tokenId]][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3677:3813  msg.sender==owner ... */\n    tag_105:\n        /* \"1014/NFT/BaseERC721.sol\":3634:3895  require(... */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"1014/NFT/BaseERC721.sol\":3905:3926  _approve(to, tokenId) */\n      tag_109\n        /* \"1014/NFT/BaseERC721.sol\":3914:3916  to */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":3918:3925  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":3905:3913  _approve */\n      tag_110\n        /* \"1014/NFT/BaseERC721.sol\":3905:3926  _approve(to, tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"1014/NFT/BaseERC721.sol\":3507:3933  {... */\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3454:3933  function approve(address to, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":10961:11129  function isContract(address account) public view returns (bool) {... */\n    tag_44:\n        /* \"1014/NFT/BaseERC721.sol\":11019:11023  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":11035:11047  uint256 size */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":11088:11095  account */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":11076:11096  extcodesize(account) */\n      extcodesize\n        /* \"1014/NFT/BaseERC721.sol\":11068:11096  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":11121:11122  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":11114:11118  size */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":11114:11122  size > 0 */\n      gt\n        /* \"1014/NFT/BaseERC721.sol\":11107:11122  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":10961:11129  function isContract(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":4985:5248  function transferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_49:\n        /* \"1014/NFT/BaseERC721.sol\":5088:5127  _isApprovedOrOwner(msg.sender, tokenId) */\n      tag_113\n        /* \"1014/NFT/BaseERC721.sol\":5107:5117  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":5119:5126  tokenId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":5088:5106  _isApprovedOrOwner */\n      tag_114\n        /* \"1014/NFT/BaseERC721.sol\":5088:5127  _isApprovedOrOwner(msg.sender, tokenId) */\n      jump\t// in\n    tag_113:\n        /* \"1014/NFT/BaseERC721.sol\":5067:5202  require(... */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"1014/NFT/BaseERC721.sol\":5213:5241  _transfer(from, to, tokenId) */\n      tag_118\n        /* \"1014/NFT/BaseERC721.sol\":5223:5227  from */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5229:5231  to */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5233:5240  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5213:5222  _transfer */\n      tag_119\n        /* \"1014/NFT/BaseERC721.sol\":5213:5241  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"1014/NFT/BaseERC721.sol\":4985:5248  function transferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":2684:3037  function mint(address to, uint256 tokenId) public {... */\n    tag_52:\n        /* \"1014/NFT/BaseERC721.sol\":2774:2775  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2762:2776  to!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":2762:2764  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":2762:2776  to!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":2744:2813  require(/**code*/ to!=address(0), \"ERC721: mint to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"1014/NFT/BaseERC721.sol\":2869:2870  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2841:2871  _owners[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":2841:2848  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":2841:2857  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2849:2856  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":2841:2857  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":2841:2871  _owners[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":2823:2904  require(/**code*/ _owners[tokenId] == address(0), \"ERC721: token already minted\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"1014/NFT/BaseERC721.sol\":2952:2954  to */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":2933:2940  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":2933:2949  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2941:2948  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":2933:2949  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2933:2954  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":2981:2982  1 */\n      0x01\n        /* \"1014/NFT/BaseERC721.sol\":2964:2973  _balances */\n      0x04\n        /* \"1014/NFT/BaseERC721.sol\":2964:2977  _balances[to] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2974:2976  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":2964:2977  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2964:2982  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3022:3029  tokenId */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":3018:3020  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":2997:3030  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3014:3015  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2997:3030  Transfer(address(0), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"1014/NFT/BaseERC721.sol\":2684:3037  function mint(address to, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":5314:5476  function safeTransferFrom(... */\n    tag_55:\n        /* \"1014/NFT/BaseERC721.sol\":5430:5469  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_130\n        /* \"1014/NFT/BaseERC721.sol\":5447:5451  from */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5453:5455  to */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5457:5464  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5430:5469  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":5430:5446  safeTransferFrom */\n      tag_75\n        /* \"1014/NFT/BaseERC721.sol\":5430:5469  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_130:\n        /* \"1014/NFT/BaseERC721.sol\":5314:5476  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":3275:3397  function ownerOf(uint256 tokenId) public view returns (address) {... */\n    tag_58:\n        /* \"1014/NFT/BaseERC721.sol\":3330:3337  address */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3374:3381  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":3374:3390  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3382:3389  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":3374:3390  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":3367:3390  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3275:3397  function ownerOf(uint256 tokenId) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":3096:3218  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_62:\n        /* \"1014/NFT/BaseERC721.sol\":3151:3158  uint256 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3195:3204  _balances */\n      0x04\n        /* \"1014/NFT/BaseERC721.sol\":3195:3211  _balances[owner] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":3205:3210  owner */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":3195:3211  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"1014/NFT/BaseERC721.sol\":3188:3211  return _balances[owner] */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":3096:3218  function balanceOf(address owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":1970:2073  function symbol() public view returns (string memory) {... */\n    tag_66:\n        /* \"1014/NFT/BaseERC721.sol\":2009:2022  string memory */\n      0x60\n        /* \"1014/NFT/BaseERC721.sol\":2059:2066  _symbol */\n      0x01\n        /* \"1014/NFT/BaseERC721.sol\":2052:2066  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_90\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_90\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":1970:2073  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":4347:4672  function setApprovalForAll(address operator, bool approved) public {... */\n    tag_71:\n        /* \"1014/NFT/BaseERC721.sol\":4424:4438  address sender */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4441:4451  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":4424:4451  address sender = msg.sender */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":4486:4494  operator */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":4478:4494  sender!=operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4478:4484  sender */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":4478:4494  sender!=operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":4461:4524  require(/**code*/sender!=operator, \"ERC721: approve to caller\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"1014/NFT/BaseERC721.sol\":4600:4608  approved */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":4561:4579  _operatorApprovals */\n      0x06\n        /* \"1014/NFT/BaseERC721.sol\":4561:4587  _operatorApprovals[sender] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4580:4586  sender */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":4561:4587  _operatorApprovals[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"1014/NFT/BaseERC721.sol\":4561:4597  _operatorApprovals[sender][operator] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4588:4596  operator */\n      dup6\n        /* \"1014/NFT/BaseERC721.sol\":4561:4597  _operatorApprovals[sender][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4561:4608  _operatorApprovals[sender][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":4646:4654  operator */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":4623:4665  ApprovalForAll(sender, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4638:4644  sender */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":4623:4665  ApprovalForAll(sender, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"1014/NFT/BaseERC721.sol\":4656:4664  approved */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":4623:4665  ApprovalForAll(sender, operator, approved) */\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"1014/NFT/BaseERC721.sol\":4414:4672  {... */\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":4347:4672  function setApprovalForAll(address operator, bool approved) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":5542:5877  function safeTransferFrom(... */\n    tag_75:\n        /* \"1014/NFT/BaseERC721.sol\":5707:5746  _isApprovedOrOwner(msg.sender, tokenId) */\n      tag_145\n        /* \"1014/NFT/BaseERC721.sol\":5726:5736  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":5738:5745  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":5707:5725  _isApprovedOrOwner */\n      tag_114\n        /* \"1014/NFT/BaseERC721.sol\":5707:5746  _isApprovedOrOwner(msg.sender, tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"1014/NFT/BaseERC721.sol\":5686:5821  require(... */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_117\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"1014/NFT/BaseERC721.sol\":5831:5870  _safeTransfer(from, to, tokenId, _data) */\n      tag_148\n        /* \"1014/NFT/BaseERC721.sol\":5845:5849  from */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":5851:5853  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":5855:5862  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":5864:5869  _data */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":5831:5844  _safeTransfer */\n      tag_149\n        /* \"1014/NFT/BaseERC721.sol\":5831:5870  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_148:\n        /* \"1014/NFT/BaseERC721.sol\":5542:5877  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":2139:2449  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_78:\n        /* \"1014/NFT/BaseERC721.sol\":2195:2208  string memory */\n      0x60\n        /* \"1014/NFT/BaseERC721.sol\":2289:2290  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2263:2291  _owners[tokenId]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":2263:2270  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":2263:2279  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":2271:2278  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":2263:2279  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":2263:2291  _owners[tokenId]!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":2220:2364  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"1014/NFT/BaseERC721.sol\":2433:2441  _baseURI */\n      0x02\n        /* \"1014/NFT/BaseERC721.sol\":2426:2441  return _baseURI */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_90\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_90\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":2139:2449  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":4738:4923  function isApprovedForAll(... */\n    tag_83:\n        /* \"1014/NFT/BaseERC721.sol\":4840:4844  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4881:4899  _operatorApprovals */\n      0x06\n        /* \"1014/NFT/BaseERC721.sol\":4881:4906  _operatorApprovals[owner] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4900:4905  owner */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":4881:4906  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"1014/NFT/BaseERC721.sol\":4881:4916  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":4907:4915  operator */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":4881:4916  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":4874:4916  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":4738:4923  function isApprovedForAll(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":9142:9455  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_110:\n        /* \"1014/NFT/BaseERC721.sol\":9260:9270  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":9242:9270  _owners[tokenId]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9242:9249  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":9242:9258  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9250:9257  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":9242:9258  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9242:9270  _owners[tokenId]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":9242:9320  _owners[tokenId]==msg.sender||_operatorApprovals[_owners[tokenId]][msg.sender] */\n      dup1\n      tag_161\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":9272:9290  _operatorApprovals */\n      0x06\n        /* \"1014/NFT/BaseERC721.sol\":9272:9308  _operatorApprovals[_owners[tokenId]] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9291:9298  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":9291:9307  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9299:9306  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":9291:9307  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9272:9308  _operatorApprovals[_owners[tokenId]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"1014/NFT/BaseERC721.sol\":9272:9320  _operatorApprovals[_owners[tokenId]][msg.sender] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9309:9319  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":9272:9320  _operatorApprovals[_owners[tokenId]][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9242:9320  _owners[tokenId]==msg.sender||_operatorApprovals[_owners[tokenId]][msg.sender] */\n    tag_161:\n        /* \"1014/NFT/BaseERC721.sol\":9234:9355  require(_owners[tokenId]==msg.sender||_operatorApprovals[_owners[tokenId]][msg.sender], \"ERC721: caller not token owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"1014/NFT/BaseERC721.sol\":9392:9394  to */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":9365:9380  _tokenApprovals */\n      0x05\n        /* \"1014/NFT/BaseERC721.sol\":9365:9389  _tokenApprovals[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9381:9388  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":9365:9389  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":9365:9394  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":9440:9447  tokenId */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":9436:9438  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":9409:9448  Approval(ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9418:9434  ownerOf(tokenId) */\n      tag_165\n        /* \"1014/NFT/BaseERC721.sol\":9426:9433  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":9418:9425  ownerOf */\n      tag_58\n        /* \"1014/NFT/BaseERC721.sol\":9418:9434  ownerOf(tokenId) */\n      jump\t// in\n    tag_165:\n        /* \"1014/NFT/BaseERC721.sol\":9409:9448  Approval(ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"1014/NFT/BaseERC721.sol\":9142:9455  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":7668:8153  function _isApprovedOrOwner(... */\n    tag_114:\n        /* \"1014/NFT/BaseERC721.sol\":7775:7779  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":7834:7850  _exists(tokenId) */\n      tag_167\n        /* \"1014/NFT/BaseERC721.sol\":7842:7849  tokenId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":7834:7841  _exists */\n      tag_168\n        /* \"1014/NFT/BaseERC721.sol\":7834:7850  _exists(tokenId) */\n      jump\t// in\n    tag_167:\n        /* \"1014/NFT/BaseERC721.sol\":7791:7920  require(... */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"1014/NFT/BaseERC721.sol\":7949:7969  address addressOwner */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":7972:7979  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":7972:7988  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":7980:7987  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":7972:7988  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":7949:7988  address addressOwner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8021:8028  spender */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":8005:8028  addressOwner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8005:8017  addressOwner */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":8005:8028  addressOwner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":8005:8084  addressOwner == spender ... */\n      dup1\n      tag_172\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8077:8084  spender */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":8049:8084  _tokenApprovals[tokenId] == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8049:8064  _tokenApprovals */\n      0x05\n        /* \"1014/NFT/BaseERC721.sol\":8049:8073  _tokenApprovals[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8065:8072  tokenId */\n      dup6\n        /* \"1014/NFT/BaseERC721.sol\":8049:8073  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8049:8084  _tokenApprovals[tokenId] == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":8005:8084  addressOwner == spender ... */\n    tag_172:\n        /* \"1014/NFT/BaseERC721.sol\":8005:8146  addressOwner == spender ... */\n      dup1\n      tag_173\n      jumpi\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8105:8123  _operatorApprovals */\n      0x06\n        /* \"1014/NFT/BaseERC721.sol\":8105:8137  _operatorApprovals[addressOwner] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8124:8136  addressOwner */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":8105:8137  _operatorApprovals[addressOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"1014/NFT/BaseERC721.sol\":8105:8146  _operatorApprovals[addressOwner][spender] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8138:8145  spender */\n      dup6\n        /* \"1014/NFT/BaseERC721.sol\":8105:8146  _operatorApprovals[addressOwner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8005:8146  addressOwner == spender ... */\n    tag_173:\n        /* \"1014/NFT/BaseERC721.sol\":7998:8146  return addressOwner == spender ... */\n      swap2\n      pop\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":7668:8153  function _isApprovedOrOwner(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":8477:9031  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_119:\n        /* \"1014/NFT/BaseERC721.sol\":8607:8614  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":8607:8623  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8615:8622  tokenId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":8607:8623  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8599:8623  from == _owners[tokenId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8599:8603  from */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":8599:8623  from == _owners[tokenId] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":8558:8686  require(... */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"1014/NFT/BaseERC721.sol\":8726:8727  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8714:8728  to!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":8714:8716  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":8714:8728  to!=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":8697:8769  require(/**code*/to!=address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"1014/NFT/BaseERC721.sol\":8806:8845  _isApprovedOrOwner(msg.sender, tokenId) */\n      tag_181\n        /* \"1014/NFT/BaseERC721.sol\":8825:8835  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":8837:8844  tokenId */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":8806:8824  _isApprovedOrOwner */\n      tag_114\n        /* \"1014/NFT/BaseERC721.sol\":8806:8845  _isApprovedOrOwner(msg.sender, tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"1014/NFT/BaseERC721.sol\":8798:8846  require(_isApprovedOrOwner(msg.sender, tokenId)) */\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n        /* \"1014/NFT/BaseERC721.sol\":8875:8877  to */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":8856:8863  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":8856:8872  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8864:8871  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":8856:8872  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8856:8877  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8904:8905  1 */\n      0x01\n        /* \"1014/NFT/BaseERC721.sol\":8887:8896  _balances */\n      0x04\n        /* \"1014/NFT/BaseERC721.sol\":8887:8900  _balances[to] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8897:8899  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":8887:8900  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8887:8905  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8934:8935  1 */\n      0x01\n        /* \"1014/NFT/BaseERC721.sol\":8915:8924  _balances */\n      0x04\n        /* \"1014/NFT/BaseERC721.sol\":8915:8930  _balances[from] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8925:8929  from */\n      dup6\n        /* \"1014/NFT/BaseERC721.sol\":8915:8930  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8915:8935  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":8980:8981  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8945:8960  _tokenApprovals */\n      0x05\n        /* \"1014/NFT/BaseERC721.sol\":8945:8969  _tokenApprovals[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8961:8968  tokenId */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":8945:8969  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":8945:8982  _tokenApprovals[tokenId] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":9016:9023  tokenId */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":9012:9014  to */\n      dup3\n        /* \"1014/NFT/BaseERC721.sol\":8997:9024  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":9006:9010  from */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":8997:9024  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"1014/NFT/BaseERC721.sol\":8477:9031  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":6739:7072  function _safeTransfer(... */\n    tag_149:\n        /* \"1014/NFT/BaseERC721.sol\":6882:6910  _transfer(from, to, tokenId) */\n      tag_187\n        /* \"1014/NFT/BaseERC721.sol\":6892:6896  from */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6898:6900  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6902:6909  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6882:6891  _transfer */\n      tag_119\n        /* \"1014/NFT/BaseERC721.sol\":6882:6910  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"1014/NFT/BaseERC721.sol\":6941:6989  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_188\n        /* \"1014/NFT/BaseERC721.sol\":6964:6968  from */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6970:6972  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6974:6981  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6983:6988  _data */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":6941:6963  _checkOnERC721Received */\n      tag_189\n        /* \"1014/NFT/BaseERC721.sol\":6941:6989  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_188:\n        /* \"1014/NFT/BaseERC721.sol\":6920:7065  require(... */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"1014/NFT/BaseERC721.sol\":6739:7072  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":7375:7510  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_168:\n        /* \"1014/NFT/BaseERC721.sol\":7432:7436  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":7501:7502  0 */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":7473:7503  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":7473:7480  _owners */\n      0x03\n        /* \"1014/NFT/BaseERC721.sol\":7473:7489  _owners[tokenId] */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":7481:7488  tokenId */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":7473:7489  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"1014/NFT/BaseERC721.sol\":7473:7503  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"1014/NFT/BaseERC721.sol\":7466:7503  return _owners[tokenId] != address(0) */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":7375:7510  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1014/NFT/BaseERC721.sol\":10008:10955  function _checkOnERC721Received(... */\n    tag_189:\n        /* \"1014/NFT/BaseERC721.sol\":10158:10162  bool */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":10178:10192  isContract(to) */\n      tag_195\n        /* \"1014/NFT/BaseERC721.sol\":10189:10191  to */\n      dup5\n        /* \"1014/NFT/BaseERC721.sol\":10178:10188  isContract */\n      tag_44\n        /* \"1014/NFT/BaseERC721.sol\":10178:10192  isContract(to) */\n      jump\t// in\n    tag_195:\n        /* \"1014/NFT/BaseERC721.sol\":10174:10949  if (isContract(to)) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"1014/NFT/BaseERC721.sol\":10244:10246  to */\n      dup4\n        /* \"1014/NFT/BaseERC721.sol\":10228:10264  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"1014/NFT/BaseERC721.sol\":10286:10296  msg.sender */\n      caller\n        /* \"1014/NFT/BaseERC721.sol\":10318:10322  from */\n      dup8\n        /* \"1014/NFT/BaseERC721.sol\":10344:10351  tokenId */\n      dup7\n        /* \"1014/NFT/BaseERC721.sol\":10373:10378  _data */\n      dup7\n        /* \"1014/NFT/BaseERC721.sol\":10228:10396  IERC721Receiver(to).onERC721Received(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"1014/NFT/BaseERC721.sol\":10208:10897  try... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":10592:10593  0 */\n      0x00\n        /* \"1014/NFT/BaseERC721.sol\":10575:10581  reason */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":10575:10588  reason.length */\n      mload\n        /* \"1014/NFT/BaseERC721.sol\":10575:10593  reason.length == 0 */\n      sub\n        /* \"1014/NFT/BaseERC721.sol\":10571:10883  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"1014/NFT/BaseERC721.sol\":10617:10723  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_192\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"1014/NFT/BaseERC721.sol\":10571:10883  if (reason.length == 0) {... */\n    tag_208:\n        /* \"1014/NFT/BaseERC721.sol\":10835:10841  reason */\n      dup1\n        /* \"1014/NFT/BaseERC721.sol\":10829:10842  mload(reason) */\n      mload\n        /* \"1014/NFT/BaseERC721.sol\":10820:10826  reason */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":10816:10818  32 */\n      0x20\n        /* \"1014/NFT/BaseERC721.sol\":10812:10827  add(32, reason) */\n      add\n        /* \"1014/NFT/BaseERC721.sol\":10805:10843  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"1014/NFT/BaseERC721.sol\":10208:10897  try... */\n    tag_202:\n        /* \"1014/NFT/BaseERC721.sol\":10468:10509  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"1014/NFT/BaseERC721.sol\":10458:10509  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"1014/NFT/BaseERC721.sol\":10458:10464  retval */\n      dup2\n        /* \"1014/NFT/BaseERC721.sol\":10458:10509  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"1014/NFT/BaseERC721.sol\":10451:10509  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_194)\n        /* \"1014/NFT/BaseERC721.sol\":10174:10949  if (isContract(to)) {... */\n    tag_196:\n        /* \"1014/NFT/BaseERC721.sol\":10934:10938  true */\n      0x01\n        /* \"1014/NFT/BaseERC721.sol\":10927:10938  return true */\n      swap1\n      pop\n        /* \"1014/NFT/BaseERC721.sol\":10008:10955  function _checkOnERC721Received(... */\n    tag_194:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_213:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_214:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_215:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_216:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_217:\n        /* \"#utility.yul\":561:584   */\n      tag_284\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_216\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_285:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_218:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_287\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_217\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_290\n      tag_214\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":833:952   */\n    tag_289:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_291\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_218\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_219:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_220:\n        /* \"#utility.yul\":1268:1289   */\n      tag_294\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_219\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_296\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_220\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_221:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_222:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_223:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_224:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_225:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_302\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_221\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2222:2293   */\n      tag_303\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_222\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_304\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_223\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2392:2421   */\n      tag_305\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_224\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_30:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_307\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_226:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_227:\n        /* \"#utility.yul\":2909:2933   */\n      tag_310\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_226\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_311:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_228:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_313\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_227\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_33:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_316\n      tag_214\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3185:3304   */\n    tag_315:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_317\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_228\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_229:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_230:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_320\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_229\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_231:\n        /* \"#utility.yul\":3765:3789   */\n      tag_322\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_230\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_36:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_324\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_231\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_232:\n        /* \"#utility.yul\":4103:4127   */\n      tag_326\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_230\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_327:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_233:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_329\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_232\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_39:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_332\n      tag_214\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4396:4515   */\n    tag_331:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_333\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_334\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_228\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5112   */\n    tag_43:\n        /* \"#utility.yul\":4842:4848   */\n      0x00\n        /* \"#utility.yul\":4891:4893   */\n      0x20\n        /* \"#utility.yul\":4879:4888   */\n      dup3\n        /* \"#utility.yul\":4870:4877   */\n      dup5\n        /* \"#utility.yul\":4866:4889   */\n      sub\n        /* \"#utility.yul\":4862:4894   */\n      slt\n        /* \"#utility.yul\":4859:4978   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4897:4976   */\n      tag_337\n      tag_214\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4859:4978   */\n    tag_336:\n        /* \"#utility.yul\":5017:5018   */\n      0x00\n        /* \"#utility.yul\":5042:5095   */\n      tag_338\n        /* \"#utility.yul\":5087:5094   */\n      dup5\n        /* \"#utility.yul\":5078:5084   */\n      dup3\n        /* \"#utility.yul\":5067:5076   */\n      dup6\n        /* \"#utility.yul\":5063:5085   */\n      add\n        /* \"#utility.yul\":5042:5095   */\n      tag_233\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5032:5095   */\n      swap2\n      pop\n        /* \"#utility.yul\":4988:5105   */\n      pop\n        /* \"#utility.yul\":4783:5112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5737   */\n    tag_48:\n        /* \"#utility.yul\":5195:5201   */\n      0x00\n        /* \"#utility.yul\":5203:5209   */\n      dup1\n        /* \"#utility.yul\":5211:5217   */\n      0x00\n        /* \"#utility.yul\":5260:5262   */\n      0x60\n        /* \"#utility.yul\":5248:5257   */\n      dup5\n        /* \"#utility.yul\":5239:5246   */\n      dup7\n        /* \"#utility.yul\":5235:5258   */\n      sub\n        /* \"#utility.yul\":5231:5263   */\n      slt\n        /* \"#utility.yul\":5228:5347   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_341\n      tag_214\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5228:5347   */\n    tag_340:\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5411:5464   */\n      tag_342\n        /* \"#utility.yul\":5456:5463   */\n      dup7\n        /* \"#utility.yul\":5447:5453   */\n      dup3\n        /* \"#utility.yul\":5436:5445   */\n      dup8\n        /* \"#utility.yul\":5432:5454   */\n      add\n        /* \"#utility.yul\":5411:5464   */\n      tag_233\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5401:5464   */\n      swap4\n      pop\n        /* \"#utility.yul\":5357:5474   */\n      pop\n        /* \"#utility.yul\":5513:5515   */\n      0x20\n        /* \"#utility.yul\":5539:5592   */\n      tag_343\n        /* \"#utility.yul\":5584:5591   */\n      dup7\n        /* \"#utility.yul\":5575:5581   */\n      dup3\n        /* \"#utility.yul\":5564:5573   */\n      dup8\n        /* \"#utility.yul\":5560:5582   */\n      add\n        /* \"#utility.yul\":5539:5592   */\n      tag_233\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5529:5592   */\n      swap3\n      pop\n        /* \"#utility.yul\":5484:5602   */\n      pop\n        /* \"#utility.yul\":5641:5643   */\n      0x40\n        /* \"#utility.yul\":5667:5720   */\n      tag_344\n        /* \"#utility.yul\":5712:5719   */\n      dup7\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup8\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_228\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5612:5730   */\n      pop\n        /* \"#utility.yul\":5118:5737   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_234:\n        /* \"#utility.yul\":5830:5854   */\n      tag_346\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_226\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_64:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_348\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_234\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_235:\n        /* \"#utility.yul\":6165:6186   */\n      tag_350\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_219\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      dup1\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_351:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_236:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_353\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_235\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_70:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      dup1\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_356\n      tag_214\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6446:6565   */\n    tag_355:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_357\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_233\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_358\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_236\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_237:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_238:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      dup1\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_239:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_240:\n        /* \"#utility.yul\":7345:7372   */\n      tag_363\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_224\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_365\n      tag_239\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7418:7506   */\n    tag_364:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_241:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_367\n      tag_213\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_368\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_240\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_242:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_371\n      tag_239\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7821:7877   */\n    tag_370:\n        /* \"#utility.yul\":7895:7924   */\n      tag_372\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_224\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_243:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_244:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_375\n        /* \"#utility.yul\":8269:8317   */\n      tag_376\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_242\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8253:8318   */\n      tag_241\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_378\n      tag_238\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8393:8505   */\n    tag_377:\n        /* \"#utility.yul\":8514:8568   */\n      tag_379\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_243\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_245:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_382\n      tag_237\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8664:8786   */\n    tag_381:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_383\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_244\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_74:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      dup1\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      dup1\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_386\n      tag_214\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9073:9193   */\n    tag_385:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_387\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_233\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_388\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_233\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_389\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_228\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_391\n      tag_215\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9660:9777   */\n    tag_390:\n        /* \"#utility.yul\":9801:9863   */\n      tag_392\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_245\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_82:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      dup1\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_395\n      tag_214\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9979:10098   */\n    tag_394:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_396\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_233\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_397\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_233\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_246:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_90:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_400:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_402\n      tag_246\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10782:10866   */\n    tag_401:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11109   */\n    tag_247:\n        /* \"#utility.yul\":11018:11052   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":11014:11015   */\n      0x00\n        /* \"#utility.yul\":11006:11012   */\n      dup3\n        /* \"#utility.yul\":11002:11016   */\n      add\n        /* \"#utility.yul\":10995:11053   */\n      mstore\n        /* \"#utility.yul\":11087:11101   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":11082:11084   */\n      0x20\n        /* \"#utility.yul\":11074:11080   */\n      dup3\n        /* \"#utility.yul\":11070:11085   */\n      add\n        /* \"#utility.yul\":11063:11102   */\n      mstore\n        /* \"#utility.yul\":10878:11109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11115:11481   */\n    tag_248:\n        /* \"#utility.yul\":11257:11260   */\n      0x00\n        /* \"#utility.yul\":11278:11345   */\n      tag_405\n        /* \"#utility.yul\":11342:11344   */\n      0x2c\n        /* \"#utility.yul\":11337:11340   */\n      dup4\n        /* \"#utility.yul\":11278:11345   */\n      tag_222\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11271:11345   */\n      swap2\n      pop\n        /* \"#utility.yul\":11354:11447   */\n      tag_406\n        /* \"#utility.yul\":11443:11446   */\n      dup3\n        /* \"#utility.yul\":11354:11447   */\n      tag_247\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11472:11474   */\n      0x40\n        /* \"#utility.yul\":11467:11470   */\n      dup3\n        /* \"#utility.yul\":11463:11475   */\n      add\n        /* \"#utility.yul\":11456:11475   */\n      swap1\n      pop\n        /* \"#utility.yul\":11115:11481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11487:11906   */\n    tag_98:\n        /* \"#utility.yul\":11653:11657   */\n      0x00\n        /* \"#utility.yul\":11691:11693   */\n      0x20\n        /* \"#utility.yul\":11680:11689   */\n      dup3\n        /* \"#utility.yul\":11676:11694   */\n      add\n        /* \"#utility.yul\":11668:11694   */\n      swap1\n      pop\n        /* \"#utility.yul\":11740:11749   */\n      dup2\n        /* \"#utility.yul\":11734:11738   */\n      dup2\n        /* \"#utility.yul\":11730:11750   */\n      sub\n        /* \"#utility.yul\":11726:11727   */\n      0x00\n        /* \"#utility.yul\":11715:11724   */\n      dup4\n        /* \"#utility.yul\":11711:11728   */\n      add\n        /* \"#utility.yul\":11704:11751   */\n      mstore\n        /* \"#utility.yul\":11768:11899   */\n      tag_408\n        /* \"#utility.yul\":11894:11898   */\n      dup2\n        /* \"#utility.yul\":11768:11899   */\n      tag_248\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11760:11899   */\n      swap1\n      pop\n        /* \"#utility.yul\":11487:11906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11912:12132   */\n    tag_249:\n        /* \"#utility.yul\":12052:12086   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":12048:12049   */\n      0x00\n        /* \"#utility.yul\":12040:12046   */\n      dup3\n        /* \"#utility.yul\":12036:12050   */\n      add\n        /* \"#utility.yul\":12029:12087   */\n      mstore\n        /* \"#utility.yul\":12121:12124   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12116:12118   */\n      0x20\n        /* \"#utility.yul\":12108:12114   */\n      dup3\n        /* \"#utility.yul\":12104:12119   */\n      add\n        /* \"#utility.yul\":12097:12125   */\n      mstore\n        /* \"#utility.yul\":11912:12132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12138:12504   */\n    tag_250:\n        /* \"#utility.yul\":12280:12283   */\n      0x00\n        /* \"#utility.yul\":12301:12368   */\n      tag_411\n        /* \"#utility.yul\":12365:12367   */\n      0x21\n        /* \"#utility.yul\":12360:12363   */\n      dup4\n        /* \"#utility.yul\":12301:12368   */\n      tag_222\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12294:12368   */\n      swap2\n      pop\n        /* \"#utility.yul\":12377:12470   */\n      tag_412\n        /* \"#utility.yul\":12466:12469   */\n      dup3\n        /* \"#utility.yul\":12377:12470   */\n      tag_249\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12495:12497   */\n      0x40\n        /* \"#utility.yul\":12490:12493   */\n      dup3\n        /* \"#utility.yul\":12486:12498   */\n      add\n        /* \"#utility.yul\":12479:12498   */\n      swap1\n      pop\n        /* \"#utility.yul\":12138:12504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12510:12929   */\n    tag_103:\n        /* \"#utility.yul\":12676:12680   */\n      0x00\n        /* \"#utility.yul\":12714:12716   */\n      0x20\n        /* \"#utility.yul\":12703:12712   */\n      dup3\n        /* \"#utility.yul\":12699:12717   */\n      add\n        /* \"#utility.yul\":12691:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12763:12772   */\n      dup2\n        /* \"#utility.yul\":12757:12761   */\n      dup2\n        /* \"#utility.yul\":12753:12773   */\n      sub\n        /* \"#utility.yul\":12749:12750   */\n      0x00\n        /* \"#utility.yul\":12738:12747   */\n      dup4\n        /* \"#utility.yul\":12734:12751   */\n      add\n        /* \"#utility.yul\":12727:12774   */\n      mstore\n        /* \"#utility.yul\":12791:12922   */\n      tag_414\n        /* \"#utility.yul\":12917:12921   */\n      dup2\n        /* \"#utility.yul\":12791:12922   */\n      tag_250\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12783:12922   */\n      swap1\n      pop\n        /* \"#utility.yul\":12510:12929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12935:13178   */\n    tag_251:\n        /* \"#utility.yul\":13075:13109   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":13071:13072   */\n      0x00\n        /* \"#utility.yul\":13063:13069   */\n      dup3\n        /* \"#utility.yul\":13059:13073   */\n      add\n        /* \"#utility.yul\":13052:13110   */\n      mstore\n        /* \"#utility.yul\":13144:13170   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":13139:13141   */\n      0x20\n        /* \"#utility.yul\":13131:13137   */\n      dup3\n        /* \"#utility.yul\":13127:13142   */\n      add\n        /* \"#utility.yul\":13120:13171   */\n      mstore\n        /* \"#utility.yul\":12935:13178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13184:13550   */\n    tag_252:\n        /* \"#utility.yul\":13326:13329   */\n      0x00\n        /* \"#utility.yul\":13347:13414   */\n      tag_417\n        /* \"#utility.yul\":13411:13413   */\n      0x38\n        /* \"#utility.yul\":13406:13409   */\n      dup4\n        /* \"#utility.yul\":13347:13414   */\n      tag_222\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13340:13414   */\n      swap2\n      pop\n        /* \"#utility.yul\":13423:13516   */\n      tag_418\n        /* \"#utility.yul\":13512:13515   */\n      dup3\n        /* \"#utility.yul\":13423:13516   */\n      tag_251\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":13541:13543   */\n      0x40\n        /* \"#utility.yul\":13536:13539   */\n      dup3\n        /* \"#utility.yul\":13532:13544   */\n      add\n        /* \"#utility.yul\":13525:13544   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13556:13975   */\n    tag_108:\n        /* \"#utility.yul\":13722:13726   */\n      0x00\n        /* \"#utility.yul\":13760:13762   */\n      0x20\n        /* \"#utility.yul\":13749:13758   */\n      dup3\n        /* \"#utility.yul\":13745:13763   */\n      add\n        /* \"#utility.yul\":13737:13763   */\n      swap1\n      pop\n        /* \"#utility.yul\":13809:13818   */\n      dup2\n        /* \"#utility.yul\":13803:13807   */\n      dup2\n        /* \"#utility.yul\":13799:13819   */\n      sub\n        /* \"#utility.yul\":13795:13796   */\n      0x00\n        /* \"#utility.yul\":13784:13793   */\n      dup4\n        /* \"#utility.yul\":13780:13797   */\n      add\n        /* \"#utility.yul\":13773:13820   */\n      mstore\n        /* \"#utility.yul\":13837:13968   */\n      tag_420\n        /* \"#utility.yul\":13963:13967   */\n      dup2\n        /* \"#utility.yul\":13837:13968   */\n      tag_252\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13829:13968   */\n      swap1\n      pop\n        /* \"#utility.yul\":13556:13975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13981:14217   */\n    tag_253:\n        /* \"#utility.yul\":14121:14155   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":14117:14118   */\n      0x00\n        /* \"#utility.yul\":14109:14115   */\n      dup3\n        /* \"#utility.yul\":14105:14119   */\n      add\n        /* \"#utility.yul\":14098:14156   */\n      mstore\n        /* \"#utility.yul\":14190:14209   */\n      0x776e6572206e6f7220617070726f766564000000000000000000000000000000\n        /* \"#utility.yul\":14185:14187   */\n      0x20\n        /* \"#utility.yul\":14177:14183   */\n      dup3\n        /* \"#utility.yul\":14173:14188   */\n      add\n        /* \"#utility.yul\":14166:14210   */\n      mstore\n        /* \"#utility.yul\":13981:14217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14223:14589   */\n    tag_254:\n        /* \"#utility.yul\":14365:14368   */\n      0x00\n        /* \"#utility.yul\":14386:14453   */\n      tag_423\n        /* \"#utility.yul\":14450:14452   */\n      0x31\n        /* \"#utility.yul\":14445:14448   */\n      dup4\n        /* \"#utility.yul\":14386:14453   */\n      tag_222\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14379:14453   */\n      swap2\n      pop\n        /* \"#utility.yul\":14462:14555   */\n      tag_424\n        /* \"#utility.yul\":14551:14554   */\n      dup3\n        /* \"#utility.yul\":14462:14555   */\n      tag_253\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14580:14582   */\n      0x40\n        /* \"#utility.yul\":14575:14578   */\n      dup3\n        /* \"#utility.yul\":14571:14583   */\n      add\n        /* \"#utility.yul\":14564:14583   */\n      swap1\n      pop\n        /* \"#utility.yul\":14223:14589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14595:15014   */\n    tag_117:\n        /* \"#utility.yul\":14761:14765   */\n      0x00\n        /* \"#utility.yul\":14799:14801   */\n      0x20\n        /* \"#utility.yul\":14788:14797   */\n      dup3\n        /* \"#utility.yul\":14784:14802   */\n      add\n        /* \"#utility.yul\":14776:14802   */\n      swap1\n      pop\n        /* \"#utility.yul\":14848:14857   */\n      dup2\n        /* \"#utility.yul\":14842:14846   */\n      dup2\n        /* \"#utility.yul\":14838:14858   */\n      sub\n        /* \"#utility.yul\":14834:14835   */\n      0x00\n        /* \"#utility.yul\":14823:14832   */\n      dup4\n        /* \"#utility.yul\":14819:14836   */\n      add\n        /* \"#utility.yul\":14812:14859   */\n      mstore\n        /* \"#utility.yul\":14876:15007   */\n      tag_426\n        /* \"#utility.yul\":15002:15006   */\n      dup2\n        /* \"#utility.yul\":14876:15007   */\n      tag_254\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14868:15007   */\n      swap1\n      pop\n        /* \"#utility.yul\":14595:15014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15020:15202   */\n    tag_255:\n        /* \"#utility.yul\":15160:15194   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":15156:15157   */\n      0x00\n        /* \"#utility.yul\":15148:15154   */\n      dup3\n        /* \"#utility.yul\":15144:15158   */\n      add\n        /* \"#utility.yul\":15137:15195   */\n      mstore\n        /* \"#utility.yul\":15020:15202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15208:15574   */\n    tag_256:\n        /* \"#utility.yul\":15350:15353   */\n      0x00\n        /* \"#utility.yul\":15371:15438   */\n      tag_429\n        /* \"#utility.yul\":15435:15437   */\n      0x20\n        /* \"#utility.yul\":15430:15433   */\n      dup4\n        /* \"#utility.yul\":15371:15438   */\n      tag_222\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15364:15438   */\n      swap2\n      pop\n        /* \"#utility.yul\":15447:15540   */\n      tag_430\n        /* \"#utility.yul\":15536:15539   */\n      dup3\n        /* \"#utility.yul\":15447:15540   */\n      tag_255\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15565:15567   */\n      0x20\n        /* \"#utility.yul\":15560:15563   */\n      dup3\n        /* \"#utility.yul\":15556:15568   */\n      add\n        /* \"#utility.yul\":15549:15568   */\n      swap1\n      pop\n        /* \"#utility.yul\":15208:15574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15580:15999   */\n    tag_123:\n        /* \"#utility.yul\":15746:15750   */\n      0x00\n        /* \"#utility.yul\":15784:15786   */\n      0x20\n        /* \"#utility.yul\":15773:15782   */\n      dup3\n        /* \"#utility.yul\":15769:15787   */\n      add\n        /* \"#utility.yul\":15761:15787   */\n      swap1\n      pop\n        /* \"#utility.yul\":15833:15842   */\n      dup2\n        /* \"#utility.yul\":15827:15831   */\n      dup2\n        /* \"#utility.yul\":15823:15843   */\n      sub\n        /* \"#utility.yul\":15819:15820   */\n      0x00\n        /* \"#utility.yul\":15808:15817   */\n      dup4\n        /* \"#utility.yul\":15804:15821   */\n      add\n        /* \"#utility.yul\":15797:15844   */\n      mstore\n        /* \"#utility.yul\":15861:15992   */\n      tag_432\n        /* \"#utility.yul\":15987:15991   */\n      dup2\n        /* \"#utility.yul\":15861:15992   */\n      tag_256\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15853:15992   */\n      swap1\n      pop\n        /* \"#utility.yul\":15580:15999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16005:16183   */\n    tag_257:\n        /* \"#utility.yul\":16145:16175   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":16141:16142   */\n      0x00\n        /* \"#utility.yul\":16133:16139   */\n      dup3\n        /* \"#utility.yul\":16129:16143   */\n      add\n        /* \"#utility.yul\":16122:16176   */\n      mstore\n        /* \"#utility.yul\":16005:16183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16189:16555   */\n    tag_258:\n        /* \"#utility.yul\":16331:16334   */\n      0x00\n        /* \"#utility.yul\":16352:16419   */\n      tag_435\n        /* \"#utility.yul\":16416:16418   */\n      0x1c\n        /* \"#utility.yul\":16411:16414   */\n      dup4\n        /* \"#utility.yul\":16352:16419   */\n      tag_222\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16345:16419   */\n      swap2\n      pop\n        /* \"#utility.yul\":16428:16521   */\n      tag_436\n        /* \"#utility.yul\":16517:16520   */\n      dup3\n        /* \"#utility.yul\":16428:16521   */\n      tag_257\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16546:16548   */\n      0x20\n        /* \"#utility.yul\":16541:16544   */\n      dup3\n        /* \"#utility.yul\":16537:16549   */\n      add\n        /* \"#utility.yul\":16530:16549   */\n      swap1\n      pop\n        /* \"#utility.yul\":16189:16555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16561:16980   */\n    tag_126:\n        /* \"#utility.yul\":16727:16731   */\n      0x00\n        /* \"#utility.yul\":16765:16767   */\n      0x20\n        /* \"#utility.yul\":16754:16763   */\n      dup3\n        /* \"#utility.yul\":16750:16768   */\n      add\n        /* \"#utility.yul\":16742:16768   */\n      swap1\n      pop\n        /* \"#utility.yul\":16814:16823   */\n      dup2\n        /* \"#utility.yul\":16808:16812   */\n      dup2\n        /* \"#utility.yul\":16804:16824   */\n      sub\n        /* \"#utility.yul\":16800:16801   */\n      0x00\n        /* \"#utility.yul\":16789:16798   */\n      dup4\n        /* \"#utility.yul\":16785:16802   */\n      add\n        /* \"#utility.yul\":16778:16825   */\n      mstore\n        /* \"#utility.yul\":16842:16973   */\n      tag_438\n        /* \"#utility.yul\":16968:16972   */\n      dup2\n        /* \"#utility.yul\":16842:16973   */\n      tag_258\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":16834:16973   */\n      swap1\n      pop\n        /* \"#utility.yul\":16561:16980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17166   */\n    tag_259:\n        /* \"#utility.yul\":17034:17111   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17031:17032   */\n      0x00\n        /* \"#utility.yul\":17024:17112   */\n      mstore\n        /* \"#utility.yul\":17131:17135   */\n      0x11\n        /* \"#utility.yul\":17128:17129   */\n      0x04\n        /* \"#utility.yul\":17121:17136   */\n      mstore\n        /* \"#utility.yul\":17155:17159   */\n      0x24\n        /* \"#utility.yul\":17152:17153   */\n      0x00\n        /* \"#utility.yul\":17145:17160   */\n      revert\n        /* \"#utility.yul\":17172:17363   */\n    tag_128:\n        /* \"#utility.yul\":17212:17215   */\n      0x00\n        /* \"#utility.yul\":17231:17251   */\n      tag_441\n        /* \"#utility.yul\":17249:17250   */\n      dup3\n        /* \"#utility.yul\":17231:17251   */\n      tag_226\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17226:17251   */\n      swap2\n      pop\n        /* \"#utility.yul\":17265:17285   */\n      tag_442\n        /* \"#utility.yul\":17283:17284   */\n      dup4\n        /* \"#utility.yul\":17265:17285   */\n      tag_226\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17260:17285   */\n      swap3\n      pop\n        /* \"#utility.yul\":17308:17309   */\n      dup3\n        /* \"#utility.yul\":17305:17306   */\n      dup3\n        /* \"#utility.yul\":17301:17310   */\n      add\n        /* \"#utility.yul\":17294:17310   */\n      swap1\n      pop\n        /* \"#utility.yul\":17329:17332   */\n      dup1\n        /* \"#utility.yul\":17326:17327   */\n      dup3\n        /* \"#utility.yul\":17323:17333   */\n      gt\n        /* \"#utility.yul\":17320:17356   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":17336:17354   */\n      tag_444\n      tag_259\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":17320:17356   */\n    tag_443:\n        /* \"#utility.yul\":17172:17363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17369:17544   */\n    tag_260:\n        /* \"#utility.yul\":17509:17536   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":17505:17506   */\n      0x00\n        /* \"#utility.yul\":17497:17503   */\n      dup3\n        /* \"#utility.yul\":17493:17507   */\n      add\n        /* \"#utility.yul\":17486:17537   */\n      mstore\n        /* \"#utility.yul\":17369:17544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17550:17916   */\n    tag_261:\n        /* \"#utility.yul\":17692:17695   */\n      0x00\n        /* \"#utility.yul\":17713:17780   */\n      tag_447\n        /* \"#utility.yul\":17777:17779   */\n      0x19\n        /* \"#utility.yul\":17772:17775   */\n      dup4\n        /* \"#utility.yul\":17713:17780   */\n      tag_222\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":17706:17780   */\n      swap2\n      pop\n        /* \"#utility.yul\":17789:17882   */\n      tag_448\n        /* \"#utility.yul\":17878:17881   */\n      dup3\n        /* \"#utility.yul\":17789:17882   */\n      tag_260\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17907:17909   */\n      0x20\n        /* \"#utility.yul\":17902:17905   */\n      dup3\n        /* \"#utility.yul\":17898:17910   */\n      add\n        /* \"#utility.yul\":17891:17910   */\n      swap1\n      pop\n        /* \"#utility.yul\":17550:17916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17922:18341   */\n    tag_142:\n        /* \"#utility.yul\":18088:18092   */\n      0x00\n        /* \"#utility.yul\":18126:18128   */\n      0x20\n        /* \"#utility.yul\":18115:18124   */\n      dup3\n        /* \"#utility.yul\":18111:18129   */\n      add\n        /* \"#utility.yul\":18103:18129   */\n      swap1\n      pop\n        /* \"#utility.yul\":18175:18184   */\n      dup2\n        /* \"#utility.yul\":18169:18173   */\n      dup2\n        /* \"#utility.yul\":18165:18185   */\n      sub\n        /* \"#utility.yul\":18161:18162   */\n      0x00\n        /* \"#utility.yul\":18150:18159   */\n      dup4\n        /* \"#utility.yul\":18146:18163   */\n      add\n        /* \"#utility.yul\":18139:18186   */\n      mstore\n        /* \"#utility.yul\":18203:18334   */\n      tag_450\n        /* \"#utility.yul\":18329:18333   */\n      dup2\n        /* \"#utility.yul\":18203:18334   */\n      tag_261\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":18195:18334   */\n      swap1\n      pop\n        /* \"#utility.yul\":17922:18341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18347:18581   */\n    tag_262:\n        /* \"#utility.yul\":18487:18521   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":18483:18484   */\n      0x00\n        /* \"#utility.yul\":18475:18481   */\n      dup3\n        /* \"#utility.yul\":18471:18485   */\n      add\n        /* \"#utility.yul\":18464:18522   */\n      mstore\n        /* \"#utility.yul\":18556:18573   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":18551:18553   */\n      0x20\n        /* \"#utility.yul\":18543:18549   */\n      dup3\n        /* \"#utility.yul\":18539:18554   */\n      add\n        /* \"#utility.yul\":18532:18574   */\n      mstore\n        /* \"#utility.yul\":18347:18581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18587:18953   */\n    tag_263:\n        /* \"#utility.yul\":18729:18732   */\n      0x00\n        /* \"#utility.yul\":18750:18817   */\n      tag_453\n        /* \"#utility.yul\":18814:18816   */\n      0x2f\n        /* \"#utility.yul\":18809:18812   */\n      dup4\n        /* \"#utility.yul\":18750:18817   */\n      tag_222\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":18743:18817   */\n      swap2\n      pop\n        /* \"#utility.yul\":18826:18919   */\n      tag_454\n        /* \"#utility.yul\":18915:18918   */\n      dup3\n        /* \"#utility.yul\":18826:18919   */\n      tag_262\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":18944:18946   */\n      0x40\n        /* \"#utility.yul\":18939:18942   */\n      dup3\n        /* \"#utility.yul\":18935:18947   */\n      add\n        /* \"#utility.yul\":18928:18947   */\n      swap1\n      pop\n        /* \"#utility.yul\":18587:18953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18959:19378   */\n    tag_153:\n        /* \"#utility.yul\":19125:19129   */\n      0x00\n        /* \"#utility.yul\":19163:19165   */\n      0x20\n        /* \"#utility.yul\":19152:19161   */\n      dup3\n        /* \"#utility.yul\":19148:19166   */\n      add\n        /* \"#utility.yul\":19140:19166   */\n      swap1\n      pop\n        /* \"#utility.yul\":19212:19221   */\n      dup2\n        /* \"#utility.yul\":19206:19210   */\n      dup2\n        /* \"#utility.yul\":19202:19222   */\n      sub\n        /* \"#utility.yul\":19198:19199   */\n      0x00\n        /* \"#utility.yul\":19187:19196   */\n      dup4\n        /* \"#utility.yul\":19183:19200   */\n      add\n        /* \"#utility.yul\":19176:19223   */\n      mstore\n        /* \"#utility.yul\":19240:19371   */\n      tag_456\n        /* \"#utility.yul\":19366:19370   */\n      dup2\n        /* \"#utility.yul\":19240:19371   */\n      tag_263\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":19232:19371   */\n      swap1\n      pop\n        /* \"#utility.yul\":18959:19378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19384:19564   */\n    tag_264:\n        /* \"#utility.yul\":19524:19556   */\n      0x4552433732313a2063616c6c6572206e6f7420746f6b656e206f776e65720000\n        /* \"#utility.yul\":19520:19521   */\n      0x00\n        /* \"#utility.yul\":19512:19518   */\n      dup3\n        /* \"#utility.yul\":19508:19522   */\n      add\n        /* \"#utility.yul\":19501:19557   */\n      mstore\n        /* \"#utility.yul\":19384:19564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19570:19936   */\n    tag_265:\n        /* \"#utility.yul\":19712:19715   */\n      0x00\n        /* \"#utility.yul\":19733:19800   */\n      tag_459\n        /* \"#utility.yul\":19797:19799   */\n      0x1e\n        /* \"#utility.yul\":19792:19795   */\n      dup4\n        /* \"#utility.yul\":19733:19800   */\n      tag_222\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":19726:19800   */\n      swap2\n      pop\n        /* \"#utility.yul\":19809:19902   */\n      tag_460\n        /* \"#utility.yul\":19898:19901   */\n      dup3\n        /* \"#utility.yul\":19809:19902   */\n      tag_264\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":19927:19929   */\n      0x20\n        /* \"#utility.yul\":19922:19925   */\n      dup3\n        /* \"#utility.yul\":19918:19930   */\n      add\n        /* \"#utility.yul\":19911:19930   */\n      swap1\n      pop\n        /* \"#utility.yul\":19570:19936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19942:20361   */\n    tag_164:\n        /* \"#utility.yul\":20108:20112   */\n      0x00\n        /* \"#utility.yul\":20146:20148   */\n      0x20\n        /* \"#utility.yul\":20135:20144   */\n      dup3\n        /* \"#utility.yul\":20131:20149   */\n      add\n        /* \"#utility.yul\":20123:20149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20195:20204   */\n      dup2\n        /* \"#utility.yul\":20189:20193   */\n      dup2\n        /* \"#utility.yul\":20185:20205   */\n      sub\n        /* \"#utility.yul\":20181:20182   */\n      0x00\n        /* \"#utility.yul\":20170:20179   */\n      dup4\n        /* \"#utility.yul\":20166:20183   */\n      add\n        /* \"#utility.yul\":20159:20206   */\n      mstore\n        /* \"#utility.yul\":20223:20354   */\n      tag_462\n        /* \"#utility.yul\":20349:20353   */\n      dup2\n        /* \"#utility.yul\":20223:20354   */\n      tag_265\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":20215:20354   */\n      swap1\n      pop\n        /* \"#utility.yul\":19942:20361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20367:20598   */\n    tag_266:\n        /* \"#utility.yul\":20507:20541   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":20503:20504   */\n      0x00\n        /* \"#utility.yul\":20495:20501   */\n      dup3\n        /* \"#utility.yul\":20491:20505   */\n      add\n        /* \"#utility.yul\":20484:20542   */\n      mstore\n        /* \"#utility.yul\":20576:20590   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":20571:20573   */\n      0x20\n        /* \"#utility.yul\":20563:20569   */\n      dup3\n        /* \"#utility.yul\":20559:20574   */\n      add\n        /* \"#utility.yul\":20552:20591   */\n      mstore\n        /* \"#utility.yul\":20367:20598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20604:20970   */\n    tag_267:\n        /* \"#utility.yul\":20746:20749   */\n      0x00\n        /* \"#utility.yul\":20767:20834   */\n      tag_465\n        /* \"#utility.yul\":20831:20833   */\n      0x2c\n        /* \"#utility.yul\":20826:20829   */\n      dup4\n        /* \"#utility.yul\":20767:20834   */\n      tag_222\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":20760:20834   */\n      swap2\n      pop\n        /* \"#utility.yul\":20843:20936   */\n      tag_466\n        /* \"#utility.yul\":20932:20935   */\n      dup3\n        /* \"#utility.yul\":20843:20936   */\n      tag_266\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":20961:20963   */\n      0x40\n        /* \"#utility.yul\":20956:20959   */\n      dup3\n        /* \"#utility.yul\":20952:20964   */\n      add\n        /* \"#utility.yul\":20945:20964   */\n      swap1\n      pop\n        /* \"#utility.yul\":20604:20970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20976:21395   */\n    tag_171:\n        /* \"#utility.yul\":21142:21146   */\n      0x00\n        /* \"#utility.yul\":21180:21182   */\n      0x20\n        /* \"#utility.yul\":21169:21178   */\n      dup3\n        /* \"#utility.yul\":21165:21183   */\n      add\n        /* \"#utility.yul\":21157:21183   */\n      swap1\n      pop\n        /* \"#utility.yul\":21229:21238   */\n      dup2\n        /* \"#utility.yul\":21223:21227   */\n      dup2\n        /* \"#utility.yul\":21219:21239   */\n      sub\n        /* \"#utility.yul\":21215:21216   */\n      0x00\n        /* \"#utility.yul\":21204:21213   */\n      dup4\n        /* \"#utility.yul\":21200:21217   */\n      add\n        /* \"#utility.yul\":21193:21240   */\n      mstore\n        /* \"#utility.yul\":21257:21388   */\n      tag_468\n        /* \"#utility.yul\":21383:21387   */\n      dup2\n        /* \"#utility.yul\":21257:21388   */\n      tag_267\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":21249:21388   */\n      swap1\n      pop\n        /* \"#utility.yul\":20976:21395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21401:21625   */\n    tag_268:\n        /* \"#utility.yul\":21541:21575   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":21537:21538   */\n      0x00\n        /* \"#utility.yul\":21529:21535   */\n      dup3\n        /* \"#utility.yul\":21525:21539   */\n      add\n        /* \"#utility.yul\":21518:21576   */\n      mstore\n        /* \"#utility.yul\":21610:21617   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21605:21607   */\n      0x20\n        /* \"#utility.yul\":21597:21603   */\n      dup3\n        /* \"#utility.yul\":21593:21608   */\n      add\n        /* \"#utility.yul\":21586:21618   */\n      mstore\n        /* \"#utility.yul\":21401:21625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21631:21997   */\n    tag_269:\n        /* \"#utility.yul\":21773:21776   */\n      0x00\n        /* \"#utility.yul\":21794:21861   */\n      tag_471\n        /* \"#utility.yul\":21858:21860   */\n      0x25\n        /* \"#utility.yul\":21853:21856   */\n      dup4\n        /* \"#utility.yul\":21794:21861   */\n      tag_222\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":21787:21861   */\n      swap2\n      pop\n        /* \"#utility.yul\":21870:21963   */\n      tag_472\n        /* \"#utility.yul\":21959:21962   */\n      dup3\n        /* \"#utility.yul\":21870:21963   */\n      tag_268\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":21988:21990   */\n      0x40\n        /* \"#utility.yul\":21983:21986   */\n      dup3\n        /* \"#utility.yul\":21979:21991   */\n      add\n        /* \"#utility.yul\":21972:21991   */\n      swap1\n      pop\n        /* \"#utility.yul\":21631:21997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22003:22422   */\n    tag_177:\n        /* \"#utility.yul\":22169:22173   */\n      0x00\n        /* \"#utility.yul\":22207:22209   */\n      0x20\n        /* \"#utility.yul\":22196:22205   */\n      dup3\n        /* \"#utility.yul\":22192:22210   */\n      add\n        /* \"#utility.yul\":22184:22210   */\n      swap1\n      pop\n        /* \"#utility.yul\":22256:22265   */\n      dup2\n        /* \"#utility.yul\":22250:22254   */\n      dup2\n        /* \"#utility.yul\":22246:22266   */\n      sub\n        /* \"#utility.yul\":22242:22243   */\n      0x00\n        /* \"#utility.yul\":22231:22240   */\n      dup4\n        /* \"#utility.yul\":22227:22244   */\n      add\n        /* \"#utility.yul\":22220:22267   */\n      mstore\n        /* \"#utility.yul\":22284:22415   */\n      tag_474\n        /* \"#utility.yul\":22410:22414   */\n      dup2\n        /* \"#utility.yul\":22284:22415   */\n      tag_269\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":22276:22415   */\n      swap1\n      pop\n        /* \"#utility.yul\":22003:22422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22428:22651   */\n    tag_270:\n        /* \"#utility.yul\":22568:22602   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":22564:22565   */\n      0x00\n        /* \"#utility.yul\":22556:22562   */\n      dup3\n        /* \"#utility.yul\":22552:22566   */\n      add\n        /* \"#utility.yul\":22545:22603   */\n      mstore\n        /* \"#utility.yul\":22637:22643   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22632:22634   */\n      0x20\n        /* \"#utility.yul\":22624:22630   */\n      dup3\n        /* \"#utility.yul\":22620:22635   */\n      add\n        /* \"#utility.yul\":22613:22644   */\n      mstore\n        /* \"#utility.yul\":22428:22651   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22657:23023   */\n    tag_271:\n        /* \"#utility.yul\":22799:22802   */\n      0x00\n        /* \"#utility.yul\":22820:22887   */\n      tag_477\n        /* \"#utility.yul\":22884:22886   */\n      0x24\n        /* \"#utility.yul\":22879:22882   */\n      dup4\n        /* \"#utility.yul\":22820:22887   */\n      tag_222\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":22813:22887   */\n      swap2\n      pop\n        /* \"#utility.yul\":22896:22989   */\n      tag_478\n        /* \"#utility.yul\":22985:22988   */\n      dup3\n        /* \"#utility.yul\":22896:22989   */\n      tag_270\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":23014:23016   */\n      0x40\n        /* \"#utility.yul\":23009:23012   */\n      dup3\n        /* \"#utility.yul\":23005:23017   */\n      add\n        /* \"#utility.yul\":22998:23017   */\n      swap1\n      pop\n        /* \"#utility.yul\":22657:23023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23029:23448   */\n    tag_180:\n        /* \"#utility.yul\":23195:23199   */\n      0x00\n        /* \"#utility.yul\":23233:23235   */\n      0x20\n        /* \"#utility.yul\":23222:23231   */\n      dup3\n        /* \"#utility.yul\":23218:23236   */\n      add\n        /* \"#utility.yul\":23210:23236   */\n      swap1\n      pop\n        /* \"#utility.yul\":23282:23291   */\n      dup2\n        /* \"#utility.yul\":23276:23280   */\n      dup2\n        /* \"#utility.yul\":23272:23292   */\n      sub\n        /* \"#utility.yul\":23268:23269   */\n      0x00\n        /* \"#utility.yul\":23257:23266   */\n      dup4\n        /* \"#utility.yul\":23253:23270   */\n      add\n        /* \"#utility.yul\":23246:23293   */\n      mstore\n        /* \"#utility.yul\":23310:23441   */\n      tag_480\n        /* \"#utility.yul\":23436:23440   */\n      dup2\n        /* \"#utility.yul\":23310:23441   */\n      tag_271\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":23302:23441   */\n      swap1\n      pop\n        /* \"#utility.yul\":23029:23448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23454:23648   */\n    tag_185:\n        /* \"#utility.yul\":23494:23498   */\n      0x00\n        /* \"#utility.yul\":23514:23534   */\n      tag_482\n        /* \"#utility.yul\":23532:23533   */\n      dup3\n        /* \"#utility.yul\":23514:23534   */\n      tag_226\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":23509:23534   */\n      swap2\n      pop\n        /* \"#utility.yul\":23548:23568   */\n      tag_483\n        /* \"#utility.yul\":23566:23567   */\n      dup4\n        /* \"#utility.yul\":23548:23568   */\n      tag_226\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":23543:23568   */\n      swap3\n      pop\n        /* \"#utility.yul\":23592:23593   */\n      dup3\n        /* \"#utility.yul\":23589:23590   */\n      dup3\n        /* \"#utility.yul\":23585:23594   */\n      sub\n        /* \"#utility.yul\":23577:23594   */\n      swap1\n      pop\n        /* \"#utility.yul\":23616:23617   */\n      dup2\n        /* \"#utility.yul\":23610:23614   */\n      dup2\n        /* \"#utility.yul\":23607:23618   */\n      gt\n        /* \"#utility.yul\":23604:23641   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":23621:23639   */\n      tag_485\n      tag_259\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":23604:23641   */\n    tag_484:\n        /* \"#utility.yul\":23454:23648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23654:23891   */\n    tag_272:\n        /* \"#utility.yul\":23794:23828   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":23790:23791   */\n      0x00\n        /* \"#utility.yul\":23782:23788   */\n      dup3\n        /* \"#utility.yul\":23778:23792   */\n      add\n        /* \"#utility.yul\":23771:23829   */\n      mstore\n        /* \"#utility.yul\":23863:23883   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":23858:23860   */\n      0x20\n        /* \"#utility.yul\":23850:23856   */\n      dup3\n        /* \"#utility.yul\":23846:23861   */\n      add\n        /* \"#utility.yul\":23839:23884   */\n      mstore\n        /* \"#utility.yul\":23654:23891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23897:24263   */\n    tag_273:\n        /* \"#utility.yul\":24039:24042   */\n      0x00\n        /* \"#utility.yul\":24060:24127   */\n      tag_488\n        /* \"#utility.yul\":24124:24126   */\n      0x32\n        /* \"#utility.yul\":24119:24122   */\n      dup4\n        /* \"#utility.yul\":24060:24127   */\n      tag_222\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":24053:24127   */\n      swap2\n      pop\n        /* \"#utility.yul\":24136:24229   */\n      tag_489\n        /* \"#utility.yul\":24225:24228   */\n      dup3\n        /* \"#utility.yul\":24136:24229   */\n      tag_272\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":24254:24256   */\n      0x40\n        /* \"#utility.yul\":24249:24252   */\n      dup3\n        /* \"#utility.yul\":24245:24257   */\n      add\n        /* \"#utility.yul\":24238:24257   */\n      swap1\n      pop\n        /* \"#utility.yul\":23897:24263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24269:24688   */\n    tag_192:\n        /* \"#utility.yul\":24435:24439   */\n      0x00\n        /* \"#utility.yul\":24473:24475   */\n      0x20\n        /* \"#utility.yul\":24462:24471   */\n      dup3\n        /* \"#utility.yul\":24458:24476   */\n      add\n        /* \"#utility.yul\":24450:24476   */\n      swap1\n      pop\n        /* \"#utility.yul\":24522:24531   */\n      dup2\n        /* \"#utility.yul\":24516:24520   */\n      dup2\n        /* \"#utility.yul\":24512:24532   */\n      sub\n        /* \"#utility.yul\":24508:24509   */\n      0x00\n        /* \"#utility.yul\":24497:24506   */\n      dup4\n        /* \"#utility.yul\":24493:24510   */\n      add\n        /* \"#utility.yul\":24486:24533   */\n      mstore\n        /* \"#utility.yul\":24550:24681   */\n      tag_491\n        /* \"#utility.yul\":24676:24680   */\n      dup2\n        /* \"#utility.yul\":24550:24681   */\n      tag_273\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":24542:24681   */\n      swap1\n      pop\n        /* \"#utility.yul\":24269:24688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24694:24792   */\n    tag_274:\n        /* \"#utility.yul\":24745:24751   */\n      0x00\n        /* \"#utility.yul\":24779:24784   */\n      dup2\n        /* \"#utility.yul\":24773:24785   */\n      mload\n        /* \"#utility.yul\":24763:24785   */\n      swap1\n      pop\n        /* \"#utility.yul\":24694:24792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24798:24966   */\n    tag_275:\n        /* \"#utility.yul\":24881:24892   */\n      0x00\n        /* \"#utility.yul\":24915:24921   */\n      dup3\n        /* \"#utility.yul\":24910:24913   */\n      dup3\n        /* \"#utility.yul\":24903:24922   */\n      mstore\n        /* \"#utility.yul\":24955:24959   */\n      0x20\n        /* \"#utility.yul\":24950:24953   */\n      dup3\n        /* \"#utility.yul\":24946:24960   */\n      add\n        /* \"#utility.yul\":24931:24960   */\n      swap1\n      pop\n        /* \"#utility.yul\":24798:24966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24972:25345   */\n    tag_276:\n        /* \"#utility.yul\":25058:25061   */\n      0x00\n        /* \"#utility.yul\":25086:25124   */\n      tag_495\n        /* \"#utility.yul\":25118:25123   */\n      dup3\n        /* \"#utility.yul\":25086:25124   */\n      tag_274\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":25140:25210   */\n      tag_496\n        /* \"#utility.yul\":25203:25209   */\n      dup2\n        /* \"#utility.yul\":25198:25201   */\n      dup6\n        /* \"#utility.yul\":25140:25210   */\n      tag_275\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":25133:25210   */\n      swap4\n      pop\n        /* \"#utility.yul\":25219:25284   */\n      tag_497\n        /* \"#utility.yul\":25277:25283   */\n      dup2\n        /* \"#utility.yul\":25272:25275   */\n      dup6\n        /* \"#utility.yul\":25265:25269   */\n      0x20\n        /* \"#utility.yul\":25258:25263   */\n      dup7\n        /* \"#utility.yul\":25254:25270   */\n      add\n        /* \"#utility.yul\":25219:25284   */\n      tag_223\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":25309:25338   */\n      tag_498\n        /* \"#utility.yul\":25331:25337   */\n      dup2\n        /* \"#utility.yul\":25309:25338   */\n      tag_224\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":25304:25307   */\n      dup5\n        /* \"#utility.yul\":25300:25339   */\n      add\n        /* \"#utility.yul\":25293:25339   */\n      swap2\n      pop\n        /* \"#utility.yul\":25062:25345   */\n      pop\n        /* \"#utility.yul\":24972:25345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25351:25991   */\n    tag_198:\n        /* \"#utility.yul\":25546:25550   */\n      0x00\n        /* \"#utility.yul\":25584:25587   */\n      0x80\n        /* \"#utility.yul\":25573:25582   */\n      dup3\n        /* \"#utility.yul\":25569:25588   */\n      add\n        /* \"#utility.yul\":25561:25588   */\n      swap1\n      pop\n        /* \"#utility.yul\":25598:25669   */\n      tag_500\n        /* \"#utility.yul\":25666:25667   */\n      0x00\n        /* \"#utility.yul\":25655:25664   */\n      dup4\n        /* \"#utility.yul\":25651:25668   */\n      add\n        /* \"#utility.yul\":25642:25648   */\n      dup8\n        /* \"#utility.yul\":25598:25669   */\n      tag_231\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":25679:25751   */\n      tag_501\n        /* \"#utility.yul\":25747:25749   */\n      0x20\n        /* \"#utility.yul\":25736:25745   */\n      dup4\n        /* \"#utility.yul\":25732:25750   */\n      add\n        /* \"#utility.yul\":25723:25729   */\n      dup7\n        /* \"#utility.yul\":25679:25751   */\n      tag_231\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":25761:25833   */\n      tag_502\n        /* \"#utility.yul\":25829:25831   */\n      0x40\n        /* \"#utility.yul\":25818:25827   */\n      dup4\n        /* \"#utility.yul\":25814:25832   */\n      add\n        /* \"#utility.yul\":25805:25811   */\n      dup6\n        /* \"#utility.yul\":25761:25833   */\n      tag_234\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":25880:25889   */\n      dup2\n        /* \"#utility.yul\":25874:25878   */\n      dup2\n        /* \"#utility.yul\":25870:25890   */\n      sub\n        /* \"#utility.yul\":25865:25867   */\n      0x60\n        /* \"#utility.yul\":25854:25863   */\n      dup4\n        /* \"#utility.yul\":25850:25868   */\n      add\n        /* \"#utility.yul\":25843:25891   */\n      mstore\n        /* \"#utility.yul\":25908:25984   */\n      tag_503\n        /* \"#utility.yul\":25979:25983   */\n      dup2\n        /* \"#utility.yul\":25970:25976   */\n      dup5\n        /* \"#utility.yul\":25908:25984   */\n      tag_276\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":25900:25984   */\n      swap1\n      pop\n        /* \"#utility.yul\":25351:25991   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25997:26138   */\n    tag_277:\n        /* \"#utility.yul\":26053:26058   */\n      0x00\n        /* \"#utility.yul\":26084:26090   */\n      dup2\n        /* \"#utility.yul\":26078:26091   */\n      mload\n        /* \"#utility.yul\":26069:26091   */\n      swap1\n      pop\n        /* \"#utility.yul\":26100:26132   */\n      tag_505\n        /* \"#utility.yul\":26126:26131   */\n      dup2\n        /* \"#utility.yul\":26100:26132   */\n      tag_217\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":25997:26138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26144:26493   */\n    tag_201:\n        /* \"#utility.yul\":26213:26219   */\n      0x00\n        /* \"#utility.yul\":26262:26264   */\n      0x20\n        /* \"#utility.yul\":26250:26259   */\n      dup3\n        /* \"#utility.yul\":26241:26248   */\n      dup5\n        /* \"#utility.yul\":26237:26260   */\n      sub\n        /* \"#utility.yul\":26233:26265   */\n      slt\n        /* \"#utility.yul\":26230:26349   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":26268:26347   */\n      tag_508\n      tag_214\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":26230:26349   */\n    tag_507:\n        /* \"#utility.yul\":26388:26389   */\n      0x00\n        /* \"#utility.yul\":26413:26476   */\n      tag_509\n        /* \"#utility.yul\":26468:26475   */\n      dup5\n        /* \"#utility.yul\":26459:26465   */\n      dup3\n        /* \"#utility.yul\":26448:26457   */\n      dup6\n        /* \"#utility.yul\":26444:26466   */\n      add\n        /* \"#utility.yul\":26413:26476   */\n      tag_277\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":26403:26476   */\n      swap2\n      pop\n        /* \"#utility.yul\":26359:26486   */\n      pop\n        /* \"#utility.yul\":26144:26493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220df9ee4b505f80687ccda3d950ed420915a68244da0d2904dc638169ceb33434864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_61": {
									"entryPoint": null,
									"id": 61,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8796:9",
										"nodeType": "YulBlock",
										"src": "0:8796:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2711:1041:9",
													"nodeType": "YulBlock",
													"src": "2711:1041:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2757:83:9",
																"nodeType": "YulBlock",
																"src": "2757:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2759:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2759:77:9"
																			},
																			"nativeSrc": "2759:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2759:79:9"
																		},
																		"nativeSrc": "2759:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2732:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2732:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2728:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:9"
																		},
																		"nativeSrc": "2728:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2753:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2724:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:9"
																},
																"nativeSrc": "2724:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2724:32:9"
															},
															"nativeSrc": "2721:119:9",
															"nodeType": "YulIf",
															"src": "2721:119:9"
														},
														{
															"nativeSrc": "2850:291:9",
															"nodeType": "YulBlock",
															"src": "2850:291:9",
															"statements": [
																{
																	"nativeSrc": "2865:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2865:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2889:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2889:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2900:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2900:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2885:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2885:3:9"
																				},
																				"nativeSrc": "2885:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2885:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2879:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2879:5:9"
																		},
																		"nativeSrc": "2879:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2869:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2869:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2950:83:9",
																		"nodeType": "YulBlock",
																		"src": "2950:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2952:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "2952:77:9"
																					},
																					"nativeSrc": "2952:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2952:79:9"
																				},
																				"nativeSrc": "2952:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2952:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2922:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2922:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2930:18:9",
																				"nodeType": "YulLiteral",
																				"src": "2930:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2919:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2919:2:9"
																		},
																		"nativeSrc": "2919:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2919:30:9"
																	},
																	"nativeSrc": "2916:117:9",
																	"nodeType": "YulIf",
																	"src": "2916:117:9"
																},
																{
																	"nativeSrc": "3047:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3047:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3103:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3103:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3114:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3114:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3099:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3099:3:9"
																				},
																				"nativeSrc": "3099:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3099:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3123:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3123:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3057:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3057:41:9"
																		},
																		"nativeSrc": "3057:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3057:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3047:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3047:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3151:292:9",
															"nodeType": "YulBlock",
															"src": "3151:292:9",
															"statements": [
																{
																	"nativeSrc": "3166:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3166:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3190:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3190:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3201:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3201:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3186:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3186:3:9"
																				},
																				"nativeSrc": "3186:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3186:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3180:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3180:5:9"
																		},
																		"nativeSrc": "3180:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3170:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3170:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3252:83:9",
																		"nodeType": "YulBlock",
																		"src": "3252:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3254:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3254:77:9"
																					},
																					"nativeSrc": "3254:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3254:79:9"
																				},
																				"nativeSrc": "3254:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3254:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3224:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3224:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3232:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3232:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3221:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3221:2:9"
																		},
																		"nativeSrc": "3221:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:30:9"
																	},
																	"nativeSrc": "3218:117:9",
																	"nodeType": "YulIf",
																	"src": "3218:117:9"
																},
																{
																	"nativeSrc": "3349:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3349:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3405:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3405:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3416:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3416:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3401:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3401:3:9"
																				},
																				"nativeSrc": "3401:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3401:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3425:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3425:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3359:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3359:41:9"
																		},
																		"nativeSrc": "3359:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3349:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3349:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3453:292:9",
															"nodeType": "YulBlock",
															"src": "3453:292:9",
															"statements": [
																{
																	"nativeSrc": "3468:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3468:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3492:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3492:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3503:2:9",
																						"nodeType": "YulLiteral",
																						"src": "3503:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3488:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3488:3:9"
																				},
																				"nativeSrc": "3488:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3488:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3482:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3482:5:9"
																		},
																		"nativeSrc": "3482:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3482:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3472:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3472:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3554:83:9",
																		"nodeType": "YulBlock",
																		"src": "3554:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3556:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3556:77:9"
																					},
																					"nativeSrc": "3556:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3556:79:9"
																				},
																				"nativeSrc": "3556:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3556:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3526:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3526:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3534:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3534:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3523:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3523:2:9"
																		},
																		"nativeSrc": "3523:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:30:9"
																	},
																	"nativeSrc": "3520:117:9",
																	"nodeType": "YulIf",
																	"src": "3520:117:9"
																},
																{
																	"nativeSrc": "3651:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3651:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3707:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3707:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3718:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3718:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3703:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3703:3:9"
																				},
																				"nativeSrc": "3703:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3703:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3727:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3727:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3661:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3661:41:9"
																		},
																		"nativeSrc": "3661:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3651:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3651:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:1182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2665:9:9",
														"nodeType": "YulTypedName",
														"src": "2665:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2676:7:9",
														"nodeType": "YulTypedName",
														"src": "2676:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2688:6:9",
														"nodeType": "YulTypedName",
														"src": "2688:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2696:6:9",
														"nodeType": "YulTypedName",
														"src": "2696:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2704:6:9",
														"nodeType": "YulTypedName",
														"src": "2704:6:9",
														"type": ""
													}
												],
												"src": "2570:1182:9"
											},
											{
												"body": {
													"nativeSrc": "3817:40:9",
													"nodeType": "YulBlock",
													"src": "3817:40:9",
													"statements": [
														{
															"nativeSrc": "3828:22:9",
															"nodeType": "YulAssignment",
															"src": "3828:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3844:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3844:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3838:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3838:5:9"
																},
																"nativeSrc": "3838:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3828:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3758:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3800:5:9",
														"nodeType": "YulTypedName",
														"src": "3800:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3810:6:9",
														"nodeType": "YulTypedName",
														"src": "3810:6:9",
														"type": ""
													}
												],
												"src": "3758:99:9"
											},
											{
												"body": {
													"nativeSrc": "3891:152:9",
													"nodeType": "YulBlock",
													"src": "3891:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3911:77:9",
																		"nodeType": "YulLiteral",
																		"src": "3911:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:9"
																},
																"nativeSrc": "3901:88:9",
																"nodeType": "YulFunctionCall",
																"src": "3901:88:9"
															},
															"nativeSrc": "3901:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "3901:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4005:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4005:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4008:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4008:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3998:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:9"
																},
																"nativeSrc": "3998:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3998:15:9"
															},
															"nativeSrc": "3998:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "3998:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4029:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4029:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4032:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4032:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4022:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:9"
																},
																"nativeSrc": "4022:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4022:15:9"
															},
															"nativeSrc": "4022:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4022:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3863:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3863:180:9"
											},
											{
												"body": {
													"nativeSrc": "4100:269:9",
													"nodeType": "YulBlock",
													"src": "4100:269:9",
													"statements": [
														{
															"nativeSrc": "4110:22:9",
															"nodeType": "YulAssignment",
															"src": "4110:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4124:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4124:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4130:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4130:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4120:3:9"
																},
																"nativeSrc": "4120:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4120:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4110:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:9"
																}
															]
														},
														{
															"nativeSrc": "4141:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4141:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4171:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4171:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4177:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4167:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4167:3:9"
																},
																"nativeSrc": "4167:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4167:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4145:18:9",
																	"nodeType": "YulTypedName",
																	"src": "4145:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4218:51:9",
																"nodeType": "YulBlock",
																"src": "4218:51:9",
																"statements": [
																	{
																		"nativeSrc": "4232:27:9",
																		"nodeType": "YulAssignment",
																		"src": "4232:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4246:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4246:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4254:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4254:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4242:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4242:3:9"
																			},
																			"nativeSrc": "4242:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4232:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4232:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4198:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4198:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4191:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:9"
																},
																"nativeSrc": "4191:26:9",
																"nodeType": "YulFunctionCall",
																"src": "4191:26:9"
															},
															"nativeSrc": "4188:81:9",
															"nodeType": "YulIf",
															"src": "4188:81:9"
														},
														{
															"body": {
																"nativeSrc": "4321:42:9",
																"nodeType": "YulBlock",
																"src": "4321:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4335:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4335:16:9"
																			},
																			"nativeSrc": "4335:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4335:18:9"
																		},
																		"nativeSrc": "4335:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4335:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4285:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "4285:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4308:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4308:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4316:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4316:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4305:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4305:2:9"
																		},
																		"nativeSrc": "4305:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4305:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4282:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4282:2:9"
																},
																"nativeSrc": "4282:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4282:38:9"
															},
															"nativeSrc": "4279:84:9",
															"nodeType": "YulIf",
															"src": "4279:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4049:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4084:4:9",
														"nodeType": "YulTypedName",
														"src": "4084:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4093:6:9",
														"nodeType": "YulTypedName",
														"src": "4093:6:9",
														"type": ""
													}
												],
												"src": "4049:320:9"
											},
											{
												"body": {
													"nativeSrc": "4429:87:9",
													"nodeType": "YulBlock",
													"src": "4429:87:9",
													"statements": [
														{
															"nativeSrc": "4439:11:9",
															"nodeType": "YulAssignment",
															"src": "4439:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "4447:3:9",
																"nodeType": "YulIdentifier",
																"src": "4447:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4439:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4467:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4467:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4470:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4470:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4460:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:9"
																},
																"nativeSrc": "4460:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4460:14:9"
															},
															"nativeSrc": "4460:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "4460:14:9"
														},
														{
															"nativeSrc": "4483:26:9",
															"nodeType": "YulAssignment",
															"src": "4483:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4501:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4501:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4504:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4504:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4491:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4491:9:9"
																},
																"nativeSrc": "4491:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4491:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4483:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4483:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4375:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4416:3:9",
														"nodeType": "YulTypedName",
														"src": "4416:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4424:4:9",
														"nodeType": "YulTypedName",
														"src": "4424:4:9",
														"type": ""
													}
												],
												"src": "4375:141:9"
											},
											{
												"body": {
													"nativeSrc": "4566:49:9",
													"nodeType": "YulBlock",
													"src": "4566:49:9",
													"statements": [
														{
															"nativeSrc": "4576:33:9",
															"nodeType": "YulAssignment",
															"src": "4576:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4594:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4594:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4601:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4601:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4590:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:9"
																		},
																		"nativeSrc": "4590:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4590:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4606:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4606:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4586:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:9"
																},
																"nativeSrc": "4586:23:9",
																"nodeType": "YulFunctionCall",
																"src": "4586:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4522:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:9",
														"nodeType": "YulTypedName",
														"src": "4549:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4559:6:9",
														"nodeType": "YulTypedName",
														"src": "4559:6:9",
														"type": ""
													}
												],
												"src": "4522:93:9"
											},
											{
												"body": {
													"nativeSrc": "4674:54:9",
													"nodeType": "YulBlock",
													"src": "4674:54:9",
													"statements": [
														{
															"nativeSrc": "4684:37:9",
															"nodeType": "YulAssignment",
															"src": "4684:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4709:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4709:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4715:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4715:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4705:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:9"
																},
																"nativeSrc": "4705:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4705:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4684:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4684:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4621:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4649:4:9",
														"nodeType": "YulTypedName",
														"src": "4649:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4655:5:9",
														"nodeType": "YulTypedName",
														"src": "4655:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4665:8:9",
														"nodeType": "YulTypedName",
														"src": "4665:8:9",
														"type": ""
													}
												],
												"src": "4621:107:9"
											},
											{
												"body": {
													"nativeSrc": "4810:317:9",
													"nodeType": "YulBlock",
													"src": "4810:317:9",
													"statements": [
														{
															"nativeSrc": "4820:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4820:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4841:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "4841:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4853:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4853:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4837:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:9"
																},
																"nativeSrc": "4837:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4837:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4824:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4824:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4864:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4864:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4895:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:66:9",
																		"nodeType": "YulLiteral",
																		"src": "4906:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4876:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4876:18:9"
																},
																"nativeSrc": "4876:97:9",
																"nodeType": "YulFunctionCall",
																"src": "4876:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4868:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4868:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4982:51:9",
															"nodeType": "YulAssignment",
															"src": "4982:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5013:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5024:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "5024:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4994:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4994:18:9"
																},
																"nativeSrc": "4994:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4994:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4982:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4982:8:9"
																}
															]
														},
														{
															"nativeSrc": "5042:30:9",
															"nodeType": "YulAssignment",
															"src": "5042:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5055:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5055:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5066:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5062:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5062:3:9"
																		},
																		"nativeSrc": "5062:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5062:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:9"
																},
																"nativeSrc": "5051:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5051:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5042:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5042:5:9"
																}
															]
														},
														{
															"nativeSrc": "5081:40:9",
															"nodeType": "YulAssignment",
															"src": "5081:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5094:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5094:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5105:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "5105:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5115:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5115:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5101:3:9"
																		},
																		"nativeSrc": "5101:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5101:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5091:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5091:2:9"
																},
																"nativeSrc": "5091:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5091:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5081:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5081:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4734:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4771:5:9",
														"nodeType": "YulTypedName",
														"src": "4771:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4778:10:9",
														"nodeType": "YulTypedName",
														"src": "4778:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4790:8:9",
														"nodeType": "YulTypedName",
														"src": "4790:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4803:6:9",
														"nodeType": "YulTypedName",
														"src": "4803:6:9",
														"type": ""
													}
												],
												"src": "4734:393:9"
											},
											{
												"body": {
													"nativeSrc": "5178:32:9",
													"nodeType": "YulBlock",
													"src": "5178:32:9",
													"statements": [
														{
															"nativeSrc": "5188:16:9",
															"nodeType": "YulAssignment",
															"src": "5188:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "5199:5:9",
																"nodeType": "YulIdentifier",
																"src": "5199:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5188:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5188:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5133:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5160:5:9",
														"nodeType": "YulTypedName",
														"src": "5160:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5170:7:9",
														"nodeType": "YulTypedName",
														"src": "5170:7:9",
														"type": ""
													}
												],
												"src": "5133:77:9"
											},
											{
												"body": {
													"nativeSrc": "5248:28:9",
													"nodeType": "YulBlock",
													"src": "5248:28:9",
													"statements": [
														{
															"nativeSrc": "5258:12:9",
															"nodeType": "YulAssignment",
															"src": "5258:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5265:5:9",
																"nodeType": "YulIdentifier",
																"src": "5265:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5258:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5216:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5234:5:9",
														"nodeType": "YulTypedName",
														"src": "5234:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5244:3:9",
														"nodeType": "YulTypedName",
														"src": "5244:3:9",
														"type": ""
													}
												],
												"src": "5216:60:9"
											},
											{
												"body": {
													"nativeSrc": "5342:82:9",
													"nodeType": "YulBlock",
													"src": "5342:82:9",
													"statements": [
														{
															"nativeSrc": "5352:66:9",
															"nodeType": "YulAssignment",
															"src": "5352:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5410:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5410:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5392:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5392:17:9"
																				},
																				"nativeSrc": "5392:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5392:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5383:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5383:8:9"
																		},
																		"nativeSrc": "5383:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5383:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5365:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5365:17:9"
																},
																"nativeSrc": "5365:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5365:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5352:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5352:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5282:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5322:5:9",
														"nodeType": "YulTypedName",
														"src": "5322:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5332:9:9",
														"nodeType": "YulTypedName",
														"src": "5332:9:9",
														"type": ""
													}
												],
												"src": "5282:142:9"
											},
											{
												"body": {
													"nativeSrc": "5477:28:9",
													"nodeType": "YulBlock",
													"src": "5477:28:9",
													"statements": [
														{
															"nativeSrc": "5487:12:9",
															"nodeType": "YulAssignment",
															"src": "5487:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5494:5:9",
																"nodeType": "YulIdentifier",
																"src": "5494:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5487:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5430:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5463:5:9",
														"nodeType": "YulTypedName",
														"src": "5463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5473:3:9",
														"nodeType": "YulTypedName",
														"src": "5473:3:9",
														"type": ""
													}
												],
												"src": "5430:75:9"
											},
											{
												"body": {
													"nativeSrc": "5587:193:9",
													"nodeType": "YulBlock",
													"src": "5587:193:9",
													"statements": [
														{
															"nativeSrc": "5597:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5597:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5652:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "5652:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5621:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5621:30:9"
																},
																"nativeSrc": "5621:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5621:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5601:16:9",
																	"nodeType": "YulTypedName",
																	"src": "5601:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5676:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5676:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5716:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "5716:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5710:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5710:5:9"
																				},
																				"nativeSrc": "5710:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5710:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5723:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5723:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5755:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "5755:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5731:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "5731:23:9"
																				},
																				"nativeSrc": "5731:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5731:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5682:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5682:27:9"
																		},
																		"nativeSrc": "5682:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5682:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5669:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:9"
																},
																"nativeSrc": "5669:105:9",
																"nodeType": "YulFunctionCall",
																"src": "5669:105:9"
															},
															"nativeSrc": "5669:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "5669:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5511:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5564:4:9",
														"nodeType": "YulTypedName",
														"src": "5564:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5570:6:9",
														"nodeType": "YulTypedName",
														"src": "5570:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5578:7:9",
														"nodeType": "YulTypedName",
														"src": "5578:7:9",
														"type": ""
													}
												],
												"src": "5511:269:9"
											},
											{
												"body": {
													"nativeSrc": "5835:24:9",
													"nodeType": "YulBlock",
													"src": "5835:24:9",
													"statements": [
														{
															"nativeSrc": "5845:8:9",
															"nodeType": "YulAssignment",
															"src": "5845:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5852:1:9",
																"nodeType": "YulLiteral",
																"src": "5852:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5845:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5786:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5831:3:9",
														"nodeType": "YulTypedName",
														"src": "5831:3:9",
														"type": ""
													}
												],
												"src": "5786:73:9"
											},
											{
												"body": {
													"nativeSrc": "5918:136:9",
													"nodeType": "YulBlock",
													"src": "5918:136:9",
													"statements": [
														{
															"nativeSrc": "5928:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5928:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5942:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5942:30:9"
																},
																"nativeSrc": "5942:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5942:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5932:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5932:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6027:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6027:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6033:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6033:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6041:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5983:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5983:43:9"
																},
																"nativeSrc": "5983:65:9",
																"nodeType": "YulFunctionCall",
																"src": "5983:65:9"
															},
															"nativeSrc": "5983:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "5983:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5865:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5904:4:9",
														"nodeType": "YulTypedName",
														"src": "5904:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5910:6:9",
														"nodeType": "YulTypedName",
														"src": "5910:6:9",
														"type": ""
													}
												],
												"src": "5865:189:9"
											},
											{
												"body": {
													"nativeSrc": "6110:136:9",
													"nodeType": "YulBlock",
													"src": "6110:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6177:63:9",
																"nodeType": "YulBlock",
																"src": "6177:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6221:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6221:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6228:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6228:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6191:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "6191:29:9"
																			},
																			"nativeSrc": "6191:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:39:9"
																		},
																		"nativeSrc": "6191:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6130:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6130:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6137:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6137:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6127:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6127:2:9"
																},
																"nativeSrc": "6127:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6127:14:9"
															},
															"nativeSrc": "6120:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6142:26:9",
																"nodeType": "YulBlock",
																"src": "6142:26:9",
																"statements": [
																	{
																		"nativeSrc": "6144:22:9",
																		"nodeType": "YulAssignment",
																		"src": "6144:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6157:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6157:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6164:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6164:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6153:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6153:3:9"
																			},
																			"nativeSrc": "6153:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6153:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6144:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6144:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6124:2:9",
																"nodeType": "YulBlock",
																"src": "6124:2:9",
																"statements": []
															},
															"src": "6120:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6060:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6098:5:9",
														"nodeType": "YulTypedName",
														"src": "6098:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6105:3:9",
														"nodeType": "YulTypedName",
														"src": "6105:3:9",
														"type": ""
													}
												],
												"src": "6060:186:9"
											},
											{
												"body": {
													"nativeSrc": "6331:464:9",
													"nodeType": "YulBlock",
													"src": "6331:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6357:431:9",
																"nodeType": "YulBlock",
																"src": "6357:431:9",
																"statements": [
																	{
																		"nativeSrc": "6371:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6371:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6419:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6419:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6387:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "6387:31:9"
																			},
																			"nativeSrc": "6387:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6387:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6375:8:9",
																				"nodeType": "YulTypedName",
																				"src": "6375:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6438:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6438:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6461:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "6461:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6489:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6489:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6471:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "6471:17:9"
																					},
																					"nativeSrc": "6471:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6471:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6457:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6457:3:9"
																			},
																			"nativeSrc": "6457:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6457:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6442:11:9",
																				"nodeType": "YulTypedName",
																				"src": "6442:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6658:27:9",
																			"nodeType": "YulBlock",
																			"src": "6658:27:9",
																			"statements": [
																				{
																					"nativeSrc": "6660:23:9",
																					"nodeType": "YulAssignment",
																					"src": "6660:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6675:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "6675:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6660:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "6660:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6642:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6642:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6654:2:9",
																					"nodeType": "YulLiteral",
																					"src": "6654:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6639:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "6639:2:9"
																			},
																			"nativeSrc": "6639:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6639:18:9"
																		},
																		"nativeSrc": "6636:49:9",
																		"nodeType": "YulIf",
																		"src": "6636:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6727:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "6727:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6744:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "6744:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6772:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6772:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6754:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "6754:17:9"
																							},
																							"nativeSrc": "6754:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6754:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6740:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6740:3:9"
																					},
																					"nativeSrc": "6740:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6740:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6698:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "6698:28:9"
																			},
																			"nativeSrc": "6698:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6698:80:9"
																		},
																		"nativeSrc": "6698:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6698:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6348:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6353:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6353:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6345:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6345:2:9"
																},
																"nativeSrc": "6345:11:9",
																"nodeType": "YulFunctionCall",
																"src": "6345:11:9"
															},
															"nativeSrc": "6342:446:9",
															"nodeType": "YulIf",
															"src": "6342:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6252:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6307:5:9",
														"nodeType": "YulTypedName",
														"src": "6307:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6314:3:9",
														"nodeType": "YulTypedName",
														"src": "6314:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6319:10:9",
														"nodeType": "YulTypedName",
														"src": "6319:10:9",
														"type": ""
													}
												],
												"src": "6252:543:9"
											},
											{
												"body": {
													"nativeSrc": "6864:54:9",
													"nodeType": "YulBlock",
													"src": "6864:54:9",
													"statements": [
														{
															"nativeSrc": "6874:37:9",
															"nodeType": "YulAssignment",
															"src": "6874:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6899:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6899:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6905:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6895:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6895:3:9"
																},
																"nativeSrc": "6895:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6895:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6874:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6874:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6801:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6839:4:9",
														"nodeType": "YulTypedName",
														"src": "6839:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6845:5:9",
														"nodeType": "YulTypedName",
														"src": "6845:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6855:8:9",
														"nodeType": "YulTypedName",
														"src": "6855:8:9",
														"type": ""
													}
												],
												"src": "6801:117:9"
											},
											{
												"body": {
													"nativeSrc": "6975:118:9",
													"nodeType": "YulBlock",
													"src": "6975:118:9",
													"statements": [
														{
															"nativeSrc": "6985:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6985:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7034:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7034:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7037:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7037:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7030:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7030:3:9"
																				},
																				"nativeSrc": "7030:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7030:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7049:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7049:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7045:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7045:3:9"
																				},
																				"nativeSrc": "7045:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7045:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7001:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "7001:28:9"
																		},
																		"nativeSrc": "7001:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6997:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:9"
																},
																"nativeSrc": "6997:56:9",
																"nodeType": "YulFunctionCall",
																"src": "6997:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6989:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6989:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7062:25:9",
															"nodeType": "YulAssignment",
															"src": "7062:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7076:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7076:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7082:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7082:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7072:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:9"
																},
																"nativeSrc": "7072:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7062:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6924:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6952:4:9",
														"nodeType": "YulTypedName",
														"src": "6952:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6958:5:9",
														"nodeType": "YulTypedName",
														"src": "6958:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6968:6:9",
														"nodeType": "YulTypedName",
														"src": "6968:6:9",
														"type": ""
													}
												],
												"src": "6924:169:9"
											},
											{
												"body": {
													"nativeSrc": "7179:214:9",
													"nodeType": "YulBlock",
													"src": "7179:214:9",
													"statements": [
														{
															"nativeSrc": "7312:37:9",
															"nodeType": "YulAssignment",
															"src": "7312:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7339:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7339:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7345:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7345:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7320:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7320:18:9"
																},
																"nativeSrc": "7320:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7320:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7312:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7312:4:9"
																}
															]
														},
														{
															"nativeSrc": "7358:29:9",
															"nodeType": "YulAssignment",
															"src": "7358:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7369:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7369:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7379:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7379:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7382:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7375:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:9"
																		},
																		"nativeSrc": "7375:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7375:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7366:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7366:2:9"
																},
																"nativeSrc": "7366:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7366:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7358:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7358:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7098:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7160:4:9",
														"nodeType": "YulTypedName",
														"src": "7160:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7166:3:9",
														"nodeType": "YulTypedName",
														"src": "7166:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7174:4:9",
														"nodeType": "YulTypedName",
														"src": "7174:4:9",
														"type": ""
													}
												],
												"src": "7098:295:9"
											},
											{
												"body": {
													"nativeSrc": "7490:1303:9",
													"nodeType": "YulBlock",
													"src": "7490:1303:9",
													"statements": [
														{
															"nativeSrc": "7501:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7501:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7548:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7548:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7515:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "7515:32:9"
																},
																"nativeSrc": "7515:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7515:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7505:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7505:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7637:22:9",
																"nodeType": "YulBlock",
																"src": "7637:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7639:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7639:16:9"
																			},
																			"nativeSrc": "7639:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7639:18:9"
																		},
																		"nativeSrc": "7639:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7639:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7609:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7609:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7617:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7617:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7606:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7606:2:9"
																},
																"nativeSrc": "7606:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7606:30:9"
															},
															"nativeSrc": "7603:56:9",
															"nodeType": "YulIf",
															"src": "7603:56:9"
														},
														{
															"nativeSrc": "7669:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7669:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7715:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7715:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7709:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7709:5:9"
																		},
																		"nativeSrc": "7709:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7709:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7683:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "7683:25:9"
																},
																"nativeSrc": "7683:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7683:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7673:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7673:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7814:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7814:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7820:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7828:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7768:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "7768:45:9"
																},
																"nativeSrc": "7768:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7768:67:9"
															},
															"nativeSrc": "7768:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "7768:67:9"
														},
														{
															"nativeSrc": "7845:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7845:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7862:1:9",
																"nodeType": "YulLiteral",
																"src": "7862:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7849:9:9",
																	"nodeType": "YulTypedName",
																	"src": "7849:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7873:17:9",
															"nodeType": "YulAssignment",
															"src": "7873:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7886:4:9",
																"nodeType": "YulLiteral",
																"src": "7886:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7873:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7873:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7937:611:9",
																		"nodeType": "YulBlock",
																		"src": "7937:611:9",
																		"statements": [
																			{
																				"nativeSrc": "7951:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7951:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7970:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7970:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7982:4:9",
																									"nodeType": "YulLiteral",
																									"src": "7982:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7978:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7978:3:9"
																							},
																							"nativeSrc": "7978:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7978:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7966:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7966:3:9"
																					},
																					"nativeSrc": "7966:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7966:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7955:7:9",
																						"nodeType": "YulTypedName",
																						"src": "7955:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8002:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8002:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8048:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8048:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8016:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "8016:31:9"
																					},
																					"nativeSrc": "8016:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8016:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8006:6:9",
																						"nodeType": "YulTypedName",
																						"src": "8006:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8066:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8066:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8075:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8070:1:9",
																						"nodeType": "YulTypedName",
																						"src": "8070:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8134:163:9",
																					"nodeType": "YulBlock",
																					"src": "8134:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8159:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8159:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8177:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "8177:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8182:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "8182:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8173:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8173:3:9"
																												},
																												"nativeSrc": "8173:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8173:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8167:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "8167:5:9"
																										},
																										"nativeSrc": "8167:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8167:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8152:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8152:6:9"
																								},
																								"nativeSrc": "8152:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8152:42:9"
																							},
																							"nativeSrc": "8152:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8152:42:9"
																						},
																						{
																							"nativeSrc": "8211:24:9",
																							"nodeType": "YulAssignment",
																							"src": "8211:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8225:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8225:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8233:1:9",
																										"nodeType": "YulLiteral",
																										"src": "8233:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8221:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8221:3:9"
																								},
																								"nativeSrc": "8221:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8221:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8211:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8211:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8252:31:9",
																							"nodeType": "YulAssignment",
																							"src": "8252:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8269:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "8269:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8280:2:9",
																										"nodeType": "YulLiteral",
																										"src": "8280:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8265:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8265:3:9"
																								},
																								"nativeSrc": "8265:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8265:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8252:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "8252:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8100:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "8100:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8103:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8103:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8097:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8097:2:9"
																					},
																					"nativeSrc": "8097:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8097:14:9"
																				},
																				"nativeSrc": "8089:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8112:21:9",
																					"nodeType": "YulBlock",
																					"src": "8112:21:9",
																					"statements": [
																						{
																							"nativeSrc": "8114:17:9",
																							"nodeType": "YulAssignment",
																							"src": "8114:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8123:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "8123:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8126:4:9",
																										"nodeType": "YulLiteral",
																										"src": "8126:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8119:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8119:3:9"
																								},
																								"nativeSrc": "8119:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8119:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8114:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "8114:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8093:3:9",
																					"nodeType": "YulBlock",
																					"src": "8093:3:9",
																					"statements": []
																				},
																				"src": "8089:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "8333:156:9",
																					"nodeType": "YulBlock",
																					"src": "8333:156:9",
																					"statements": [
																						{
																							"nativeSrc": "8351:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8351:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8378:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8378:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8383:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8383:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8374:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8374:3:9"
																										},
																										"nativeSrc": "8374:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8374:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8368:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8368:5:9"
																								},
																								"nativeSrc": "8368:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8368:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8355:9:9",
																									"nodeType": "YulTypedName",
																									"src": "8355:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8418:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8418:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8445:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8445:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8460:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "8460:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8468:4:9",
																														"nodeType": "YulLiteral",
																														"src": "8468:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8456:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8456:3:9"
																												},
																												"nativeSrc": "8456:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8456:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8426:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "8426:18:9"
																										},
																										"nativeSrc": "8426:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8426:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8411:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8411:6:9"
																								},
																								"nativeSrc": "8411:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8411:64:9"
																							},
																							"nativeSrc": "8411:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8411:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8316:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8316:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8325:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8325:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8313:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8313:2:9"
																					},
																					"nativeSrc": "8313:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8313:19:9"
																				},
																				"nativeSrc": "8310:179:9",
																				"nodeType": "YulIf",
																				"src": "8310:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8509:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8509:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8523:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "8523:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8531:1:9",
																											"nodeType": "YulLiteral",
																											"src": "8531:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8519:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "8519:3:9"
																									},
																									"nativeSrc": "8519:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "8519:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8535:1:9",
																									"nodeType": "YulLiteral",
																									"src": "8535:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8515:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8515:3:9"
																							},
																							"nativeSrc": "8515:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8515:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8502:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8502:6:9"
																					},
																					"nativeSrc": "8502:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8502:36:9"
																				},
																				"nativeSrc": "8502:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8502:36:9"
																			}
																		]
																	},
																	"nativeSrc": "7930:618:9",
																	"nodeType": "YulCase",
																	"src": "7930:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7935:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7935:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8565:222:9",
																		"nodeType": "YulBlock",
																		"src": "8565:222:9",
																		"statements": [
																			{
																				"nativeSrc": "8579:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8579:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8592:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8592:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8583:5:9",
																						"nodeType": "YulTypedName",
																						"src": "8583:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8616:67:9",
																					"nodeType": "YulBlock",
																					"src": "8616:67:9",
																					"statements": [
																						{
																							"nativeSrc": "8634:35:9",
																							"nodeType": "YulAssignment",
																							"src": "8634:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8653:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "8653:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8658:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "8658:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8649:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "8649:3:9"
																										},
																										"nativeSrc": "8649:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8649:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8643:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8643:5:9"
																								},
																								"nativeSrc": "8643:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8643:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8634:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8634:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8609:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8609:6:9"
																				},
																				"nativeSrc": "8606:77:9",
																				"nodeType": "YulIf",
																				"src": "8606:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8703:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8703:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8762:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "8762:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8769:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8769:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8709:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "8709:52:9"
																							},
																							"nativeSrc": "8709:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8709:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8696:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8696:6:9"
																					},
																					"nativeSrc": "8696:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8696:81:9"
																				},
																				"nativeSrc": "8696:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "8696:81:9"
																			}
																		]
																	},
																	"nativeSrc": "8557:230:9",
																	"nodeType": "YulCase",
																	"src": "8557:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7910:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7910:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7918:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7918:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7907:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7907:2:9"
																},
																"nativeSrc": "7907:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7907:14:9"
															},
															"nativeSrc": "7900:887:9",
															"nodeType": "YulSwitch",
															"src": "7900:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7398:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7479:4:9",
														"nodeType": "YulTypedName",
														"src": "7479:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7485:3:9",
														"nodeType": "YulTypedName",
														"src": "7485:3:9",
														"type": ""
													}
												],
												"src": "7398:1395:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612a51380380612a51833981810160405281019061003191906101b5565b825f908161003f9190610466565b50816001908161004f9190610466565b50806002908161005f9190610466565b50505050610535565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100c782610081565b810181811067ffffffffffffffff821117156100e6576100e5610091565b5b80604052505050565b5f6100f8610068565b905061010482826100be565b919050565b5f67ffffffffffffffff82111561012357610122610091565b5b61012c82610081565b9050602081019050919050565b8281835e5f83830152505050565b5f61015961015484610109565b6100ef565b9050828152602081018484840111156101755761017461007d565b5b610180848285610139565b509392505050565b5f82601f83011261019c5761019b610079565b5b81516101ac848260208601610147565b91505092915050565b5f805f606084860312156101cc576101cb610071565b5b5f84015167ffffffffffffffff8111156101e9576101e8610075565b5b6101f586828701610188565b935050602084015167ffffffffffffffff81111561021657610215610075565b5b61022286828701610188565b925050604084015167ffffffffffffffff81111561024357610242610075565b5b61024f86828701610188565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102a757607f821691505b6020821081036102ba576102b9610263565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261031c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102e1565b61032686836102e1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61036a6103656103608461033e565b610347565b61033e565b9050919050565b5f819050919050565b61038383610350565b61039761038f82610371565b8484546102ed565b825550505050565b5f90565b6103ab61039f565b6103b681848461037a565b505050565b5b818110156103d9576103ce5f826103a3565b6001810190506103bc565b5050565b601f82111561041e576103ef816102c0565b6103f8846102d2565b81016020851015610407578190505b61041b610413856102d2565b8301826103bb565b50505b505050565b5f82821c905092915050565b5f61043e5f1984600802610423565b1980831691505092915050565b5f610456838361042f565b9150826002028217905092915050565b61046f82610259565b67ffffffffffffffff81111561048857610487610091565b5b6104928254610290565b61049d8282856103dd565b5f60209050601f8311600181146104ce575f84156104bc578287015190505b6104c6858261044b565b86555061052d565b601f1984166104dc866102c0565b5f5b82811015610503578489015182556001820191506020850194506020810190506104de565b86831015610520578489015161051c601f89168261042f565b8355505b6001600288020188555050505b505050505050565b61250f806105425f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806342842e0e11610095578063a22cb46511610064578063a22cb46514610293578063b88d4fde146102af578063c87b56dd146102cb578063e985e9c5146102fb576100f3565b806342842e0e146101f95780636352211e1461021557806370a082311461024557806395d89b4114610275576100f3565b8063095ea7b3116100d1578063095ea7b314610175578063162790551461019157806323b872dd146101c157806340c10f19146101dd576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c919061176f565b61032b565b60405161011e91906117b4565b60405180910390f35b61012f6103bc565b60405161013c919061183d565b60405180910390f35b61015f600480360381019061015a9190611890565b61044b565b60405161016c91906118fa565b60405180910390f35b61018f600480360381019061018a919061193d565b610522565b005b6101ab60048036038101906101a6919061197b565b61073b565b6040516101b891906117b4565b60405180910390f35b6101db60048036038101906101d691906119a6565b61074c565b005b6101f760048036038101906101f2919061193d565b6107a5565b005b610213600480360381019061020e91906119a6565b6109b3565b005b61022f600480360381019061022a9190611890565b6109d2565b60405161023c91906118fa565b60405180910390f35b61025f600480360381019061025a919061197b565b610a0b565b60405161026c9190611a05565b60405180910390f35b61027d610a51565b60405161028a919061183d565b60405180910390f35b6102ad60048036038101906102a89190611a48565b610ae1565b005b6102c960048036038101906102c49190611bb2565b610c4c565b005b6102e560048036038101906102e09190611890565b610ca7565b6040516102f2919061183d565b60405180910390f35b61031560048036038101906103109190611c32565b610dd7565b60405161032291906117b4565b60405180910390f35b5f6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103b55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60605f80546103ca90611c9d565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690611c9d565b80156104415780601f1061041857610100808354040283529160200191610441565b820191905f5260205f20905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b5f8073ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190611d3d565b60405180910390fd5b60055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61052c826109d2565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390611dcb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610631575060055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806106ed575060065f60035f8581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390611e59565b60405180910390fd5b6107368383610e65565b505050565b5f80823b90505f8111915050919050565b6107563382611075565b610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90611ee7565b60405180910390fd5b6107a083838361121c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a90611f4f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890611fb7565b60405180910390fd5b8160035f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461094d9190612002565b92505081905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6109cd83838360405180602001604052805f815250610c4c565b505050565b5f60035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610a6090611c9d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8c90611c9d565b8015610ad75780601f10610aae57610100808354040283529160200191610ad7565b820191905f5260205f20905b815481529060010190602001808311610aba57829003601f168201915b5050505050905090565b5f3390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a9061207f565b60405180910390fd5b8160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610c3f91906117b4565b60405180910390a3505050565b610c563383611075565b610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90611ee7565b60405180910390fd5b610ca1848484846114e0565b50505050565b60605f73ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e9061210d565b60405180910390fd5b60028054610d5490611c9d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8090611c9d565b8015610dcb5780601f10610da257610100808354040283529160200191610dcb565b820191905f5260205f20905b815481529060010190602001808311610dae57829003601f168201915b50505050509050919050565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f80575060065f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb690612175565b60405180910390fd5b8160055f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661102f836109d2565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f61107f8261153c565b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612203565b60405180910390fd5b5f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061118757508373ffffffffffffffffffffffffffffffffffffffff1660055f8581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611213575060065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b91505092915050565b60035f8281526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b190612291565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f9061231f565b60405180910390fd5b6113323382611075565b61133a575f80fd5b8160035f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113d69190612002565b92505081905550600160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461142a919061233d565b925050819055505f60055f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6114eb84848461121c565b6114f7848484846115a4565b611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d906123e0565b60405180910390fd5b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f6115ae8461073b565b156116fc578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016115f29493929190612450565b6020604051808303815f875af192505050801561162d57506040513d601f19601f8201168201806040525081019061162a91906124ae565b60015b6116ac573d805f811461165b576040519150601f19603f3d011682016040523d82523d5f602084013e611660565b606091505b505f8151036116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b906123e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611701565b600190505b949350505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61174e8161171a565b8114611758575f80fd5b50565b5f8135905061176981611745565b92915050565b5f6020828403121561178457611783611712565b5b5f6117918482850161175b565b91505092915050565b5f8115159050919050565b6117ae8161179a565b82525050565b5f6020820190506117c75f8301846117a5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61180f826117cd565b61181981856117d7565b93506118298185602086016117e7565b611832816117f5565b840191505092915050565b5f6020820190508181035f8301526118558184611805565b905092915050565b5f819050919050565b61186f8161185d565b8114611879575f80fd5b50565b5f8135905061188a81611866565b92915050565b5f602082840312156118a5576118a4611712565b5b5f6118b28482850161187c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118e4826118bb565b9050919050565b6118f4816118da565b82525050565b5f60208201905061190d5f8301846118eb565b92915050565b61191c816118da565b8114611926575f80fd5b50565b5f8135905061193781611913565b92915050565b5f806040838503121561195357611952611712565b5b5f61196085828601611929565b92505060206119718582860161187c565b9150509250929050565b5f602082840312156119905761198f611712565b5b5f61199d84828501611929565b91505092915050565b5f805f606084860312156119bd576119bc611712565b5b5f6119ca86828701611929565b93505060206119db86828701611929565b92505060406119ec8682870161187c565b9150509250925092565b6119ff8161185d565b82525050565b5f602082019050611a185f8301846119f6565b92915050565b611a278161179a565b8114611a31575f80fd5b50565b5f81359050611a4281611a1e565b92915050565b5f8060408385031215611a5e57611a5d611712565b5b5f611a6b85828601611929565b9250506020611a7c85828601611a34565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ac4826117f5565b810181811067ffffffffffffffff82111715611ae357611ae2611a8e565b5b80604052505050565b5f611af5611709565b9050611b018282611abb565b919050565b5f67ffffffffffffffff821115611b2057611b1f611a8e565b5b611b29826117f5565b9050602081019050919050565b828183375f83830152505050565b5f611b56611b5184611b06565b611aec565b905082815260208101848484011115611b7257611b71611a8a565b5b611b7d848285611b36565b509392505050565b5f82601f830112611b9957611b98611a86565b5b8135611ba9848260208601611b44565b91505092915050565b5f805f8060808587031215611bca57611bc9611712565b5b5f611bd787828801611929565b9450506020611be887828801611929565b9350506040611bf98782880161187c565b925050606085013567ffffffffffffffff811115611c1a57611c19611716565b5b611c2687828801611b85565b91505092959194509250565b5f8060408385031215611c4857611c47611712565b5b5f611c5585828601611929565b9250506020611c6685828601611929565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611cb457607f821691505b602082108103611cc757611cc6611c70565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611d27602c836117d7565b9150611d3282611ccd565b604082019050919050565b5f6020820190508181035f830152611d5481611d1b565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611db56021836117d7565b9150611dc082611d5b565b604082019050919050565b5f6020820190508181035f830152611de281611da9565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f775f8201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b5f611e436038836117d7565b9150611e4e82611de9565b604082019050919050565b5f6020820190508181035f830152611e7081611e37565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f5f8201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b5f611ed16031836117d7565b9150611edc82611e77565b604082019050919050565b5f6020820190508181035f830152611efe81611ec5565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f20616464726573735f82015250565b5f611f396020836117d7565b9150611f4482611f05565b602082019050919050565b5f6020820190508181035f830152611f6681611f2d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e746564000000005f82015250565b5f611fa1601c836117d7565b9150611fac82611f6d565b602082019050919050565b5f6020820190508181035f830152611fce81611f95565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61200c8261185d565b91506120178361185d565b925082820190508082111561202f5761202e611fd5565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f6120696019836117d7565b915061207482612035565b602082019050919050565b5f6020820190508181035f8301526120968161205d565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f5f8201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b5f6120f7602f836117d7565b91506121028261209d565b604082019050919050565b5f6020820190508181035f830152612124816120eb565b9050919050565b7f4552433732313a2063616c6c6572206e6f7420746f6b656e206f776e657200005f82015250565b5f61215f601e836117d7565b915061216a8261212b565b602082019050919050565b5f6020820190508181035f83015261218c81612153565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f6121ed602c836117d7565b91506121f882612193565b604082019050919050565b5f6020820190508181035f83015261221a816121e1565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f61227b6025836117d7565b915061228682612221565b604082019050919050565b5f6020820190508181035f8301526122a88161226f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6123096024836117d7565b9150612314826122af565b604082019050919050565b5f6020820190508181035f830152612336816122fd565b9050919050565b5f6123478261185d565b91506123528361185d565b925082820390508181111561236a57612369611fd5565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f6123ca6032836117d7565b91506123d582612370565b604082019050919050565b5f6020820190508181035f8301526123f7816123be565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612422826123fe565b61242c8185612408565b935061243c8185602086016117e7565b612445816117f5565b840191505092915050565b5f6080820190506124635f8301876118eb565b61247060208301866118eb565b61247d60408301856119f6565b818103606083015261248f8184612418565b905095945050505050565b5f815190506124a881611745565b92915050565b5f602082840312156124c3576124c2611712565b5b5f6124d08482850161249a565b9150509291505056fea2646970667358221220df9ee4b505f80687ccda3d950ed420915a68244da0d2904dc638169ceb33434864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2A51 CODESIZE SUB DUP1 PUSH2 0x2A51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST DUP3 PUSH0 SWAP1 DUP2 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST POP DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST POP POP POP POP PUSH2 0x535 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC7 DUP3 PUSH2 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE6 JUMPI PUSH2 0xE5 PUSH2 0x91 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF8 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP PUSH2 0x104 DUP3 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x123 JUMPI PUSH2 0x122 PUSH2 0x91 JUMP JUMPDEST JUMPDEST PUSH2 0x12C DUP3 PUSH2 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x159 PUSH2 0x154 DUP5 PUSH2 0x109 JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175 JUMPI PUSH2 0x174 PUSH2 0x7D JUMP JUMPDEST JUMPDEST PUSH2 0x180 DUP5 DUP3 DUP6 PUSH2 0x139 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19C JUMPI PUSH2 0x19B PUSH2 0x79 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x147 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x71 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E9 JUMPI PUSH2 0x1E8 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x1F5 DUP7 DUP3 DUP8 ADD PUSH2 0x188 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x216 JUMPI PUSH2 0x215 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x222 DUP7 DUP3 DUP8 ADD PUSH2 0x188 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x243 JUMPI PUSH2 0x242 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x24F DUP7 DUP3 DUP8 ADD PUSH2 0x188 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BA JUMPI PUSH2 0x2B9 PUSH2 0x263 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x31C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x326 DUP7 DUP4 PUSH2 0x2E1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36A PUSH2 0x365 PUSH2 0x360 DUP5 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x383 DUP4 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x397 PUSH2 0x38F DUP3 PUSH2 0x371 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2ED JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x39F JUMP JUMPDEST PUSH2 0x3B6 DUP2 DUP5 DUP5 PUSH2 0x37A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI PUSH2 0x3CE PUSH0 DUP3 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41E JUMPI PUSH2 0x3EF DUP2 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x3F8 DUP5 PUSH2 0x2D2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x407 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x41B PUSH2 0x413 DUP6 PUSH2 0x2D2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3BB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x43E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x423 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x456 DUP4 DUP4 PUSH2 0x42F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x46F DUP3 PUSH2 0x259 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH2 0x487 PUSH2 0x91 JUMP JUMPDEST JUMPDEST PUSH2 0x492 DUP3 SLOAD PUSH2 0x290 JUMP JUMPDEST PUSH2 0x49D DUP3 DUP3 DUP6 PUSH2 0x3DD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4CE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4BC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C6 DUP6 DUP3 PUSH2 0x44B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x52D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4DC DUP7 PUSH2 0x2C0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x503 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4DE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x520 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x51C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x250F DUP1 PUSH2 0x542 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2FB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x275 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x18FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x18FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x385 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3B5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F6 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x441 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x418 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x441 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x424 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52C DUP3 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x631 JUMPI POP PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6ED JUMPI POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x736 DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x756 CALLER DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A0 DUP4 DUP4 DUP4 PUSH2 0x121C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80A SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x9CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA60 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA8C SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xC56 CALLER DUP4 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0xC95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3E SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xD54 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD80 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF80 JUMPI POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102F DUP4 PUSH2 0x9D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107F DUP3 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1187 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131F SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 CALLER DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x133A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x14EB DUP5 DUP5 DUP5 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x14F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15AE DUP5 PUSH2 0x73B JUMP JUMPDEST ISZERO PUSH2 0x16FC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x162D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162A SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16AC JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174E DUP2 PUSH2 0x171A JUMP JUMPDEST DUP2 EQ PUSH2 0x1758 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1769 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1784 JUMPI PUSH2 0x1783 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1791 DUP5 DUP3 DUP6 ADD PUSH2 0x175B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180F DUP3 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x1819 DUP2 DUP6 PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1829 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x1832 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x1879 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B2 DUP5 DUP3 DUP6 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E4 DUP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x18DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH0 DUP4 ADD DUP5 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191C DUP2 PUSH2 0x18DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x1913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1971 DUP6 DUP3 DUP7 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1990 JUMPI PUSH2 0x198F PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x199D DUP5 DUP3 DUP6 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BD JUMPI PUSH2 0x19BC PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CA DUP7 DUP3 DUP8 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DB DUP7 DUP3 DUP8 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19EC DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A18 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A27 DUP2 PUSH2 0x179A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A42 DUP2 PUSH2 0x1A1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6B DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7C DUP6 DUP3 DUP7 ADD PUSH2 0x1A34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1AC4 DUP3 PUSH2 0x17F5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AE3 JUMPI PUSH2 0x1AE2 PUSH2 0x1A8E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF5 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 DUP3 DUP3 PUSH2 0x1ABB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x1A8E JUMP JUMPDEST JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B56 PUSH2 0x1B51 DUP5 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST PUSH2 0x1B7D DUP5 DUP3 DUP6 PUSH2 0x1B36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x1A86 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BA9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD7 DUP8 DUP3 DUP9 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BE8 DUP8 DUP3 DUP9 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BF9 DUP8 DUP3 DUP9 ADD PUSH2 0x187C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x1716 JUMP JUMPDEST JUMPDEST PUSH2 0x1C26 DUP8 DUP3 DUP9 ADD PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C55 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C66 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D27 PUSH1 0x2C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D32 DUP3 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB5 PUSH1 0x21 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC0 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE2 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E43 PUSH1 0x38 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4E DUP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E70 DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED1 PUSH1 0x31 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDC DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFE DUP2 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F39 PUSH1 0x20 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F66 DUP2 PUSH2 0x1F2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA1 PUSH1 0x1C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCE DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200C DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 POP PUSH2 0x2017 DUP4 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 PUSH1 0x19 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2074 DUP3 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2096 DUP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20F7 PUSH1 0x2F DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2102 DUP3 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2124 DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206E6F7420746F6B656E206F776E65720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215F PUSH1 0x1E DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218C DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21ED PUSH1 0x2C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F8 DUP3 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x221A DUP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x227B PUSH1 0x25 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP3 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A8 DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2309 PUSH1 0x24 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2314 DUP3 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2336 DUP2 PUSH2 0x22FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2347 DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 POP PUSH2 0x2352 DUP4 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x236A JUMPI PUSH2 0x2369 PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23CA PUSH1 0x32 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D5 DUP3 PUSH2 0x2370 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F7 DUP2 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2422 DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x242C DUP2 DUP6 PUSH2 0x2408 JUMP JUMPDEST SWAP4 POP PUSH2 0x243C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x2445 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2463 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x2470 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x247D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x248F DUP2 DUP5 PUSH2 0x2418 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A8 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C3 JUMPI PUSH2 0x24C2 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D0 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP15 0xE4 0xB5 SDIV 0xF8 MOD DUP8 0xCC 0xDA RETURNDATASIZE SWAP6 0xE 0xD4 KECCAK256 SWAP2 GAS PUSH9 0x244DA0D2904DC63816 SWAP13 0xEB CALLER NUMBER BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "340:10791:0:-:0;;;1131:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1277:5;1269;:13;;;;;;:::i;:::-;;1302:7;1292;:17;;;;;;:::i;:::-;;1330:8;1319;:19;;;;;;:::i;:::-;;1131:214;;;340:10791;;7:75:9;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:1182::-;2688:6;2696;2704;2753:2;2741:9;2732:7;2728:23;2724:32;2721:119;;;2759:79;;:::i;:::-;2721:119;2900:1;2889:9;2885:17;2879:24;2930:18;2922:6;2919:30;2916:117;;;2952:79;;:::i;:::-;2916:117;3057:74;3123:7;3114:6;3103:9;3099:22;3057:74;:::i;:::-;3047:84;;2850:291;3201:2;3190:9;3186:18;3180:25;3232:18;3224:6;3221:30;3218:117;;;3254:79;;:::i;:::-;3218:117;3359:74;3425:7;3416:6;3405:9;3401:22;3359:74;:::i;:::-;3349:84;;3151:292;3503:2;3492:9;3488:18;3482:25;3534:18;3526:6;3523:30;3520:117;;;3556:79;;:::i;:::-;3520:117;3661:74;3727:7;3718:6;3707:9;3703:22;3661:74;:::i;:::-;3651:84;;3453:292;2570:1182;;;;;:::o;3758:99::-;3810:6;3844:5;3838:12;3828:22;;3758:99;;;:::o;3863:180::-;3911:77;3908:1;3901:88;4008:4;4005:1;3998:15;4032:4;4029:1;4022:15;4049:320;4093:6;4130:1;4124:4;4120:12;4110:22;;4177:1;4171:4;4167:12;4198:18;4188:81;;4254:4;4246:6;4242:17;4232:27;;4188:81;4316:2;4308:6;4305:14;4285:18;4282:38;4279:84;;4335:18;;:::i;:::-;4279:84;4100:269;4049:320;;;:::o;4375:141::-;4424:4;4447:3;4439:11;;4470:3;4467:1;4460:14;4504:4;4501:1;4491:18;4483:26;;4375:141;;;:::o;4522:93::-;4559:6;4606:2;4601;4594:5;4590:14;4586:23;4576:33;;4522:93;;;:::o;4621:107::-;4665:8;4715:5;4709:4;4705:16;4684:37;;4621:107;;;;:::o;4734:393::-;4803:6;4853:1;4841:10;4837:18;4876:97;4906:66;4895:9;4876:97;:::i;:::-;4994:39;5024:8;5013:9;4994:39;:::i;:::-;4982:51;;5066:4;5062:9;5055:5;5051:21;5042:30;;5115:4;5105:8;5101:19;5094:5;5091:30;5081:40;;4810:317;;4734:393;;;;;:::o;5133:77::-;5170:7;5199:5;5188:16;;5133:77;;;:::o;5216:60::-;5244:3;5265:5;5258:12;;5216:60;;;:::o;5282:142::-;5332:9;5365:53;5383:34;5392:24;5410:5;5392:24;:::i;:::-;5383:34;:::i;:::-;5365:53;:::i;:::-;5352:66;;5282:142;;;:::o;5430:75::-;5473:3;5494:5;5487:12;;5430:75;;;:::o;5511:269::-;5621:39;5652:7;5621:39;:::i;:::-;5682:91;5731:41;5755:16;5731:41;:::i;:::-;5723:6;5716:4;5710:11;5682:91;:::i;:::-;5676:4;5669:105;5587:193;5511:269;;;:::o;5786:73::-;5831:3;5786:73;:::o;5865:189::-;5942:32;;:::i;:::-;5983:65;6041:6;6033;6027:4;5983:65;:::i;:::-;5918:136;5865:189;;:::o;6060:186::-;6120:120;6137:3;6130:5;6127:14;6120:120;;;6191:39;6228:1;6221:5;6191:39;:::i;:::-;6164:1;6157:5;6153:13;6144:22;;6120:120;;;6060:186;;:::o;6252:543::-;6353:2;6348:3;6345:11;6342:446;;;6387:38;6419:5;6387:38;:::i;:::-;6471:29;6489:10;6471:29;:::i;:::-;6461:8;6457:44;6654:2;6642:10;6639:18;6636:49;;;6675:8;6660:23;;6636:49;6698:80;6754:22;6772:3;6754:22;:::i;:::-;6744:8;6740:37;6727:11;6698:80;:::i;:::-;6357:431;;6342:446;6252:543;;;:::o;6801:117::-;6855:8;6905:5;6899:4;6895:16;6874:37;;6801:117;;;;:::o;6924:169::-;6968:6;7001:51;7049:1;7045:6;7037:5;7034:1;7030:13;7001:51;:::i;:::-;6997:56;7082:4;7076;7072:15;7062:25;;6975:118;6924:169;;;;:::o;7098:295::-;7174:4;7320:29;7345:3;7339:4;7320:29;:::i;:::-;7312:37;;7382:3;7379:1;7375:11;7369:4;7366:21;7358:29;;7098:295;;;;:::o;7398:1395::-;7515:37;7548:3;7515:37;:::i;:::-;7617:18;7609:6;7606:30;7603:56;;;7639:18;;:::i;:::-;7603:56;7683:38;7715:4;7709:11;7683:38;:::i;:::-;7768:67;7828:6;7820;7814:4;7768:67;:::i;:::-;7862:1;7886:4;7873:17;;7918:2;7910:6;7907:14;7935:1;7930:618;;;;8592:1;8609:6;8606:77;;;8658:9;8653:3;8649:19;8643:26;8634:35;;8606:77;8709:67;8769:6;8762:5;8709:67;:::i;:::-;8703:4;8696:81;8565:222;7900:887;;7930:618;7982:4;7978:9;7970:6;7966:22;8016:37;8048:4;8016:37;:::i;:::-;8075:1;8089:208;8103:7;8100:1;8097:14;8089:208;;;8182:9;8177:3;8173:19;8167:26;8159:6;8152:42;8233:1;8225:6;8221:14;8211:24;;8280:2;8269:9;8265:18;8252:31;;8126:4;8123:1;8119:12;8114:17;;8089:208;;;8325:6;8316:7;8313:19;8310:179;;;8383:9;8378:3;8374:19;8368:26;8426:48;8468:4;8460:6;8456:17;8445:9;8426:48;:::i;:::-;8418:6;8411:64;8333:156;8310:179;8535:1;8531;8523:6;8519:14;8515:22;8509:4;8502:36;7937:611;;;7900:887;;7490:1303;;;7398:1395;;:::o;340:10791:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_603": {
									"entryPoint": 3685,
									"id": 603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_665": {
									"entryPoint": 5540,
									"id": 665,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_449": {
									"entryPoint": 5436,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_490": {
									"entryPoint": 4213,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_safeTransfer_431": {
									"entryPoint": 5344,
									"id": 431,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transfer_561": {
									"entryPoint": 4636,
									"id": 561,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_252": {
									"entryPoint": 1314,
									"id": 252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_188": {
									"entryPoint": 2571,
									"id": 188,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_277": {
									"entryPoint": 1099,
									"id": 277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_329": {
									"entryPoint": 3543,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_681": {
									"entryPoint": 1851,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_175": {
									"entryPoint": 1957,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_91": {
									"entryPoint": 956,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_201": {
									"entryPoint": 2514,
									"id": 201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_373": {
									"entryPoint": 2483,
									"id": 373,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_402": {
									"entryPoint": 3148,
									"id": 402,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_312": {
									"entryPoint": 2785,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_82": {
									"entryPoint": 811,
									"id": 82,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_100": {
									"entryPoint": 2641,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_123": {
									"entryPoint": 3239,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_355": {
									"entryPoint": 1868,
									"id": 355,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9296,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 9072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 8737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c": {
									"entryPoint": 8595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 8349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26496:9",
										"nodeType": "YulBlock",
										"src": "0:26496:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "378:105:9",
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nativeSrc": "388:89:9",
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:9",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nativeSrc": "399:78:9",
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:9",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:9",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nativeSrc": "531:78:9",
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:9",
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nativeSrc": "589:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nativeSrc": "589:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nativeSrc": "561:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nativeSrc": "551:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nativeSrc": "544:42:9",
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nativeSrc": "541:62:9",
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:9",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nativeSrc": "666:86:9",
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nativeSrc": "676:29:9",
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nativeSrc": "685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nativeSrc": "714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nativeSrc": "714:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:9",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:9",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:9",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nativeSrc": "823:262:9",
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:9",
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nativeSrc": "871:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nativeSrc": "871:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:9",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nativeSrc": "836:32:9",
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nativeSrc": "833:119:9",
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nativeSrc": "962:116:9",
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nativeSrc": "977:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:9",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:9",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:9",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nativeSrc": "1036:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nativeSrc": "1016:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:9",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:9",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:9",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nativeSrc": "1133:48:9",
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nativeSrc": "1143:32:9",
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nativeSrc": "1161:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nativeSrc": "1154:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:9",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:9",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nativeSrc": "1246:50:9",
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nativeSrc": "1268:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nativeSrc": "1256:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nativeSrc": "1256:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:9",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:9",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nativeSrc": "1394:118:9",
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nativeSrc": "1404:26:9",
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nativeSrc": "1412:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nativeSrc": "1487:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nativeSrc": "1440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nativeSrc": "1440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:9",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:9",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:9",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nativeSrc": "1577:40:9",
													"nodeType": "YulBlock",
													"src": "1577:40:9",
													"statements": [
														{
															"nativeSrc": "1588:22:9",
															"nodeType": "YulAssignment",
															"src": "1588:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:9"
																},
																"nativeSrc": "1598:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:9",
														"nodeType": "YulTypedName",
														"src": "1560:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:9",
														"nodeType": "YulTypedName",
														"src": "1570:6:9",
														"type": ""
													}
												],
												"src": "1518:99:9"
											},
											{
												"body": {
													"nativeSrc": "1719:73:9",
													"nodeType": "YulBlock",
													"src": "1719:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:9"
																},
																"nativeSrc": "1729:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:9"
															},
															"nativeSrc": "1729:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:9"
														},
														{
															"nativeSrc": "1757:29:9",
															"nodeType": "YulAssignment",
															"src": "1757:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:9"
																},
																"nativeSrc": "1772:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:9",
														"nodeType": "YulTypedName",
														"src": "1691:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:9",
														"nodeType": "YulTypedName",
														"src": "1696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:9",
														"nodeType": "YulTypedName",
														"src": "1707:11:9",
														"type": ""
													}
												],
												"src": "1623:169:9"
											},
											{
												"body": {
													"nativeSrc": "1860:77:9",
													"nodeType": "YulBlock",
													"src": "1860:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:9"
																},
																"nativeSrc": "1871:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:9"
															},
															"nativeSrc": "1871:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:9"
																		},
																		"nativeSrc": "1910:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:9"
																},
																"nativeSrc": "1903:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:9"
															},
															"nativeSrc": "1903:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:9",
														"nodeType": "YulTypedName",
														"src": "1842:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:9",
														"nodeType": "YulTypedName",
														"src": "1847:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:9",
														"nodeType": "YulTypedName",
														"src": "1852:6:9",
														"type": ""
													}
												],
												"src": "1798:139:9"
											},
											{
												"body": {
													"nativeSrc": "1991:54:9",
													"nodeType": "YulBlock",
													"src": "1991:54:9",
													"statements": [
														{
															"nativeSrc": "2001:38:9",
															"nodeType": "YulAssignment",
															"src": "2001:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:9"
																		},
																		"nativeSrc": "2015:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:9"
																		},
																		"nativeSrc": "2031:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:9"
																},
																"nativeSrc": "2011:28:9",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:9",
														"nodeType": "YulTypedName",
														"src": "1974:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:9",
														"nodeType": "YulTypedName",
														"src": "1984:6:9",
														"type": ""
													}
												],
												"src": "1943:102:9"
											},
											{
												"body": {
													"nativeSrc": "2143:285:9",
													"nodeType": "YulBlock",
													"src": "2143:285:9",
													"statements": [
														{
															"nativeSrc": "2153:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:9"
																},
																"nativeSrc": "2167:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:9",
															"nodeType": "YulAssignment",
															"src": "2215:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:9"
																},
																"nativeSrc": "2222:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:9"
																		},
																		"nativeSrc": "2337:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:9"
																},
																"nativeSrc": "2302:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:9"
															},
															"nativeSrc": "2302:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:9"
														},
														{
															"nativeSrc": "2376:46:9",
															"nodeType": "YulAssignment",
															"src": "2376:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:9"
																		},
																		"nativeSrc": "2392:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:9"
																},
																"nativeSrc": "2383:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:9",
														"nodeType": "YulTypedName",
														"src": "2124:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:9",
														"nodeType": "YulTypedName",
														"src": "2131:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:9",
														"nodeType": "YulTypedName",
														"src": "2139:3:9",
														"type": ""
													}
												],
												"src": "2051:377:9"
											},
											{
												"body": {
													"nativeSrc": "2552:195:9",
													"nodeType": "YulBlock",
													"src": "2552:195:9",
													"statements": [
														{
															"nativeSrc": "2562:26:9",
															"nodeType": "YulAssignment",
															"src": "2562:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:9"
																},
																"nativeSrc": "2570:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:9"
																		},
																		"nativeSrc": "2605:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:9"
																		},
																		"nativeSrc": "2624:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:9"
																},
																"nativeSrc": "2598:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:9"
															},
															"nativeSrc": "2598:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:9"
														},
														{
															"nativeSrc": "2654:86:9",
															"nodeType": "YulAssignment",
															"src": "2654:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:9"
																},
																"nativeSrc": "2662:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:9",
														"nodeType": "YulTypedName",
														"src": "2524:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:9",
														"nodeType": "YulTypedName",
														"src": "2536:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:9",
														"nodeType": "YulTypedName",
														"src": "2547:4:9",
														"type": ""
													}
												],
												"src": "2434:313:9"
											},
											{
												"body": {
													"nativeSrc": "2798:32:9",
													"nodeType": "YulBlock",
													"src": "2798:32:9",
													"statements": [
														{
															"nativeSrc": "2808:16:9",
															"nodeType": "YulAssignment",
															"src": "2808:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:9",
																"nodeType": "YulIdentifier",
																"src": "2819:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:9",
														"nodeType": "YulTypedName",
														"src": "2780:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:9",
														"nodeType": "YulTypedName",
														"src": "2790:7:9",
														"type": ""
													}
												],
												"src": "2753:77:9"
											},
											{
												"body": {
													"nativeSrc": "2879:79:9",
													"nodeType": "YulBlock",
													"src": "2879:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:9",
																"nodeType": "YulBlock",
																"src": "2936:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:9"
																			},
																			"nativeSrc": "2938:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:9"
																		},
																		"nativeSrc": "2938:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:9"
																				},
																				"nativeSrc": "2909:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:9"
																		},
																		"nativeSrc": "2899:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:9"
																},
																"nativeSrc": "2892:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:9"
															},
															"nativeSrc": "2889:63:9",
															"nodeType": "YulIf",
															"src": "2889:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:9",
														"nodeType": "YulTypedName",
														"src": "2872:5:9",
														"type": ""
													}
												],
												"src": "2836:122:9"
											},
											{
												"body": {
													"nativeSrc": "3016:87:9",
													"nodeType": "YulBlock",
													"src": "3016:87:9",
													"statements": [
														{
															"nativeSrc": "3026:29:9",
															"nodeType": "YulAssignment",
															"src": "3026:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:9"
																},
																"nativeSrc": "3035:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:9"
																},
																"nativeSrc": "3064:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:9"
															},
															"nativeSrc": "3064:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:9",
														"nodeType": "YulTypedName",
														"src": "2994:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:9",
														"nodeType": "YulTypedName",
														"src": "3002:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:9",
														"nodeType": "YulTypedName",
														"src": "3010:5:9",
														"type": ""
													}
												],
												"src": "2964:139:9"
											},
											{
												"body": {
													"nativeSrc": "3175:263:9",
													"nodeType": "YulBlock",
													"src": "3175:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:9",
																"nodeType": "YulBlock",
																"src": "3221:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:9"
																			},
																			"nativeSrc": "3223:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:9"
																		},
																		"nativeSrc": "3223:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:9"
																		},
																		"nativeSrc": "3192:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:9"
																},
																"nativeSrc": "3188:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:9"
															},
															"nativeSrc": "3185:119:9",
															"nodeType": "YulIf",
															"src": "3185:119:9"
														},
														{
															"nativeSrc": "3314:117:9",
															"nodeType": "YulBlock",
															"src": "3314:117:9",
															"statements": [
																{
																	"nativeSrc": "3329:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:9"
																				},
																				"nativeSrc": "3389:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:9"
																		},
																		"nativeSrc": "3368:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:9",
														"nodeType": "YulTypedName",
														"src": "3145:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:9",
														"nodeType": "YulTypedName",
														"src": "3156:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:9",
														"nodeType": "YulTypedName",
														"src": "3168:6:9",
														"type": ""
													}
												],
												"src": "3109:329:9"
											},
											{
												"body": {
													"nativeSrc": "3489:81:9",
													"nodeType": "YulBlock",
													"src": "3489:81:9",
													"statements": [
														{
															"nativeSrc": "3499:65:9",
															"nodeType": "YulAssignment",
															"src": "3499:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:9",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:9"
																},
																"nativeSrc": "3510:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:9",
														"nodeType": "YulTypedName",
														"src": "3471:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:9",
														"nodeType": "YulTypedName",
														"src": "3481:7:9",
														"type": ""
													}
												],
												"src": "3444:126:9"
											},
											{
												"body": {
													"nativeSrc": "3621:51:9",
													"nodeType": "YulBlock",
													"src": "3621:51:9",
													"statements": [
														{
															"nativeSrc": "3631:35:9",
															"nodeType": "YulAssignment",
															"src": "3631:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:9"
																},
																"nativeSrc": "3642:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:9",
														"nodeType": "YulTypedName",
														"src": "3603:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:9",
														"nodeType": "YulTypedName",
														"src": "3613:7:9",
														"type": ""
													}
												],
												"src": "3576:96:9"
											},
											{
												"body": {
													"nativeSrc": "3743:53:9",
													"nodeType": "YulBlock",
													"src": "3743:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:9"
																		},
																		"nativeSrc": "3765:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:9"
																},
																"nativeSrc": "3753:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:9"
															},
															"nativeSrc": "3753:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:9",
														"nodeType": "YulTypedName",
														"src": "3731:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:9",
														"nodeType": "YulTypedName",
														"src": "3738:3:9",
														"type": ""
													}
												],
												"src": "3678:118:9"
											},
											{
												"body": {
													"nativeSrc": "3900:124:9",
													"nodeType": "YulBlock",
													"src": "3900:124:9",
													"statements": [
														{
															"nativeSrc": "3910:26:9",
															"nodeType": "YulAssignment",
															"src": "3910:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:9"
																},
																"nativeSrc": "3918:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:9"
																		},
																		"nativeSrc": "3999:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:9"
																},
																"nativeSrc": "3946:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:9"
															},
															"nativeSrc": "3946:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:9",
														"nodeType": "YulTypedName",
														"src": "3872:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:9",
														"nodeType": "YulTypedName",
														"src": "3884:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:9",
														"nodeType": "YulTypedName",
														"src": "3895:4:9",
														"type": ""
													}
												],
												"src": "3802:222:9"
											},
											{
												"body": {
													"nativeSrc": "4073:79:9",
													"nodeType": "YulBlock",
													"src": "4073:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:9",
																"nodeType": "YulBlock",
																"src": "4130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:9"
																			},
																			"nativeSrc": "4132:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:9"
																		},
																		"nativeSrc": "4132:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:9"
																				},
																				"nativeSrc": "4103:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:9"
																		},
																		"nativeSrc": "4093:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:9"
																},
																"nativeSrc": "4086:43:9",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:9"
															},
															"nativeSrc": "4083:63:9",
															"nodeType": "YulIf",
															"src": "4083:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:9",
														"nodeType": "YulTypedName",
														"src": "4066:5:9",
														"type": ""
													}
												],
												"src": "4030:122:9"
											},
											{
												"body": {
													"nativeSrc": "4210:87:9",
													"nodeType": "YulBlock",
													"src": "4210:87:9",
													"statements": [
														{
															"nativeSrc": "4220:29:9",
															"nodeType": "YulAssignment",
															"src": "4220:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:9"
																},
																"nativeSrc": "4229:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:9"
																},
																"nativeSrc": "4258:33:9",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:9"
															},
															"nativeSrc": "4258:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:9",
														"nodeType": "YulTypedName",
														"src": "4188:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:9",
														"nodeType": "YulTypedName",
														"src": "4196:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:9",
														"nodeType": "YulTypedName",
														"src": "4204:5:9",
														"type": ""
													}
												],
												"src": "4158:139:9"
											},
											{
												"body": {
													"nativeSrc": "4386:391:9",
													"nodeType": "YulBlock",
													"src": "4386:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:9",
																"nodeType": "YulBlock",
																"src": "4432:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:9"
																			},
																			"nativeSrc": "4434:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:9"
																		},
																		"nativeSrc": "4434:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:9"
																		},
																		"nativeSrc": "4403:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:9"
																},
																"nativeSrc": "4399:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:9"
															},
															"nativeSrc": "4396:119:9",
															"nodeType": "YulIf",
															"src": "4396:119:9"
														},
														{
															"nativeSrc": "4525:117:9",
															"nodeType": "YulBlock",
															"src": "4525:117:9",
															"statements": [
																{
																	"nativeSrc": "4540:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:9"
																				},
																				"nativeSrc": "4600:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:9"
																		},
																		"nativeSrc": "4579:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:9",
															"nodeType": "YulBlock",
															"src": "4652:118:9",
															"statements": [
																{
																	"nativeSrc": "4667:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:9"
																				},
																				"nativeSrc": "4728:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:9"
																		},
																		"nativeSrc": "4707:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:9",
														"nodeType": "YulTypedName",
														"src": "4348:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:9",
														"nodeType": "YulTypedName",
														"src": "4359:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:9",
														"nodeType": "YulTypedName",
														"src": "4371:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:9",
														"nodeType": "YulTypedName",
														"src": "4379:6:9",
														"type": ""
													}
												],
												"src": "4303:474:9"
											},
											{
												"body": {
													"nativeSrc": "4849:263:9",
													"nodeType": "YulBlock",
													"src": "4849:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4895:83:9",
																"nodeType": "YulBlock",
																"src": "4895:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4897:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4897:77:9"
																			},
																			"nativeSrc": "4897:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4897:79:9"
																		},
																		"nativeSrc": "4897:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4897:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4870:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4870:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4879:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4879:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4866:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:9"
																		},
																		"nativeSrc": "4866:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4866:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4862:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:9"
																},
																"nativeSrc": "4862:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4862:32:9"
															},
															"nativeSrc": "4859:119:9",
															"nodeType": "YulIf",
															"src": "4859:119:9"
														},
														{
															"nativeSrc": "4988:117:9",
															"nodeType": "YulBlock",
															"src": "4988:117:9",
															"statements": [
																{
																	"nativeSrc": "5003:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5003:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5017:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5017:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5007:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5007:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5032:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5032:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5067:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5067:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5078:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5078:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5063:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5063:3:9"
																				},
																				"nativeSrc": "5063:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5087:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5087:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5042:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5042:20:9"
																		},
																		"nativeSrc": "5042:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5032:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5032:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4783:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4819:9:9",
														"nodeType": "YulTypedName",
														"src": "4819:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4830:7:9",
														"nodeType": "YulTypedName",
														"src": "4830:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4842:6:9",
														"nodeType": "YulTypedName",
														"src": "4842:6:9",
														"type": ""
													}
												],
												"src": "4783:329:9"
											},
											{
												"body": {
													"nativeSrc": "5218:519:9",
													"nodeType": "YulBlock",
													"src": "5218:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5264:83:9",
																"nodeType": "YulBlock",
																"src": "5264:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5266:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5266:77:9"
																			},
																			"nativeSrc": "5266:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5266:79:9"
																		},
																		"nativeSrc": "5266:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5266:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5239:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5239:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5248:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5248:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5235:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:9"
																		},
																		"nativeSrc": "5235:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5260:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:9"
																},
																"nativeSrc": "5231:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5231:32:9"
															},
															"nativeSrc": "5228:119:9",
															"nodeType": "YulIf",
															"src": "5228:119:9"
														},
														{
															"nativeSrc": "5357:117:9",
															"nodeType": "YulBlock",
															"src": "5357:117:9",
															"statements": [
																{
																	"nativeSrc": "5372:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5372:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5386:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5386:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5376:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5376:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5401:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5401:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5436:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5436:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5447:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5447:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5432:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5432:3:9"
																				},
																				"nativeSrc": "5432:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5432:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5456:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5456:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5411:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5411:20:9"
																		},
																		"nativeSrc": "5411:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5411:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5401:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5401:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5484:118:9",
															"nodeType": "YulBlock",
															"src": "5484:118:9",
															"statements": [
																{
																	"nativeSrc": "5499:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5499:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5513:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5513:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5503:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5503:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5529:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5529:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5564:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5564:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5575:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5575:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5560:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5560:3:9"
																				},
																				"nativeSrc": "5560:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5560:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5584:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5584:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5539:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5539:20:9"
																		},
																		"nativeSrc": "5539:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5539:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5529:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5529:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5612:118:9",
															"nodeType": "YulBlock",
															"src": "5612:118:9",
															"statements": [
																{
																	"nativeSrc": "5627:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5627:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5641:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5641:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5631:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5631:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:9"
																				},
																				"nativeSrc": "5688:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5667:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:9"
																		},
																		"nativeSrc": "5667:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5657:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5118:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5172:9:9",
														"nodeType": "YulTypedName",
														"src": "5172:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5183:7:9",
														"nodeType": "YulTypedName",
														"src": "5183:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5195:6:9",
														"nodeType": "YulTypedName",
														"src": "5195:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5203:6:9",
														"nodeType": "YulTypedName",
														"src": "5203:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5211:6:9",
														"nodeType": "YulTypedName",
														"src": "5211:6:9",
														"type": ""
													}
												],
												"src": "5118:619:9"
											},
											{
												"body": {
													"nativeSrc": "5808:53:9",
													"nodeType": "YulBlock",
													"src": "5808:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:9"
																		},
																		"nativeSrc": "5830:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:9"
																},
																"nativeSrc": "5818:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:9"
															},
															"nativeSrc": "5818:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:9",
														"nodeType": "YulTypedName",
														"src": "5796:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:9",
														"nodeType": "YulTypedName",
														"src": "5803:3:9",
														"type": ""
													}
												],
												"src": "5743:118:9"
											},
											{
												"body": {
													"nativeSrc": "5965:124:9",
													"nodeType": "YulBlock",
													"src": "5965:124:9",
													"statements": [
														{
															"nativeSrc": "5975:26:9",
															"nodeType": "YulAssignment",
															"src": "5975:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:9"
																},
																"nativeSrc": "5983:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:9"
																		},
																		"nativeSrc": "6064:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:9"
																},
																"nativeSrc": "6011:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:9"
															},
															"nativeSrc": "6011:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:9",
														"nodeType": "YulTypedName",
														"src": "5937:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:9",
														"nodeType": "YulTypedName",
														"src": "5949:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:9",
														"nodeType": "YulTypedName",
														"src": "5960:4:9",
														"type": ""
													}
												],
												"src": "5867:222:9"
											},
											{
												"body": {
													"nativeSrc": "6135:76:9",
													"nodeType": "YulBlock",
													"src": "6135:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:9",
																"nodeType": "YulBlock",
																"src": "6189:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:9"
																			},
																			"nativeSrc": "6191:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:9"
																		},
																		"nativeSrc": "6191:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:9"
																				},
																				"nativeSrc": "6165:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:9"
																		},
																		"nativeSrc": "6155:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:9"
																},
																"nativeSrc": "6148:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:9"
															},
															"nativeSrc": "6145:60:9",
															"nodeType": "YulIf",
															"src": "6145:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:9",
														"nodeType": "YulTypedName",
														"src": "6128:5:9",
														"type": ""
													}
												],
												"src": "6095:116:9"
											},
											{
												"body": {
													"nativeSrc": "6266:84:9",
													"nodeType": "YulBlock",
													"src": "6266:84:9",
													"statements": [
														{
															"nativeSrc": "6276:29:9",
															"nodeType": "YulAssignment",
															"src": "6276:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:9"
																},
																"nativeSrc": "6285:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:9"
																},
																"nativeSrc": "6314:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:9"
															},
															"nativeSrc": "6314:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:9",
														"nodeType": "YulTypedName",
														"src": "6244:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:9",
														"nodeType": "YulTypedName",
														"src": "6252:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:9",
														"nodeType": "YulTypedName",
														"src": "6260:5:9",
														"type": ""
													}
												],
												"src": "6217:133:9"
											},
											{
												"body": {
													"nativeSrc": "6436:388:9",
													"nodeType": "YulBlock",
													"src": "6436:388:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:9",
																"nodeType": "YulBlock",
																"src": "6482:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:9"
																			},
																			"nativeSrc": "6484:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:9"
																		},
																		"nativeSrc": "6484:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:9"
																		},
																		"nativeSrc": "6453:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:9"
																},
																"nativeSrc": "6449:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:9"
															},
															"nativeSrc": "6446:119:9",
															"nodeType": "YulIf",
															"src": "6446:119:9"
														},
														{
															"nativeSrc": "6575:117:9",
															"nodeType": "YulBlock",
															"src": "6575:117:9",
															"statements": [
																{
																	"nativeSrc": "6590:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:9"
																				},
																				"nativeSrc": "6650:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:9"
																		},
																		"nativeSrc": "6629:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:9",
															"nodeType": "YulBlock",
															"src": "6702:115:9",
															"statements": [
																{
																	"nativeSrc": "6717:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:9",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:9"
																				},
																				"nativeSrc": "6775:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:9"
																		},
																		"nativeSrc": "6757:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:9",
														"nodeType": "YulTypedName",
														"src": "6398:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:9",
														"nodeType": "YulTypedName",
														"src": "6409:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:9",
														"nodeType": "YulTypedName",
														"src": "6421:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:9",
														"nodeType": "YulTypedName",
														"src": "6429:6:9",
														"type": ""
													}
												],
												"src": "6356:468:9"
											},
											{
												"body": {
													"nativeSrc": "6919:28:9",
													"nodeType": "YulBlock",
													"src": "6919:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:9"
																},
																"nativeSrc": "6929:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:9"
															},
															"nativeSrc": "6929:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:9"
											},
											{
												"body": {
													"nativeSrc": "7042:28:9",
													"nodeType": "YulBlock",
													"src": "7042:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:9"
																},
																"nativeSrc": "7052:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:9"
															},
															"nativeSrc": "7052:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:9"
											},
											{
												"body": {
													"nativeSrc": "7104:152:9",
													"nodeType": "YulBlock",
													"src": "7104:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:9"
																},
																"nativeSrc": "7114:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:9"
															},
															"nativeSrc": "7114:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:9"
																},
																"nativeSrc": "7211:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:9"
															},
															"nativeSrc": "7211:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:9"
																},
																"nativeSrc": "7235:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:9"
															},
															"nativeSrc": "7235:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:9"
											},
											{
												"body": {
													"nativeSrc": "7305:238:9",
													"nodeType": "YulBlock",
													"src": "7305:238:9",
													"statements": [
														{
															"nativeSrc": "7315:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:9"
																		},
																		"nativeSrc": "7345:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:9"
																},
																"nativeSrc": "7333:40:9",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:9",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:9",
																"nodeType": "YulBlock",
																"src": "7484:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:9"
																			},
																			"nativeSrc": "7486:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:9"
																		},
																		"nativeSrc": "7486:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:9"
																		},
																		"nativeSrc": "7424:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:9"
																		},
																		"nativeSrc": "7460:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:9"
																},
																"nativeSrc": "7421:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:9"
															},
															"nativeSrc": "7418:88:9",
															"nodeType": "YulIf",
															"src": "7418:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:9"
																},
																"nativeSrc": "7515:22:9",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:9"
															},
															"nativeSrc": "7515:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:9",
														"nodeType": "YulTypedName",
														"src": "7291:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:9",
														"nodeType": "YulTypedName",
														"src": "7299:4:9",
														"type": ""
													}
												],
												"src": "7262:281:9"
											},
											{
												"body": {
													"nativeSrc": "7590:88:9",
													"nodeType": "YulBlock",
													"src": "7590:88:9",
													"statements": [
														{
															"nativeSrc": "7600:30:9",
															"nodeType": "YulAssignment",
															"src": "7600:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:9"
																},
																"nativeSrc": "7610:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:9"
																},
																"nativeSrc": "7639:33:9",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:9"
															},
															"nativeSrc": "7639:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:9",
														"nodeType": "YulTypedName",
														"src": "7574:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:9",
														"nodeType": "YulTypedName",
														"src": "7583:6:9",
														"type": ""
													}
												],
												"src": "7549:129:9"
											},
											{
												"body": {
													"nativeSrc": "7750:241:9",
													"nodeType": "YulBlock",
													"src": "7750:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:9",
																"nodeType": "YulBlock",
																"src": "7855:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:9"
																			},
																			"nativeSrc": "7857:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:9"
																		},
																		"nativeSrc": "7857:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:9"
																},
																"nativeSrc": "7824:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:9"
															},
															"nativeSrc": "7821:56:9",
															"nodeType": "YulIf",
															"src": "7821:56:9"
														},
														{
															"nativeSrc": "7887:37:9",
															"nodeType": "YulAssignment",
															"src": "7887:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:9"
																},
																"nativeSrc": "7895:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:9"
																}
															]
														},
														{
															"nativeSrc": "7961:23:9",
															"nodeType": "YulAssignment",
															"src": "7961:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:9"
																},
																"nativeSrc": "7969:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:9",
														"nodeType": "YulTypedName",
														"src": "7734:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:9",
														"nodeType": "YulTypedName",
														"src": "7745:4:9",
														"type": ""
													}
												],
												"src": "7684:307:9"
											},
											{
												"body": {
													"nativeSrc": "8061:84:9",
													"nodeType": "YulBlock",
													"src": "8061:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:9"
																},
																"nativeSrc": "8072:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:9"
															},
															"nativeSrc": "8072:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:9"
																		},
																		"nativeSrc": "8118:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:9"
																},
																"nativeSrc": "8111:27:9",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:9"
															},
															"nativeSrc": "8111:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:9",
														"nodeType": "YulTypedName",
														"src": "8043:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:9",
														"nodeType": "YulTypedName",
														"src": "8048:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:9",
														"nodeType": "YulTypedName",
														"src": "8053:6:9",
														"type": ""
													}
												],
												"src": "7997:148:9"
											},
											{
												"body": {
													"nativeSrc": "8234:340:9",
													"nodeType": "YulBlock",
													"src": "8234:340:9",
													"statements": [
														{
															"nativeSrc": "8244:74:9",
															"nodeType": "YulAssignment",
															"src": "8244:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:9",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:9"
																		},
																		"nativeSrc": "8269:48:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:9"
																},
																"nativeSrc": "8253:65:9",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:9"
																},
																"nativeSrc": "8327:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:9"
															},
															"nativeSrc": "8327:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:9"
														},
														{
															"nativeSrc": "8357:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:9"
																},
																"nativeSrc": "8368:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:9",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:9",
																"nodeType": "YulBlock",
																"src": "8422:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:9"
																			},
																			"nativeSrc": "8424:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:9"
																		},
																		"nativeSrc": "8424:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:9"
																		},
																		"nativeSrc": "8399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:9"
																},
																"nativeSrc": "8396:25:9",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:9"
															},
															"nativeSrc": "8393:112:9",
															"nodeType": "YulIf",
															"src": "8393:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:9"
																},
																"nativeSrc": "8514:54:9",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:9"
															},
															"nativeSrc": "8514:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:9",
														"nodeType": "YulTypedName",
														"src": "8207:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:9",
														"nodeType": "YulTypedName",
														"src": "8212:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:9",
														"nodeType": "YulTypedName",
														"src": "8220:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:9",
														"nodeType": "YulTypedName",
														"src": "8228:5:9",
														"type": ""
													}
												],
												"src": "8151:423:9"
											},
											{
												"body": {
													"nativeSrc": "8654:277:9",
													"nodeType": "YulBlock",
													"src": "8654:277:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:9",
																"nodeType": "YulBlock",
																"src": "8703:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:9"
																			},
																			"nativeSrc": "8705:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:9"
																		},
																		"nativeSrc": "8705:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:9"
																				},
																				"nativeSrc": "8678:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:9"
																		},
																		"nativeSrc": "8674:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:9"
																},
																"nativeSrc": "8667:35:9",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:9"
															},
															"nativeSrc": "8664:122:9",
															"nodeType": "YulIf",
															"src": "8664:122:9"
														},
														{
															"nativeSrc": "8795:34:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:9"
																},
																"nativeSrc": "8809:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:9",
															"nodeType": "YulAssignment",
															"src": "8838:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:9",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:9"
																		},
																		"nativeSrc": "8894:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:9",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:9"
																},
																"nativeSrc": "8847:78:9",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:9",
														"nodeType": "YulTypedName",
														"src": "8632:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:9",
														"nodeType": "YulTypedName",
														"src": "8640:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:9",
														"nodeType": "YulTypedName",
														"src": "8648:5:9",
														"type": ""
													}
												],
												"src": "8593:338:9"
											},
											{
												"body": {
													"nativeSrc": "9063:817:9",
													"nodeType": "YulBlock",
													"src": "9063:817:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:9",
																"nodeType": "YulBlock",
																"src": "9110:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:9"
																			},
																			"nativeSrc": "9112:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:9"
																		},
																		"nativeSrc": "9112:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:9"
																		},
																		"nativeSrc": "9080:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:9",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:9"
																},
																"nativeSrc": "9076:33:9",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:9"
															},
															"nativeSrc": "9073:120:9",
															"nodeType": "YulIf",
															"src": "9073:120:9"
														},
														{
															"nativeSrc": "9203:117:9",
															"nodeType": "YulBlock",
															"src": "9203:117:9",
															"statements": [
																{
																	"nativeSrc": "9218:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:9"
																				},
																				"nativeSrc": "9278:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:9"
																		},
																		"nativeSrc": "9257:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:9",
															"nodeType": "YulBlock",
															"src": "9330:118:9",
															"statements": [
																{
																	"nativeSrc": "9345:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:9"
																				},
																				"nativeSrc": "9406:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:9"
																		},
																		"nativeSrc": "9385:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:9",
															"nodeType": "YulBlock",
															"src": "9458:118:9",
															"statements": [
																{
																	"nativeSrc": "9473:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:9"
																				},
																				"nativeSrc": "9534:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:9"
																		},
																		"nativeSrc": "9513:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:9",
															"nodeType": "YulBlock",
															"src": "9586:287:9",
															"statements": [
																{
																	"nativeSrc": "9601:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:9",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:9"
																				},
																				"nativeSrc": "9628:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:9"
																		},
																		"nativeSrc": "9615:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:9",
																		"nodeType": "YulBlock",
																		"src": "9694:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:9"
																					},
																					"nativeSrc": "9696:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:9"
																				},
																				"nativeSrc": "9696:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:9",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:9"
																		},
																		"nativeSrc": "9663:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:9"
																	},
																	"nativeSrc": "9660:117:9",
																	"nodeType": "YulIf",
																	"src": "9660:117:9"
																},
																{
																	"nativeSrc": "9791:72:9",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:9"
																				},
																				"nativeSrc": "9831:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:9"
																		},
																		"nativeSrc": "9801:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:9",
														"nodeType": "YulTypedName",
														"src": "9009:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:9",
														"nodeType": "YulTypedName",
														"src": "9020:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:9",
														"nodeType": "YulTypedName",
														"src": "9032:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:9",
														"nodeType": "YulTypedName",
														"src": "9040:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:9",
														"nodeType": "YulTypedName",
														"src": "9048:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:9",
														"nodeType": "YulTypedName",
														"src": "9056:6:9",
														"type": ""
													}
												],
												"src": "8937:943:9"
											},
											{
												"body": {
													"nativeSrc": "9969:391:9",
													"nodeType": "YulBlock",
													"src": "9969:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:9",
																"nodeType": "YulBlock",
																"src": "10015:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:9"
																			},
																			"nativeSrc": "10017:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:9"
																		},
																		"nativeSrc": "10017:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:9"
																		},
																		"nativeSrc": "9986:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:9"
																},
																"nativeSrc": "9982:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:9"
															},
															"nativeSrc": "9979:119:9",
															"nodeType": "YulIf",
															"src": "9979:119:9"
														},
														{
															"nativeSrc": "10108:117:9",
															"nodeType": "YulBlock",
															"src": "10108:117:9",
															"statements": [
																{
																	"nativeSrc": "10123:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:9",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:9"
																				},
																				"nativeSrc": "10183:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:9"
																		},
																		"nativeSrc": "10162:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:9",
															"nodeType": "YulBlock",
															"src": "10235:118:9",
															"statements": [
																{
																	"nativeSrc": "10250:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:9",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:9",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:9"
																				},
																				"nativeSrc": "10311:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:9"
																		},
																		"nativeSrc": "10290:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:9",
														"nodeType": "YulTypedName",
														"src": "9931:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:9",
														"nodeType": "YulTypedName",
														"src": "9942:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:9",
														"nodeType": "YulTypedName",
														"src": "9954:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:9",
														"nodeType": "YulTypedName",
														"src": "9962:6:9",
														"type": ""
													}
												],
												"src": "9886:474:9"
											},
											{
												"body": {
													"nativeSrc": "10394:152:9",
													"nodeType": "YulBlock",
													"src": "10394:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:9"
																},
																"nativeSrc": "10404:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:9"
															},
															"nativeSrc": "10404:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:9"
																},
																"nativeSrc": "10501:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:9"
															},
															"nativeSrc": "10501:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:9"
																},
																"nativeSrc": "10525:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:9"
															},
															"nativeSrc": "10525:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:9"
											},
											{
												"body": {
													"nativeSrc": "10603:269:9",
													"nodeType": "YulBlock",
													"src": "10603:269:9",
													"statements": [
														{
															"nativeSrc": "10613:22:9",
															"nodeType": "YulAssignment",
															"src": "10613:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:9"
																},
																"nativeSrc": "10623:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:9"
																}
															]
														},
														{
															"nativeSrc": "10644:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:9"
																},
																"nativeSrc": "10670:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:9",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:9",
																"nodeType": "YulBlock",
																"src": "10721:51:9",
																"statements": [
																	{
																		"nativeSrc": "10735:27:9",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:9",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:9"
																			},
																			"nativeSrc": "10745:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:9"
																},
																"nativeSrc": "10694:26:9",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:9"
															},
															"nativeSrc": "10691:81:9",
															"nodeType": "YulIf",
															"src": "10691:81:9"
														},
														{
															"body": {
																"nativeSrc": "10824:42:9",
																"nodeType": "YulBlock",
																"src": "10824:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:9"
																			},
																			"nativeSrc": "10838:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:9"
																		},
																		"nativeSrc": "10838:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:9"
																		},
																		"nativeSrc": "10808:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:9"
																},
																"nativeSrc": "10785:38:9",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:9"
															},
															"nativeSrc": "10782:84:9",
															"nodeType": "YulIf",
															"src": "10782:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:9",
														"nodeType": "YulTypedName",
														"src": "10587:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:9",
														"nodeType": "YulTypedName",
														"src": "10596:6:9",
														"type": ""
													}
												],
												"src": "10552:320:9"
											},
											{
												"body": {
													"nativeSrc": "10984:125:9",
													"nodeType": "YulBlock",
													"src": "10984:125:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11006:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11006:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11014:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11014:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11002:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:9"
																		},
																		"nativeSrc": "11002:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11002:14:9"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nativeSrc": "11018:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11018:34:9",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10995:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10995:6:9"
																},
																"nativeSrc": "10995:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10995:58:9"
															},
															"nativeSrc": "10995:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10995:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11074:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11074:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11082:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11082:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11070:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11070:3:9"
																		},
																		"nativeSrc": "11070:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11070:15:9"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "11087:14:9",
																		"nodeType": "YulLiteral",
																		"src": "11087:14:9",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11063:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11063:6:9"
																},
																"nativeSrc": "11063:39:9",
																"nodeType": "YulFunctionCall",
																"src": "11063:39:9"
															},
															"nativeSrc": "11063:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "11063:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
												"nativeSrc": "10878:231:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10976:6:9",
														"nodeType": "YulTypedName",
														"src": "10976:6:9",
														"type": ""
													}
												],
												"src": "10878:231:9"
											},
											{
												"body": {
													"nativeSrc": "11261:220:9",
													"nodeType": "YulBlock",
													"src": "11261:220:9",
													"statements": [
														{
															"nativeSrc": "11271:74:9",
															"nodeType": "YulAssignment",
															"src": "11271:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11337:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11337:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11278:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11278:58:9"
																},
																"nativeSrc": "11278:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11278:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11271:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11443:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																	"nativeSrc": "11354:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11354:88:9"
																},
																"nativeSrc": "11354:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11354:93:9"
															},
															"nativeSrc": "11354:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11354:93:9"
														},
														{
															"nativeSrc": "11456:19:9",
															"nodeType": "YulAssignment",
															"src": "11456:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11467:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11467:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11472:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11472:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11463:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11463:3:9"
																},
																"nativeSrc": "11463:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11463:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11456:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11456:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11115:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11249:3:9",
														"nodeType": "YulTypedName",
														"src": "11249:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11257:3:9",
														"nodeType": "YulTypedName",
														"src": "11257:3:9",
														"type": ""
													}
												],
												"src": "11115:366:9"
											},
											{
												"body": {
													"nativeSrc": "11658:248:9",
													"nodeType": "YulBlock",
													"src": "11658:248:9",
													"statements": [
														{
															"nativeSrc": "11668:26:9",
															"nodeType": "YulAssignment",
															"src": "11668:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11680:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11680:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11691:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11691:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11676:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:9"
																},
																"nativeSrc": "11676:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11676:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11668:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11668:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11715:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11715:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11726:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11726:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11711:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:9"
																		},
																		"nativeSrc": "11711:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11734:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11734:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11740:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11740:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11730:3:9"
																		},
																		"nativeSrc": "11730:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11704:6:9"
																},
																"nativeSrc": "11704:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11704:47:9"
															},
															"nativeSrc": "11704:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11704:47:9"
														},
														{
															"nativeSrc": "11760:139:9",
															"nodeType": "YulAssignment",
															"src": "11760:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11894:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11894:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11768:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11768:124:9"
																},
																"nativeSrc": "11768:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11768:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11760:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11760:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11487:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11638:9:9",
														"nodeType": "YulTypedName",
														"src": "11638:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11653:4:9",
														"nodeType": "YulTypedName",
														"src": "11653:4:9",
														"type": ""
													}
												],
												"src": "11487:419:9"
											},
											{
												"body": {
													"nativeSrc": "12018:114:9",
													"nodeType": "YulBlock",
													"src": "12018:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12040:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12040:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12048:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12048:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12036:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12036:3:9"
																		},
																		"nativeSrc": "12036:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12036:14:9"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "12052:34:9",
																		"nodeType": "YulLiteral",
																		"src": "12052:34:9",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:9"
																},
																"nativeSrc": "12029:58:9",
																"nodeType": "YulFunctionCall",
																"src": "12029:58:9"
															},
															"nativeSrc": "12029:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "12029:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12108:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12108:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12116:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12116:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12104:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12104:3:9"
																		},
																		"nativeSrc": "12104:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12104:15:9"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "12121:3:9",
																		"nodeType": "YulLiteral",
																		"src": "12121:3:9",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12097:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12097:6:9"
																},
																"nativeSrc": "12097:28:9",
																"nodeType": "YulFunctionCall",
																"src": "12097:28:9"
															},
															"nativeSrc": "12097:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "12097:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "11912:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12010:6:9",
														"nodeType": "YulTypedName",
														"src": "12010:6:9",
														"type": ""
													}
												],
												"src": "11912:220:9"
											},
											{
												"body": {
													"nativeSrc": "12284:220:9",
													"nodeType": "YulBlock",
													"src": "12284:220:9",
													"statements": [
														{
															"nativeSrc": "12294:74:9",
															"nodeType": "YulAssignment",
															"src": "12294:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12360:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12360:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12365:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12365:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12301:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12301:58:9"
																},
																"nativeSrc": "12301:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12301:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12294:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12294:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12466:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12466:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "12377:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12377:88:9"
																},
																"nativeSrc": "12377:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12377:93:9"
															},
															"nativeSrc": "12377:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12377:93:9"
														},
														{
															"nativeSrc": "12479:19:9",
															"nodeType": "YulAssignment",
															"src": "12479:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12490:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12490:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12495:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12495:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12486:3:9"
																},
																"nativeSrc": "12486:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12486:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12479:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12479:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12138:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12272:3:9",
														"nodeType": "YulTypedName",
														"src": "12272:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12280:3:9",
														"nodeType": "YulTypedName",
														"src": "12280:3:9",
														"type": ""
													}
												],
												"src": "12138:366:9"
											},
											{
												"body": {
													"nativeSrc": "12681:248:9",
													"nodeType": "YulBlock",
													"src": "12681:248:9",
													"statements": [
														{
															"nativeSrc": "12691:26:9",
															"nodeType": "YulAssignment",
															"src": "12691:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12703:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12703:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12714:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12714:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12699:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12699:3:9"
																},
																"nativeSrc": "12699:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12699:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12691:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12691:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12738:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12738:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12749:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12749:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12734:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12734:3:9"
																		},
																		"nativeSrc": "12734:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12734:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12757:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12757:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12763:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12763:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12753:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12753:3:9"
																		},
																		"nativeSrc": "12753:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12753:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:9"
																},
																"nativeSrc": "12727:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12727:47:9"
															},
															"nativeSrc": "12727:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12727:47:9"
														},
														{
															"nativeSrc": "12783:139:9",
															"nodeType": "YulAssignment",
															"src": "12783:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12917:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12917:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12791:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12791:124:9"
																},
																"nativeSrc": "12791:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12791:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12783:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12783:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12510:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12661:9:9",
														"nodeType": "YulTypedName",
														"src": "12661:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12676:4:9",
														"nodeType": "YulTypedName",
														"src": "12676:4:9",
														"type": ""
													}
												],
												"src": "12510:419:9"
											},
											{
												"body": {
													"nativeSrc": "13041:137:9",
													"nodeType": "YulBlock",
													"src": "13041:137:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13063:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13063:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13071:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13071:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13059:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:9"
																		},
																		"nativeSrc": "13059:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:14:9"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nativeSrc": "13075:34:9",
																		"nodeType": "YulLiteral",
																		"src": "13075:34:9",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13052:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13052:6:9"
																},
																"nativeSrc": "13052:58:9",
																"nodeType": "YulFunctionCall",
																"src": "13052:58:9"
															},
															"nativeSrc": "13052:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "13052:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13131:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13131:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13139:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13139:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13127:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13127:3:9"
																		},
																		"nativeSrc": "13127:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13127:15:9"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "13144:26:9",
																		"nodeType": "YulLiteral",
																		"src": "13144:26:9",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13120:6:9"
																},
																"nativeSrc": "13120:51:9",
																"nodeType": "YulFunctionCall",
																"src": "13120:51:9"
															},
															"nativeSrc": "13120:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "13120:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
												"nativeSrc": "12935:243:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13033:6:9",
														"nodeType": "YulTypedName",
														"src": "13033:6:9",
														"type": ""
													}
												],
												"src": "12935:243:9"
											},
											{
												"body": {
													"nativeSrc": "13330:220:9",
													"nodeType": "YulBlock",
													"src": "13330:220:9",
													"statements": [
														{
															"nativeSrc": "13340:74:9",
															"nodeType": "YulAssignment",
															"src": "13340:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13406:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13406:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:9",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13347:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13347:58:9"
																},
																"nativeSrc": "13347:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13347:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13340:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13340:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13512:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13512:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																	"nativeSrc": "13423:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13423:88:9"
																},
																"nativeSrc": "13423:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13423:93:9"
															},
															"nativeSrc": "13423:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13423:93:9"
														},
														{
															"nativeSrc": "13525:19:9",
															"nodeType": "YulAssignment",
															"src": "13525:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13536:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13536:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13541:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13541:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13532:3:9"
																},
																"nativeSrc": "13532:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13532:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13525:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13184:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13318:3:9",
														"nodeType": "YulTypedName",
														"src": "13318:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13326:3:9",
														"nodeType": "YulTypedName",
														"src": "13326:3:9",
														"type": ""
													}
												],
												"src": "13184:366:9"
											},
											{
												"body": {
													"nativeSrc": "13727:248:9",
													"nodeType": "YulBlock",
													"src": "13727:248:9",
													"statements": [
														{
															"nativeSrc": "13737:26:9",
															"nodeType": "YulAssignment",
															"src": "13737:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13749:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13749:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13760:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:9"
																},
																"nativeSrc": "13745:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13745:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13737:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13737:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13784:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13784:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13795:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13795:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13780:3:9"
																		},
																		"nativeSrc": "13780:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13780:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13803:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13803:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13809:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13809:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13799:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13799:3:9"
																		},
																		"nativeSrc": "13799:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13799:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13773:6:9"
																},
																"nativeSrc": "13773:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13773:47:9"
															},
															"nativeSrc": "13773:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13773:47:9"
														},
														{
															"nativeSrc": "13829:139:9",
															"nodeType": "YulAssignment",
															"src": "13829:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13963:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13963:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13837:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13837:124:9"
																},
																"nativeSrc": "13837:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13837:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13829:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13829:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13556:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13707:9:9",
														"nodeType": "YulTypedName",
														"src": "13707:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13722:4:9",
														"nodeType": "YulTypedName",
														"src": "13722:4:9",
														"type": ""
													}
												],
												"src": "13556:419:9"
											},
											{
												"body": {
													"nativeSrc": "14087:130:9",
													"nodeType": "YulBlock",
													"src": "14087:130:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14109:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14109:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14117:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14117:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14105:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14105:3:9"
																		},
																		"nativeSrc": "14105:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14105:14:9"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nativeSrc": "14121:34:9",
																		"nodeType": "YulLiteral",
																		"src": "14121:34:9",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14098:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14098:6:9"
																},
																"nativeSrc": "14098:58:9",
																"nodeType": "YulFunctionCall",
																"src": "14098:58:9"
															},
															"nativeSrc": "14098:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "14098:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14177:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14177:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14185:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14185:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14173:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14173:3:9"
																		},
																		"nativeSrc": "14173:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14173:15:9"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "14190:19:9",
																		"nodeType": "YulLiteral",
																		"src": "14190:19:9",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14166:6:9"
																},
																"nativeSrc": "14166:44:9",
																"nodeType": "YulFunctionCall",
																"src": "14166:44:9"
															},
															"nativeSrc": "14166:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "14166:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
												"nativeSrc": "13981:236:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14079:6:9",
														"nodeType": "YulTypedName",
														"src": "14079:6:9",
														"type": ""
													}
												],
												"src": "13981:236:9"
											},
											{
												"body": {
													"nativeSrc": "14369:220:9",
													"nodeType": "YulBlock",
													"src": "14369:220:9",
													"statements": [
														{
															"nativeSrc": "14379:74:9",
															"nodeType": "YulAssignment",
															"src": "14379:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14445:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14445:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14450:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14450:2:9",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14386:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14386:58:9"
																},
																"nativeSrc": "14386:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14386:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14379:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14379:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14551:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14551:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																	"nativeSrc": "14462:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14462:88:9"
																},
																"nativeSrc": "14462:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14462:93:9"
															},
															"nativeSrc": "14462:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14462:93:9"
														},
														{
															"nativeSrc": "14564:19:9",
															"nodeType": "YulAssignment",
															"src": "14564:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14575:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14575:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14580:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14571:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:9"
																},
																"nativeSrc": "14571:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14571:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14223:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14357:3:9",
														"nodeType": "YulTypedName",
														"src": "14357:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14365:3:9",
														"nodeType": "YulTypedName",
														"src": "14365:3:9",
														"type": ""
													}
												],
												"src": "14223:366:9"
											},
											{
												"body": {
													"nativeSrc": "14766:248:9",
													"nodeType": "YulBlock",
													"src": "14766:248:9",
													"statements": [
														{
															"nativeSrc": "14776:26:9",
															"nodeType": "YulAssignment",
															"src": "14776:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14788:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14788:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14799:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14799:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14784:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14784:3:9"
																},
																"nativeSrc": "14784:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14784:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14776:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14776:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14823:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14823:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14834:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14834:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14819:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14819:3:9"
																		},
																		"nativeSrc": "14819:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14819:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14842:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14842:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14848:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14848:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14838:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14838:3:9"
																		},
																		"nativeSrc": "14838:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14838:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14812:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14812:6:9"
																},
																"nativeSrc": "14812:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14812:47:9"
															},
															"nativeSrc": "14812:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14812:47:9"
														},
														{
															"nativeSrc": "14868:139:9",
															"nodeType": "YulAssignment",
															"src": "14868:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15002:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15002:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14876:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14876:124:9"
																},
																"nativeSrc": "14876:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14876:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14868:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14868:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14595:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14746:9:9",
														"nodeType": "YulTypedName",
														"src": "14746:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14761:4:9",
														"nodeType": "YulTypedName",
														"src": "14761:4:9",
														"type": ""
													}
												],
												"src": "14595:419:9"
											},
											{
												"body": {
													"nativeSrc": "15126:76:9",
													"nodeType": "YulBlock",
													"src": "15126:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15148:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15148:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15156:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15156:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15144:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15144:3:9"
																		},
																		"nativeSrc": "15144:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15144:14:9"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "15160:34:9",
																		"nodeType": "YulLiteral",
																		"src": "15160:34:9",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15137:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15137:6:9"
																},
																"nativeSrc": "15137:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15137:58:9"
															},
															"nativeSrc": "15137:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15137:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
												"nativeSrc": "15020:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15118:6:9",
														"nodeType": "YulTypedName",
														"src": "15118:6:9",
														"type": ""
													}
												],
												"src": "15020:182:9"
											},
											{
												"body": {
													"nativeSrc": "15354:220:9",
													"nodeType": "YulBlock",
													"src": "15354:220:9",
													"statements": [
														{
															"nativeSrc": "15364:74:9",
															"nodeType": "YulAssignment",
															"src": "15364:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15430:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15430:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15435:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15435:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15371:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15371:58:9"
																},
																"nativeSrc": "15371:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15371:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15364:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15536:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15536:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																	"nativeSrc": "15447:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15447:88:9"
																},
																"nativeSrc": "15447:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15447:93:9"
															},
															"nativeSrc": "15447:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15447:93:9"
														},
														{
															"nativeSrc": "15549:19:9",
															"nodeType": "YulAssignment",
															"src": "15549:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15560:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15560:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15565:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15565:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15556:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15556:3:9"
																},
																"nativeSrc": "15556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15556:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15549:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15549:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15208:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15342:3:9",
														"nodeType": "YulTypedName",
														"src": "15342:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15350:3:9",
														"nodeType": "YulTypedName",
														"src": "15350:3:9",
														"type": ""
													}
												],
												"src": "15208:366:9"
											},
											{
												"body": {
													"nativeSrc": "15751:248:9",
													"nodeType": "YulBlock",
													"src": "15751:248:9",
													"statements": [
														{
															"nativeSrc": "15761:26:9",
															"nodeType": "YulAssignment",
															"src": "15761:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15773:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15773:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15784:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15784:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15769:3:9"
																},
																"nativeSrc": "15769:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15769:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15761:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15761:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15808:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15808:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15819:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15819:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15804:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15804:3:9"
																		},
																		"nativeSrc": "15804:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15804:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15827:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15827:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15833:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15833:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15823:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15823:3:9"
																		},
																		"nativeSrc": "15823:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15823:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15797:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15797:6:9"
																},
																"nativeSrc": "15797:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15797:47:9"
															},
															"nativeSrc": "15797:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15797:47:9"
														},
														{
															"nativeSrc": "15853:139:9",
															"nodeType": "YulAssignment",
															"src": "15853:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15987:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15987:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15861:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15861:124:9"
																},
																"nativeSrc": "15861:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15861:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15853:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15853:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15580:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15731:9:9",
														"nodeType": "YulTypedName",
														"src": "15731:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15746:4:9",
														"nodeType": "YulTypedName",
														"src": "15746:4:9",
														"type": ""
													}
												],
												"src": "15580:419:9"
											},
											{
												"body": {
													"nativeSrc": "16111:72:9",
													"nodeType": "YulBlock",
													"src": "16111:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16133:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16133:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16141:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16141:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16129:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16129:3:9"
																		},
																		"nativeSrc": "16129:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16129:14:9"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nativeSrc": "16145:30:9",
																		"nodeType": "YulLiteral",
																		"src": "16145:30:9",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16122:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16122:6:9"
																},
																"nativeSrc": "16122:54:9",
																"nodeType": "YulFunctionCall",
																"src": "16122:54:9"
															},
															"nativeSrc": "16122:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "16122:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
												"nativeSrc": "16005:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16103:6:9",
														"nodeType": "YulTypedName",
														"src": "16103:6:9",
														"type": ""
													}
												],
												"src": "16005:178:9"
											},
											{
												"body": {
													"nativeSrc": "16335:220:9",
													"nodeType": "YulBlock",
													"src": "16335:220:9",
													"statements": [
														{
															"nativeSrc": "16345:74:9",
															"nodeType": "YulAssignment",
															"src": "16345:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16411:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16411:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16416:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16416:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16352:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16352:58:9"
																},
																"nativeSrc": "16352:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16352:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16345:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16345:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16517:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16517:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																	"nativeSrc": "16428:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16428:88:9"
																},
																"nativeSrc": "16428:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16428:93:9"
															},
															"nativeSrc": "16428:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16428:93:9"
														},
														{
															"nativeSrc": "16530:19:9",
															"nodeType": "YulAssignment",
															"src": "16530:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16541:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16541:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16546:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16546:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16537:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16537:3:9"
																},
																"nativeSrc": "16537:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16537:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16530:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16530:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16189:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16323:3:9",
														"nodeType": "YulTypedName",
														"src": "16323:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16331:3:9",
														"nodeType": "YulTypedName",
														"src": "16331:3:9",
														"type": ""
													}
												],
												"src": "16189:366:9"
											},
											{
												"body": {
													"nativeSrc": "16732:248:9",
													"nodeType": "YulBlock",
													"src": "16732:248:9",
													"statements": [
														{
															"nativeSrc": "16742:26:9",
															"nodeType": "YulAssignment",
															"src": "16742:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16754:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16754:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16765:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16765:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16750:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16750:3:9"
																},
																"nativeSrc": "16750:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16750:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16742:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16742:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16789:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16789:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16800:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16800:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16785:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16785:3:9"
																		},
																		"nativeSrc": "16785:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16785:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16808:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16808:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16814:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16814:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16804:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16804:3:9"
																		},
																		"nativeSrc": "16804:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16804:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16778:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16778:6:9"
																},
																"nativeSrc": "16778:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16778:47:9"
															},
															"nativeSrc": "16778:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16778:47:9"
														},
														{
															"nativeSrc": "16834:139:9",
															"nodeType": "YulAssignment",
															"src": "16834:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16968:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16968:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16842:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16842:124:9"
																},
																"nativeSrc": "16842:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16842:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16834:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16834:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16561:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16712:9:9",
														"nodeType": "YulTypedName",
														"src": "16712:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16727:4:9",
														"nodeType": "YulTypedName",
														"src": "16727:4:9",
														"type": ""
													}
												],
												"src": "16561:419:9"
											},
											{
												"body": {
													"nativeSrc": "17014:152:9",
													"nodeType": "YulBlock",
													"src": "17014:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17031:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17031:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17034:77:9",
																		"nodeType": "YulLiteral",
																		"src": "17034:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17024:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17024:6:9"
																},
																"nativeSrc": "17024:88:9",
																"nodeType": "YulFunctionCall",
																"src": "17024:88:9"
															},
															"nativeSrc": "17024:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "17024:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17128:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17128:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17131:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17131:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17121:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17121:6:9"
																},
																"nativeSrc": "17121:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17121:15:9"
															},
															"nativeSrc": "17121:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17121:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17152:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17152:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17155:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17155:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17145:6:9"
																},
																"nativeSrc": "17145:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17145:15:9"
															},
															"nativeSrc": "17145:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17145:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16986:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "16986:180:9"
											},
											{
												"body": {
													"nativeSrc": "17216:147:9",
													"nodeType": "YulBlock",
													"src": "17216:147:9",
													"statements": [
														{
															"nativeSrc": "17226:25:9",
															"nodeType": "YulAssignment",
															"src": "17226:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17249:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17249:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17231:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17231:17:9"
																},
																"nativeSrc": "17231:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17231:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17226:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17226:1:9"
																}
															]
														},
														{
															"nativeSrc": "17260:25:9",
															"nodeType": "YulAssignment",
															"src": "17260:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17283:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17283:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17265:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17265:17:9"
																},
																"nativeSrc": "17265:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17265:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17260:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17260:1:9"
																}
															]
														},
														{
															"nativeSrc": "17294:16:9",
															"nodeType": "YulAssignment",
															"src": "17294:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17305:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17305:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17308:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17308:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17301:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17301:3:9"
																},
																"nativeSrc": "17301:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17301:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17294:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17294:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17334:22:9",
																"nodeType": "YulBlock",
																"src": "17334:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17336:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17336:16:9"
																			},
																			"nativeSrc": "17336:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17336:18:9"
																		},
																		"nativeSrc": "17336:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17336:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17326:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17326:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17329:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17329:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17323:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17323:2:9"
																},
																"nativeSrc": "17323:10:9",
																"nodeType": "YulFunctionCall",
																"src": "17323:10:9"
															},
															"nativeSrc": "17320:36:9",
															"nodeType": "YulIf",
															"src": "17320:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17172:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17203:1:9",
														"nodeType": "YulTypedName",
														"src": "17203:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17206:1:9",
														"nodeType": "YulTypedName",
														"src": "17206:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17212:3:9",
														"nodeType": "YulTypedName",
														"src": "17212:3:9",
														"type": ""
													}
												],
												"src": "17172:191:9"
											},
											{
												"body": {
													"nativeSrc": "17475:69:9",
													"nodeType": "YulBlock",
													"src": "17475:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17497:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17497:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17505:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17505:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17493:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17493:3:9"
																		},
																		"nativeSrc": "17493:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17493:14:9"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "17509:27:9",
																		"nodeType": "YulLiteral",
																		"src": "17509:27:9",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17486:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17486:6:9"
																},
																"nativeSrc": "17486:51:9",
																"nodeType": "YulFunctionCall",
																"src": "17486:51:9"
															},
															"nativeSrc": "17486:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "17486:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "17369:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17467:6:9",
														"nodeType": "YulTypedName",
														"src": "17467:6:9",
														"type": ""
													}
												],
												"src": "17369:175:9"
											},
											{
												"body": {
													"nativeSrc": "17696:220:9",
													"nodeType": "YulBlock",
													"src": "17696:220:9",
													"statements": [
														{
															"nativeSrc": "17706:74:9",
															"nodeType": "YulAssignment",
															"src": "17706:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17772:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17772:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17777:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17777:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17713:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17713:58:9"
																},
																"nativeSrc": "17713:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17713:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17706:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17706:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17878:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17878:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "17789:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17789:88:9"
																},
																"nativeSrc": "17789:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17789:93:9"
															},
															"nativeSrc": "17789:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17789:93:9"
														},
														{
															"nativeSrc": "17891:19:9",
															"nodeType": "YulAssignment",
															"src": "17891:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17902:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17902:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17907:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17907:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17898:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17898:3:9"
																},
																"nativeSrc": "17898:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17898:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17891:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17891:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17550:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17684:3:9",
														"nodeType": "YulTypedName",
														"src": "17684:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17692:3:9",
														"nodeType": "YulTypedName",
														"src": "17692:3:9",
														"type": ""
													}
												],
												"src": "17550:366:9"
											},
											{
												"body": {
													"nativeSrc": "18093:248:9",
													"nodeType": "YulBlock",
													"src": "18093:248:9",
													"statements": [
														{
															"nativeSrc": "18103:26:9",
															"nodeType": "YulAssignment",
															"src": "18103:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18115:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18115:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18126:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18111:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18111:3:9"
																},
																"nativeSrc": "18111:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18111:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18103:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18103:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18150:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18150:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18161:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18161:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18146:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18146:3:9"
																		},
																		"nativeSrc": "18146:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18146:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18169:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18169:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18175:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18175:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18165:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18165:3:9"
																		},
																		"nativeSrc": "18165:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18165:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18139:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18139:6:9"
																},
																"nativeSrc": "18139:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18139:47:9"
															},
															"nativeSrc": "18139:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18139:47:9"
														},
														{
															"nativeSrc": "18195:139:9",
															"nodeType": "YulAssignment",
															"src": "18195:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18329:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18329:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18203:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18203:124:9"
																},
																"nativeSrc": "18203:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18203:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18195:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18195:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17922:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18073:9:9",
														"nodeType": "YulTypedName",
														"src": "18073:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18088:4:9",
														"nodeType": "YulTypedName",
														"src": "18088:4:9",
														"type": ""
													}
												],
												"src": "17922:419:9"
											},
											{
												"body": {
													"nativeSrc": "18453:128:9",
													"nodeType": "YulBlock",
													"src": "18453:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18475:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18475:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18483:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18483:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18471:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18471:3:9"
																		},
																		"nativeSrc": "18471:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18471:14:9"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nativeSrc": "18487:34:9",
																		"nodeType": "YulLiteral",
																		"src": "18487:34:9",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18464:6:9"
																},
																"nativeSrc": "18464:58:9",
																"nodeType": "YulFunctionCall",
																"src": "18464:58:9"
															},
															"nativeSrc": "18464:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "18464:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18543:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18543:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18551:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18551:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18539:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18539:3:9"
																		},
																		"nativeSrc": "18539:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18539:15:9"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "18556:17:9",
																		"nodeType": "YulLiteral",
																		"src": "18556:17:9",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18532:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18532:6:9"
																},
																"nativeSrc": "18532:42:9",
																"nodeType": "YulFunctionCall",
																"src": "18532:42:9"
															},
															"nativeSrc": "18532:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "18532:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nativeSrc": "18347:234:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18445:6:9",
														"nodeType": "YulTypedName",
														"src": "18445:6:9",
														"type": ""
													}
												],
												"src": "18347:234:9"
											},
											{
												"body": {
													"nativeSrc": "18733:220:9",
													"nodeType": "YulBlock",
													"src": "18733:220:9",
													"statements": [
														{
															"nativeSrc": "18743:74:9",
															"nodeType": "YulAssignment",
															"src": "18743:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18809:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18809:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18814:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18814:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18750:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18750:58:9"
																},
																"nativeSrc": "18750:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18750:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18743:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18743:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18915:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18915:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nativeSrc": "18826:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18826:88:9"
																},
																"nativeSrc": "18826:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18826:93:9"
															},
															"nativeSrc": "18826:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18826:93:9"
														},
														{
															"nativeSrc": "18928:19:9",
															"nodeType": "YulAssignment",
															"src": "18928:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18939:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18939:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18944:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18944:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18935:3:9"
																},
																"nativeSrc": "18935:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18935:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18928:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18928:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18587:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18721:3:9",
														"nodeType": "YulTypedName",
														"src": "18721:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18729:3:9",
														"nodeType": "YulTypedName",
														"src": "18729:3:9",
														"type": ""
													}
												],
												"src": "18587:366:9"
											},
											{
												"body": {
													"nativeSrc": "19130:248:9",
													"nodeType": "YulBlock",
													"src": "19130:248:9",
													"statements": [
														{
															"nativeSrc": "19140:26:9",
															"nodeType": "YulAssignment",
															"src": "19140:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19152:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19148:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19148:3:9"
																},
																"nativeSrc": "19148:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19148:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19140:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19140:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19187:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19187:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19198:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19198:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19183:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19183:3:9"
																		},
																		"nativeSrc": "19183:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19183:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19206:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19206:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19212:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19212:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19202:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19202:3:9"
																		},
																		"nativeSrc": "19202:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19202:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19176:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19176:6:9"
																},
																"nativeSrc": "19176:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19176:47:9"
															},
															"nativeSrc": "19176:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19176:47:9"
														},
														{
															"nativeSrc": "19232:139:9",
															"nodeType": "YulAssignment",
															"src": "19232:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19366:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19366:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19240:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19240:124:9"
																},
																"nativeSrc": "19240:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19240:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19232:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19232:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18959:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19110:9:9",
														"nodeType": "YulTypedName",
														"src": "19110:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19125:4:9",
														"nodeType": "YulTypedName",
														"src": "19125:4:9",
														"type": ""
													}
												],
												"src": "18959:419:9"
											},
											{
												"body": {
													"nativeSrc": "19490:74:9",
													"nodeType": "YulBlock",
													"src": "19490:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19512:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19512:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19520:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19520:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19508:3:9"
																		},
																		"nativeSrc": "19508:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19508:14:9"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206e6f7420746f6b656e206f776e6572",
																		"kind": "string",
																		"nativeSrc": "19524:32:9",
																		"nodeType": "YulLiteral",
																		"src": "19524:32:9",
																		"type": "",
																		"value": "ERC721: caller not token owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19501:6:9"
																},
																"nativeSrc": "19501:56:9",
																"nodeType": "YulFunctionCall",
																"src": "19501:56:9"
															},
															"nativeSrc": "19501:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "19501:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a",
												"nativeSrc": "19384:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19482:6:9",
														"nodeType": "YulTypedName",
														"src": "19482:6:9",
														"type": ""
													}
												],
												"src": "19384:180:9"
											},
											{
												"body": {
													"nativeSrc": "19716:220:9",
													"nodeType": "YulBlock",
													"src": "19716:220:9",
													"statements": [
														{
															"nativeSrc": "19726:74:9",
															"nodeType": "YulAssignment",
															"src": "19726:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19792:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19792:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19797:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19797:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19733:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19733:58:9"
																},
																"nativeSrc": "19733:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19733:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19726:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19726:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19898:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19898:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a",
																	"nativeSrc": "19809:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19809:88:9"
																},
																"nativeSrc": "19809:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19809:93:9"
															},
															"nativeSrc": "19809:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19809:93:9"
														},
														{
															"nativeSrc": "19911:19:9",
															"nodeType": "YulAssignment",
															"src": "19911:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19922:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19922:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19927:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19927:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19918:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19918:3:9"
																},
																"nativeSrc": "19918:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19918:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19911:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19570:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19704:3:9",
														"nodeType": "YulTypedName",
														"src": "19704:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19712:3:9",
														"nodeType": "YulTypedName",
														"src": "19712:3:9",
														"type": ""
													}
												],
												"src": "19570:366:9"
											},
											{
												"body": {
													"nativeSrc": "20113:248:9",
													"nodeType": "YulBlock",
													"src": "20113:248:9",
													"statements": [
														{
															"nativeSrc": "20123:26:9",
															"nodeType": "YulAssignment",
															"src": "20123:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20135:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20135:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20146:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20131:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20131:3:9"
																},
																"nativeSrc": "20131:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20131:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20123:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20123:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20170:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20170:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20181:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20181:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20166:3:9"
																		},
																		"nativeSrc": "20166:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20166:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20189:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20189:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20195:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20195:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20185:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20185:3:9"
																		},
																		"nativeSrc": "20185:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20185:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20159:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20159:6:9"
																},
																"nativeSrc": "20159:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20159:47:9"
															},
															"nativeSrc": "20159:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20159:47:9"
														},
														{
															"nativeSrc": "20215:139:9",
															"nodeType": "YulAssignment",
															"src": "20215:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20349:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20349:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20223:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20223:124:9"
																},
																"nativeSrc": "20223:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20223:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20215:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20215:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19942:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20093:9:9",
														"nodeType": "YulTypedName",
														"src": "20093:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20108:4:9",
														"nodeType": "YulTypedName",
														"src": "20108:4:9",
														"type": ""
													}
												],
												"src": "19942:419:9"
											},
											{
												"body": {
													"nativeSrc": "20473:125:9",
													"nodeType": "YulBlock",
													"src": "20473:125:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20495:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20495:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20503:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20503:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20491:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20491:3:9"
																		},
																		"nativeSrc": "20491:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20491:14:9"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nativeSrc": "20507:34:9",
																		"nodeType": "YulLiteral",
																		"src": "20507:34:9",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20484:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20484:6:9"
																},
																"nativeSrc": "20484:58:9",
																"nodeType": "YulFunctionCall",
																"src": "20484:58:9"
															},
															"nativeSrc": "20484:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "20484:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20563:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20563:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20571:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20571:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20559:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20559:3:9"
																		},
																		"nativeSrc": "20559:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20559:15:9"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "20576:14:9",
																		"nodeType": "YulLiteral",
																		"src": "20576:14:9",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20552:6:9"
																},
																"nativeSrc": "20552:39:9",
																"nodeType": "YulFunctionCall",
																"src": "20552:39:9"
															},
															"nativeSrc": "20552:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "20552:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
												"nativeSrc": "20367:231:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20465:6:9",
														"nodeType": "YulTypedName",
														"src": "20465:6:9",
														"type": ""
													}
												],
												"src": "20367:231:9"
											},
											{
												"body": {
													"nativeSrc": "20750:220:9",
													"nodeType": "YulBlock",
													"src": "20750:220:9",
													"statements": [
														{
															"nativeSrc": "20760:74:9",
															"nodeType": "YulAssignment",
															"src": "20760:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20826:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20826:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20831:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20831:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20767:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20767:58:9"
																},
																"nativeSrc": "20767:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20767:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20760:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20760:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20932:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20932:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																	"nativeSrc": "20843:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20843:88:9"
																},
																"nativeSrc": "20843:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20843:93:9"
															},
															"nativeSrc": "20843:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20843:93:9"
														},
														{
															"nativeSrc": "20945:19:9",
															"nodeType": "YulAssignment",
															"src": "20945:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20956:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20956:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20961:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20961:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20952:3:9"
																},
																"nativeSrc": "20952:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20952:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20945:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20604:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20738:3:9",
														"nodeType": "YulTypedName",
														"src": "20738:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20746:3:9",
														"nodeType": "YulTypedName",
														"src": "20746:3:9",
														"type": ""
													}
												],
												"src": "20604:366:9"
											},
											{
												"body": {
													"nativeSrc": "21147:248:9",
													"nodeType": "YulBlock",
													"src": "21147:248:9",
													"statements": [
														{
															"nativeSrc": "21157:26:9",
															"nodeType": "YulAssignment",
															"src": "21157:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21169:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21169:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21180:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21165:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21165:3:9"
																},
																"nativeSrc": "21165:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21165:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21157:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21157:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21204:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21204:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21215:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21215:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21200:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21200:3:9"
																		},
																		"nativeSrc": "21200:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21200:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21223:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21223:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21229:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21229:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21219:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21219:3:9"
																		},
																		"nativeSrc": "21219:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21219:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21193:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21193:6:9"
																},
																"nativeSrc": "21193:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21193:47:9"
															},
															"nativeSrc": "21193:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21193:47:9"
														},
														{
															"nativeSrc": "21249:139:9",
															"nodeType": "YulAssignment",
															"src": "21249:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21383:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21383:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21257:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21257:124:9"
																},
																"nativeSrc": "21257:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21257:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21249:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21249:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20976:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21127:9:9",
														"nodeType": "YulTypedName",
														"src": "21127:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21142:4:9",
														"nodeType": "YulTypedName",
														"src": "21142:4:9",
														"type": ""
													}
												],
												"src": "20976:419:9"
											},
											{
												"body": {
													"nativeSrc": "21507:118:9",
													"nodeType": "YulBlock",
													"src": "21507:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21529:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21529:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21537:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21537:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21525:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21525:3:9"
																		},
																		"nativeSrc": "21525:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21525:14:9"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "21541:34:9",
																		"nodeType": "YulLiteral",
																		"src": "21541:34:9",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21518:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21518:6:9"
																},
																"nativeSrc": "21518:58:9",
																"nodeType": "YulFunctionCall",
																"src": "21518:58:9"
															},
															"nativeSrc": "21518:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "21518:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21597:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21597:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21605:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21605:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21593:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21593:3:9"
																		},
																		"nativeSrc": "21593:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21593:15:9"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "21610:7:9",
																		"nodeType": "YulLiteral",
																		"src": "21610:7:9",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21586:6:9"
																},
																"nativeSrc": "21586:32:9",
																"nodeType": "YulFunctionCall",
																"src": "21586:32:9"
															},
															"nativeSrc": "21586:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "21586:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nativeSrc": "21401:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21499:6:9",
														"nodeType": "YulTypedName",
														"src": "21499:6:9",
														"type": ""
													}
												],
												"src": "21401:224:9"
											},
											{
												"body": {
													"nativeSrc": "21777:220:9",
													"nodeType": "YulBlock",
													"src": "21777:220:9",
													"statements": [
														{
															"nativeSrc": "21787:74:9",
															"nodeType": "YulAssignment",
															"src": "21787:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21853:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21853:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21858:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21858:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21794:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21794:58:9"
																},
																"nativeSrc": "21794:67:9",
																"nodeType": "YulFunctionCall",
																"src": "21794:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21787:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21959:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21959:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nativeSrc": "21870:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21870:88:9"
																},
																"nativeSrc": "21870:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21870:93:9"
															},
															"nativeSrc": "21870:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21870:93:9"
														},
														{
															"nativeSrc": "21972:19:9",
															"nodeType": "YulAssignment",
															"src": "21972:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21983:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21988:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21988:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21979:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21979:3:9"
																},
																"nativeSrc": "21979:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21979:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21972:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21631:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21765:3:9",
														"nodeType": "YulTypedName",
														"src": "21765:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21773:3:9",
														"nodeType": "YulTypedName",
														"src": "21773:3:9",
														"type": ""
													}
												],
												"src": "21631:366:9"
											},
											{
												"body": {
													"nativeSrc": "22174:248:9",
													"nodeType": "YulBlock",
													"src": "22174:248:9",
													"statements": [
														{
															"nativeSrc": "22184:26:9",
															"nodeType": "YulAssignment",
															"src": "22184:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22196:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22196:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22207:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22207:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22192:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22192:3:9"
																},
																"nativeSrc": "22192:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22192:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22184:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22184:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22231:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22231:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22242:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22242:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22227:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22227:3:9"
																		},
																		"nativeSrc": "22227:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22227:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22250:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22250:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22256:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22256:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22246:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22246:3:9"
																		},
																		"nativeSrc": "22246:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22246:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22220:6:9"
																},
																"nativeSrc": "22220:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22220:47:9"
															},
															"nativeSrc": "22220:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22220:47:9"
														},
														{
															"nativeSrc": "22276:139:9",
															"nodeType": "YulAssignment",
															"src": "22276:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22410:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22410:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22284:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22284:124:9"
																},
																"nativeSrc": "22284:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22284:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22276:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22276:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22003:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22154:9:9",
														"nodeType": "YulTypedName",
														"src": "22154:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22169:4:9",
														"nodeType": "YulTypedName",
														"src": "22169:4:9",
														"type": ""
													}
												],
												"src": "22003:419:9"
											},
											{
												"body": {
													"nativeSrc": "22534:117:9",
													"nodeType": "YulBlock",
													"src": "22534:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22556:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22556:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22564:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22564:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22552:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22552:3:9"
																		},
																		"nativeSrc": "22552:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22552:14:9"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "22568:34:9",
																		"nodeType": "YulLiteral",
																		"src": "22568:34:9",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22545:6:9"
																},
																"nativeSrc": "22545:58:9",
																"nodeType": "YulFunctionCall",
																"src": "22545:58:9"
															},
															"nativeSrc": "22545:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "22545:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22624:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22624:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22632:2:9",
																				"nodeType": "YulLiteral",
																				"src": "22632:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22620:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22620:3:9"
																		},
																		"nativeSrc": "22620:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22620:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "22637:6:9",
																		"nodeType": "YulLiteral",
																		"src": "22637:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22613:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22613:6:9"
																},
																"nativeSrc": "22613:31:9",
																"nodeType": "YulFunctionCall",
																"src": "22613:31:9"
															},
															"nativeSrc": "22613:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "22613:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nativeSrc": "22428:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22526:6:9",
														"nodeType": "YulTypedName",
														"src": "22526:6:9",
														"type": ""
													}
												],
												"src": "22428:223:9"
											},
											{
												"body": {
													"nativeSrc": "22803:220:9",
													"nodeType": "YulBlock",
													"src": "22803:220:9",
													"statements": [
														{
															"nativeSrc": "22813:74:9",
															"nodeType": "YulAssignment",
															"src": "22813:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22879:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22879:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22884:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22884:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22820:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22820:58:9"
																},
																"nativeSrc": "22820:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22820:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22813:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22813:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22985:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22985:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nativeSrc": "22896:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22896:88:9"
																},
																"nativeSrc": "22896:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22896:93:9"
															},
															"nativeSrc": "22896:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22896:93:9"
														},
														{
															"nativeSrc": "22998:19:9",
															"nodeType": "YulAssignment",
															"src": "22998:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23009:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23009:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23014:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23014:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23005:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23005:3:9"
																},
																"nativeSrc": "23005:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23005:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22998:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22998:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22657:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22791:3:9",
														"nodeType": "YulTypedName",
														"src": "22791:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22799:3:9",
														"nodeType": "YulTypedName",
														"src": "22799:3:9",
														"type": ""
													}
												],
												"src": "22657:366:9"
											},
											{
												"body": {
													"nativeSrc": "23200:248:9",
													"nodeType": "YulBlock",
													"src": "23200:248:9",
													"statements": [
														{
															"nativeSrc": "23210:26:9",
															"nodeType": "YulAssignment",
															"src": "23210:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23222:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23222:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23233:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23233:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23218:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23218:3:9"
																},
																"nativeSrc": "23218:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23218:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23210:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23210:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23257:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23257:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23268:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23268:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23253:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23253:3:9"
																		},
																		"nativeSrc": "23253:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23253:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23276:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23276:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23282:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23282:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23272:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23272:3:9"
																		},
																		"nativeSrc": "23272:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23272:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23246:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23246:6:9"
																},
																"nativeSrc": "23246:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23246:47:9"
															},
															"nativeSrc": "23246:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23246:47:9"
														},
														{
															"nativeSrc": "23302:139:9",
															"nodeType": "YulAssignment",
															"src": "23302:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23436:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23436:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23310:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23310:124:9"
																},
																"nativeSrc": "23310:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23310:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23302:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23302:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23029:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23180:9:9",
														"nodeType": "YulTypedName",
														"src": "23180:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23195:4:9",
														"nodeType": "YulTypedName",
														"src": "23195:4:9",
														"type": ""
													}
												],
												"src": "23029:419:9"
											},
											{
												"body": {
													"nativeSrc": "23499:149:9",
													"nodeType": "YulBlock",
													"src": "23499:149:9",
													"statements": [
														{
															"nativeSrc": "23509:25:9",
															"nodeType": "YulAssignment",
															"src": "23509:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23532:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "23532:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23514:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "23514:17:9"
																},
																"nativeSrc": "23514:20:9",
																"nodeType": "YulFunctionCall",
																"src": "23514:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23509:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "23509:1:9"
																}
															]
														},
														{
															"nativeSrc": "23543:25:9",
															"nodeType": "YulAssignment",
															"src": "23543:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23566:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "23566:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23548:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "23548:17:9"
																},
																"nativeSrc": "23548:20:9",
																"nodeType": "YulFunctionCall",
																"src": "23548:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23543:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "23543:1:9"
																}
															]
														},
														{
															"nativeSrc": "23577:17:9",
															"nodeType": "YulAssignment",
															"src": "23577:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23589:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "23589:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23592:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "23592:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "23585:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23585:3:9"
																},
																"nativeSrc": "23585:9:9",
																"nodeType": "YulFunctionCall",
																"src": "23585:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "23577:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23577:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23619:22:9",
																"nodeType": "YulBlock",
																"src": "23619:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23621:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "23621:16:9"
																			},
																			"nativeSrc": "23621:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "23621:18:9"
																		},
																		"nativeSrc": "23621:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "23621:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "23610:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23610:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "23616:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "23616:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23607:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "23607:2:9"
																},
																"nativeSrc": "23607:11:9",
																"nodeType": "YulFunctionCall",
																"src": "23607:11:9"
															},
															"nativeSrc": "23604:37:9",
															"nodeType": "YulIf",
															"src": "23604:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "23454:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23485:1:9",
														"nodeType": "YulTypedName",
														"src": "23485:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23488:1:9",
														"nodeType": "YulTypedName",
														"src": "23488:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "23494:4:9",
														"nodeType": "YulTypedName",
														"src": "23494:4:9",
														"type": ""
													}
												],
												"src": "23454:194:9"
											},
											{
												"body": {
													"nativeSrc": "23760:131:9",
													"nodeType": "YulBlock",
													"src": "23760:131:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23782:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23782:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23790:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23790:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23778:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23778:3:9"
																		},
																		"nativeSrc": "23778:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23778:14:9"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "23794:34:9",
																		"nodeType": "YulLiteral",
																		"src": "23794:34:9",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23771:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23771:6:9"
																},
																"nativeSrc": "23771:58:9",
																"nodeType": "YulFunctionCall",
																"src": "23771:58:9"
															},
															"nativeSrc": "23771:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "23771:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23850:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23850:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23858:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23858:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23846:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23846:3:9"
																		},
																		"nativeSrc": "23846:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23846:15:9"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "23863:20:9",
																		"nodeType": "YulLiteral",
																		"src": "23863:20:9",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23839:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23839:6:9"
																},
																"nativeSrc": "23839:45:9",
																"nodeType": "YulFunctionCall",
																"src": "23839:45:9"
															},
															"nativeSrc": "23839:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "23839:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "23654:237:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23752:6:9",
														"nodeType": "YulTypedName",
														"src": "23752:6:9",
														"type": ""
													}
												],
												"src": "23654:237:9"
											},
											{
												"body": {
													"nativeSrc": "24043:220:9",
													"nodeType": "YulBlock",
													"src": "24043:220:9",
													"statements": [
														{
															"nativeSrc": "24053:74:9",
															"nodeType": "YulAssignment",
															"src": "24053:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24119:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24119:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24124:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24124:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24060:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24060:58:9"
																},
																"nativeSrc": "24060:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24060:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24053:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24053:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24225:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "24136:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24136:88:9"
																},
																"nativeSrc": "24136:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24136:93:9"
															},
															"nativeSrc": "24136:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24136:93:9"
														},
														{
															"nativeSrc": "24238:19:9",
															"nodeType": "YulAssignment",
															"src": "24238:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24249:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24249:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24254:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24254:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24245:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24245:3:9"
																},
																"nativeSrc": "24245:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24245:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24238:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24238:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23897:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24031:3:9",
														"nodeType": "YulTypedName",
														"src": "24031:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24039:3:9",
														"nodeType": "YulTypedName",
														"src": "24039:3:9",
														"type": ""
													}
												],
												"src": "23897:366:9"
											},
											{
												"body": {
													"nativeSrc": "24440:248:9",
													"nodeType": "YulBlock",
													"src": "24440:248:9",
													"statements": [
														{
															"nativeSrc": "24450:26:9",
															"nodeType": "YulAssignment",
															"src": "24450:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24462:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24462:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24473:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24473:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24458:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24458:3:9"
																},
																"nativeSrc": "24458:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24458:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24450:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24450:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24497:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24497:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24508:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24508:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24493:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24493:3:9"
																		},
																		"nativeSrc": "24493:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24493:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24516:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24516:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24522:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24522:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24512:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24512:3:9"
																		},
																		"nativeSrc": "24512:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24512:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24486:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24486:6:9"
																},
																"nativeSrc": "24486:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24486:47:9"
															},
															"nativeSrc": "24486:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24486:47:9"
														},
														{
															"nativeSrc": "24542:139:9",
															"nodeType": "YulAssignment",
															"src": "24542:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24676:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24676:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24550:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24550:124:9"
																},
																"nativeSrc": "24550:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24550:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24542:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24542:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24269:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24420:9:9",
														"nodeType": "YulTypedName",
														"src": "24420:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24435:4:9",
														"nodeType": "YulTypedName",
														"src": "24435:4:9",
														"type": ""
													}
												],
												"src": "24269:419:9"
											},
											{
												"body": {
													"nativeSrc": "24752:40:9",
													"nodeType": "YulBlock",
													"src": "24752:40:9",
													"statements": [
														{
															"nativeSrc": "24763:22:9",
															"nodeType": "YulAssignment",
															"src": "24763:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24779:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "24779:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24773:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "24773:5:9"
																},
																"nativeSrc": "24773:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24773:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "24763:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24763:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24694:98:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24735:5:9",
														"nodeType": "YulTypedName",
														"src": "24735:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24745:6:9",
														"nodeType": "YulTypedName",
														"src": "24745:6:9",
														"type": ""
													}
												],
												"src": "24694:98:9"
											},
											{
												"body": {
													"nativeSrc": "24893:73:9",
													"nodeType": "YulBlock",
													"src": "24893:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24910:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24910:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24915:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "24915:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24903:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24903:6:9"
																},
																"nativeSrc": "24903:19:9",
																"nodeType": "YulFunctionCall",
																"src": "24903:19:9"
															},
															"nativeSrc": "24903:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "24903:19:9"
														},
														{
															"nativeSrc": "24931:29:9",
															"nodeType": "YulAssignment",
															"src": "24931:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24950:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24950:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24955:4:9",
																		"nodeType": "YulLiteral",
																		"src": "24955:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24946:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24946:3:9"
																},
																"nativeSrc": "24946:14:9",
																"nodeType": "YulFunctionCall",
																"src": "24946:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24931:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "24931:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24798:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24865:3:9",
														"nodeType": "YulTypedName",
														"src": "24865:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24870:6:9",
														"nodeType": "YulTypedName",
														"src": "24870:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24881:11:9",
														"nodeType": "YulTypedName",
														"src": "24881:11:9",
														"type": ""
													}
												],
												"src": "24798:168:9"
											},
											{
												"body": {
													"nativeSrc": "25062:283:9",
													"nodeType": "YulBlock",
													"src": "25062:283:9",
													"statements": [
														{
															"nativeSrc": "25072:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "25072:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25118:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "25118:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "25086:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "25086:31:9"
																},
																"nativeSrc": "25086:38:9",
																"nodeType": "YulFunctionCall",
																"src": "25086:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "25076:6:9",
																	"nodeType": "YulTypedName",
																	"src": "25076:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25133:77:9",
															"nodeType": "YulAssignment",
															"src": "25133:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25198:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25198:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25203:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25203:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25140:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "25140:57:9"
																},
																"nativeSrc": "25140:70:9",
																"nodeType": "YulFunctionCall",
																"src": "25140:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25133:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25133:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25258:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "25258:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25265:4:9",
																				"nodeType": "YulLiteral",
																				"src": "25265:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25254:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25254:3:9"
																		},
																		"nativeSrc": "25254:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25254:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25272:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25272:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25277:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25277:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25219:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "25219:34:9"
																},
																"nativeSrc": "25219:65:9",
																"nodeType": "YulFunctionCall",
																"src": "25219:65:9"
															},
															"nativeSrc": "25219:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "25219:65:9"
														},
														{
															"nativeSrc": "25293:46:9",
															"nodeType": "YulAssignment",
															"src": "25293:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25304:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25304:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "25331:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "25331:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "25309:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "25309:21:9"
																		},
																		"nativeSrc": "25309:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25309:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25300:3:9"
																},
																"nativeSrc": "25300:39:9",
																"nodeType": "YulFunctionCall",
																"src": "25300:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25293:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25293:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24972:373:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25043:5:9",
														"nodeType": "YulTypedName",
														"src": "25043:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25050:3:9",
														"nodeType": "YulTypedName",
														"src": "25050:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25058:3:9",
														"nodeType": "YulTypedName",
														"src": "25058:3:9",
														"type": ""
													}
												],
												"src": "24972:373:9"
											},
											{
												"body": {
													"nativeSrc": "25551:440:9",
													"nodeType": "YulBlock",
													"src": "25551:440:9",
													"statements": [
														{
															"nativeSrc": "25561:27:9",
															"nodeType": "YulAssignment",
															"src": "25561:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25573:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "25573:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25584:3:9",
																		"nodeType": "YulLiteral",
																		"src": "25584:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25569:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25569:3:9"
																},
																"nativeSrc": "25569:19:9",
																"nodeType": "YulFunctionCall",
																"src": "25569:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25561:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25561:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25642:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25642:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25655:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25655:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25666:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25666:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25651:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25651:3:9"
																		},
																		"nativeSrc": "25651:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25651:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25598:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25598:43:9"
																},
																"nativeSrc": "25598:71:9",
																"nodeType": "YulFunctionCall",
																"src": "25598:71:9"
															},
															"nativeSrc": "25598:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "25598:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25723:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25723:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25736:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25736:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25747:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25747:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25732:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25732:3:9"
																		},
																		"nativeSrc": "25732:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25732:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25679:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25679:43:9"
																},
																"nativeSrc": "25679:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25679:72:9"
															},
															"nativeSrc": "25679:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25679:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25805:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25805:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25818:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25818:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25829:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25829:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25814:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25814:3:9"
																		},
																		"nativeSrc": "25814:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25814:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25761:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25761:43:9"
																},
																"nativeSrc": "25761:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25761:72:9"
															},
															"nativeSrc": "25761:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25761:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25854:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25854:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25865:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25865:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25850:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25850:3:9"
																		},
																		"nativeSrc": "25850:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25850:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25874:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "25874:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25880:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25880:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25870:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25870:3:9"
																		},
																		"nativeSrc": "25870:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25870:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25843:6:9"
																},
																"nativeSrc": "25843:48:9",
																"nodeType": "YulFunctionCall",
																"src": "25843:48:9"
															},
															"nativeSrc": "25843:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "25843:48:9"
														},
														{
															"nativeSrc": "25900:84:9",
															"nodeType": "YulAssignment",
															"src": "25900:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25970:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25979:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "25979:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25908:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "25908:61:9"
																},
																"nativeSrc": "25908:76:9",
																"nodeType": "YulFunctionCall",
																"src": "25908:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25900:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25900:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25351:640:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25499:9:9",
														"nodeType": "YulTypedName",
														"src": "25499:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25511:6:9",
														"nodeType": "YulTypedName",
														"src": "25511:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25519:6:9",
														"nodeType": "YulTypedName",
														"src": "25519:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25527:6:9",
														"nodeType": "YulTypedName",
														"src": "25527:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25535:6:9",
														"nodeType": "YulTypedName",
														"src": "25535:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25546:4:9",
														"nodeType": "YulTypedName",
														"src": "25546:4:9",
														"type": ""
													}
												],
												"src": "25351:640:9"
											},
											{
												"body": {
													"nativeSrc": "26059:79:9",
													"nodeType": "YulBlock",
													"src": "26059:79:9",
													"statements": [
														{
															"nativeSrc": "26069:22:9",
															"nodeType": "YulAssignment",
															"src": "26069:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "26084:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "26084:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26078:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "26078:5:9"
																},
																"nativeSrc": "26078:13:9",
																"nodeType": "YulFunctionCall",
																"src": "26078:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26069:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "26069:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26126:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "26126:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "26100:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "26100:25:9"
																},
																"nativeSrc": "26100:32:9",
																"nodeType": "YulFunctionCall",
																"src": "26100:32:9"
															},
															"nativeSrc": "26100:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "26100:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "25997:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "26037:6:9",
														"nodeType": "YulTypedName",
														"src": "26037:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26045:3:9",
														"nodeType": "YulTypedName",
														"src": "26045:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "26053:5:9",
														"nodeType": "YulTypedName",
														"src": "26053:5:9",
														"type": ""
													}
												],
												"src": "25997:141:9"
											},
											{
												"body": {
													"nativeSrc": "26220:273:9",
													"nodeType": "YulBlock",
													"src": "26220:273:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "26266:83:9",
																"nodeType": "YulBlock",
																"src": "26266:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26268:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "26268:77:9"
																			},
																			"nativeSrc": "26268:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "26268:79:9"
																		},
																		"nativeSrc": "26268:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "26268:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26241:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "26241:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26250:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26250:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26237:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26237:3:9"
																		},
																		"nativeSrc": "26237:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26237:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26262:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26233:3:9"
																},
																"nativeSrc": "26233:32:9",
																"nodeType": "YulFunctionCall",
																"src": "26233:32:9"
															},
															"nativeSrc": "26230:119:9",
															"nodeType": "YulIf",
															"src": "26230:119:9"
														},
														{
															"nativeSrc": "26359:127:9",
															"nodeType": "YulBlock",
															"src": "26359:127:9",
															"statements": [
																{
																	"nativeSrc": "26374:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26374:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26388:1:9",
																		"nodeType": "YulLiteral",
																		"src": "26388:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26378:6:9",
																			"nodeType": "YulTypedName",
																			"src": "26378:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26403:73:9",
																	"nodeType": "YulAssignment",
																	"src": "26403:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26448:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "26448:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26459:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "26459:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26444:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "26444:3:9"
																				},
																				"nativeSrc": "26444:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "26444:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26468:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "26468:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "26413:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "26413:30:9"
																		},
																		"nativeSrc": "26413:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26413:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26403:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "26403:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "26144:349:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26190:9:9",
														"nodeType": "YulTypedName",
														"src": "26190:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26201:7:9",
														"nodeType": "YulTypedName",
														"src": "26201:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26213:6:9",
														"nodeType": "YulTypedName",
														"src": "26213:6:9",
														"type": ""
													}
												],
												"src": "26144:349:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806342842e0e11610095578063a22cb46511610064578063a22cb46514610293578063b88d4fde146102af578063c87b56dd146102cb578063e985e9c5146102fb576100f3565b806342842e0e146101f95780636352211e1461021557806370a082311461024557806395d89b4114610275576100f3565b8063095ea7b3116100d1578063095ea7b314610175578063162790551461019157806323b872dd146101c157806340c10f19146101dd576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c919061176f565b61032b565b60405161011e91906117b4565b60405180910390f35b61012f6103bc565b60405161013c919061183d565b60405180910390f35b61015f600480360381019061015a9190611890565b61044b565b60405161016c91906118fa565b60405180910390f35b61018f600480360381019061018a919061193d565b610522565b005b6101ab60048036038101906101a6919061197b565b61073b565b6040516101b891906117b4565b60405180910390f35b6101db60048036038101906101d691906119a6565b61074c565b005b6101f760048036038101906101f2919061193d565b6107a5565b005b610213600480360381019061020e91906119a6565b6109b3565b005b61022f600480360381019061022a9190611890565b6109d2565b60405161023c91906118fa565b60405180910390f35b61025f600480360381019061025a919061197b565b610a0b565b60405161026c9190611a05565b60405180910390f35b61027d610a51565b60405161028a919061183d565b60405180910390f35b6102ad60048036038101906102a89190611a48565b610ae1565b005b6102c960048036038101906102c49190611bb2565b610c4c565b005b6102e560048036038101906102e09190611890565b610ca7565b6040516102f2919061183d565b60405180910390f35b61031560048036038101906103109190611c32565b610dd7565b60405161032291906117b4565b60405180910390f35b5f6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103b55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60605f80546103ca90611c9d565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690611c9d565b80156104415780601f1061041857610100808354040283529160200191610441565b820191905f5260205f20905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b5f8073ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190611d3d565b60405180910390fd5b60055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f61052c826109d2565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390611dcb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610631575060055f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806106ed575060065f60035f8581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390611e59565b60405180910390fd5b6107368383610e65565b505050565b5f80823b90505f8111915050919050565b6107563382611075565b610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90611ee7565b60405180910390fd5b6107a083838361121c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a90611f4f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890611fb7565b60405180910390fd5b8160035f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461094d9190612002565b92505081905550808273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6109cd83838360405180602001604052805f815250610c4c565b505050565b5f60035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610a6090611c9d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8c90611c9d565b8015610ad75780601f10610aae57610100808354040283529160200191610ad7565b820191905f5260205f20905b815481529060010190602001808311610aba57829003601f168201915b5050505050905090565b5f3390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a9061207f565b60405180910390fd5b8160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610c3f91906117b4565b60405180910390a3505050565b610c563383611075565b610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90611ee7565b60405180910390fd5b610ca1848484846114e0565b50505050565b60605f73ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e9061210d565b60405180910390fd5b60028054610d5490611c9d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8090611c9d565b8015610dcb5780601f10610da257610100808354040283529160200191610dcb565b820191905f5260205f20905b815481529060010190602001808311610dae57829003601f168201915b50505050509050919050565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f80575060065f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb690612175565b60405180910390fd5b8160055f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661102f836109d2565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f61107f8261153c565b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612203565b60405180910390fd5b5f60035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061118757508373ffffffffffffffffffffffffffffffffffffffff1660055f8581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611213575060065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b91505092915050565b60035f8281526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b190612291565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f9061231f565b60405180910390fd5b6113323382611075565b61133a575f80fd5b8160035f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546113d69190612002565b92505081905550600160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461142a919061233d565b925050819055505f60055f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6114eb84848461121c565b6114f7848484846115a4565b611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d906123e0565b60405180910390fd5b50505050565b5f8073ffffffffffffffffffffffffffffffffffffffff1660035f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b5f6115ae8461073b565b156116fc578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b81526004016115f29493929190612450565b6020604051808303815f875af192505050801561162d57506040513d601f19601f8201168201806040525081019061162a91906124ae565b60015b6116ac573d805f811461165b576040519150601f19603f3d011682016040523d82523d5f602084013e611660565b606091505b505f8151036116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169b906123e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611701565b600190505b949350505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61174e8161171a565b8114611758575f80fd5b50565b5f8135905061176981611745565b92915050565b5f6020828403121561178457611783611712565b5b5f6117918482850161175b565b91505092915050565b5f8115159050919050565b6117ae8161179a565b82525050565b5f6020820190506117c75f8301846117a5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61180f826117cd565b61181981856117d7565b93506118298185602086016117e7565b611832816117f5565b840191505092915050565b5f6020820190508181035f8301526118558184611805565b905092915050565b5f819050919050565b61186f8161185d565b8114611879575f80fd5b50565b5f8135905061188a81611866565b92915050565b5f602082840312156118a5576118a4611712565b5b5f6118b28482850161187c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118e4826118bb565b9050919050565b6118f4816118da565b82525050565b5f60208201905061190d5f8301846118eb565b92915050565b61191c816118da565b8114611926575f80fd5b50565b5f8135905061193781611913565b92915050565b5f806040838503121561195357611952611712565b5b5f61196085828601611929565b92505060206119718582860161187c565b9150509250929050565b5f602082840312156119905761198f611712565b5b5f61199d84828501611929565b91505092915050565b5f805f606084860312156119bd576119bc611712565b5b5f6119ca86828701611929565b93505060206119db86828701611929565b92505060406119ec8682870161187c565b9150509250925092565b6119ff8161185d565b82525050565b5f602082019050611a185f8301846119f6565b92915050565b611a278161179a565b8114611a31575f80fd5b50565b5f81359050611a4281611a1e565b92915050565b5f8060408385031215611a5e57611a5d611712565b5b5f611a6b85828601611929565b9250506020611a7c85828601611a34565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ac4826117f5565b810181811067ffffffffffffffff82111715611ae357611ae2611a8e565b5b80604052505050565b5f611af5611709565b9050611b018282611abb565b919050565b5f67ffffffffffffffff821115611b2057611b1f611a8e565b5b611b29826117f5565b9050602081019050919050565b828183375f83830152505050565b5f611b56611b5184611b06565b611aec565b905082815260208101848484011115611b7257611b71611a8a565b5b611b7d848285611b36565b509392505050565b5f82601f830112611b9957611b98611a86565b5b8135611ba9848260208601611b44565b91505092915050565b5f805f8060808587031215611bca57611bc9611712565b5b5f611bd787828801611929565b9450506020611be887828801611929565b9350506040611bf98782880161187c565b925050606085013567ffffffffffffffff811115611c1a57611c19611716565b5b611c2687828801611b85565b91505092959194509250565b5f8060408385031215611c4857611c47611712565b5b5f611c5585828601611929565b9250506020611c6685828601611929565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611cb457607f821691505b602082108103611cc757611cc6611c70565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f611d27602c836117d7565b9150611d3282611ccd565b604082019050919050565b5f6020820190508181035f830152611d5481611d1b565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e655f8201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b5f611db56021836117d7565b9150611dc082611d5b565b604082019050919050565b5f6020820190508181035f830152611de281611da9565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f775f8201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b5f611e436038836117d7565b9150611e4e82611de9565b604082019050919050565b5f6020820190508181035f830152611e7081611e37565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f5f8201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b5f611ed16031836117d7565b9150611edc82611e77565b604082019050919050565b5f6020820190508181035f830152611efe81611ec5565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f20616464726573735f82015250565b5f611f396020836117d7565b9150611f4482611f05565b602082019050919050565b5f6020820190508181035f830152611f6681611f2d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e746564000000005f82015250565b5f611fa1601c836117d7565b9150611fac82611f6d565b602082019050919050565b5f6020820190508181035f830152611fce81611f95565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61200c8261185d565b91506120178361185d565b925082820190508082111561202f5761202e611fd5565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c6572000000000000005f82015250565b5f6120696019836117d7565b915061207482612035565b602082019050919050565b5f6020820190508181035f8301526120968161205d565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f5f8201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b5f6120f7602f836117d7565b91506121028261209d565b604082019050919050565b5f6020820190508181035f830152612124816120eb565b9050919050565b7f4552433732313a2063616c6c6572206e6f7420746f6b656e206f776e657200005f82015250565b5f61215f601e836117d7565b915061216a8261212b565b602082019050919050565b5f6020820190508181035f83015261218c81612153565b9050919050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e65785f8201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b5f6121ed602c836117d7565b91506121f882612193565b604082019050919050565b5f6020820190508181035f83015261221a816121e1565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f7272656374205f8201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b5f61227b6025836117d7565b915061228682612221565b604082019050919050565b5f6020820190508181035f8301526122a88161226f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f6123096024836117d7565b9150612314826122af565b604082019050919050565b5f6020820190508181035f830152612336816122fd565b9050919050565b5f6123478261185d565b91506123528361185d565b925082820390508181111561236a57612369611fd5565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e2045524337323152655f8201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b5f6123ca6032836117d7565b91506123d582612370565b604082019050919050565b5f6020820190508181035f8301526123f7816123be565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612422826123fe565b61242c8185612408565b935061243c8185602086016117e7565b612445816117f5565b840191505092915050565b5f6080820190506124635f8301876118eb565b61247060208301866118eb565b61247d60408301856119f6565b818103606083015261248f8184612418565b905095945050505050565b5f815190506124a881611745565b92915050565b5f602082840312156124c3576124c2611712565b5b5f6124d08482850161249a565b9150509291505056fea2646970667358221220df9ee4b505f80687ccda3d950ed420915a68244da0d2904dc638169ceb33434864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2FB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x275 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x18FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x18FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1BB2 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x385 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3B5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3CA SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F6 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x441 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x418 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x441 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x424 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x52C DUP3 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x631 JUMPI POP PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6ED JUMPI POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x736 DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x756 CALLER DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A0 DUP4 DUP4 DUP4 PUSH2 0x121C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80A SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x9CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA60 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA8C SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3F SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xC56 CALLER DUP4 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0xC95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8C SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3E SWAP1 PUSH2 0x210D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xD54 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD80 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF80 JUMPI POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102F DUP4 PUSH2 0x9D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107F DUP3 PUSH2 0x153C JUMP JUMPDEST PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1187 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131F SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 CALLER DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x133A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x233D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x14EB DUP5 DUP5 DUP5 PUSH2 0x121C JUMP JUMPDEST PUSH2 0x14F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15AE DUP5 PUSH2 0x73B JUMP JUMPDEST ISZERO PUSH2 0x16FC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x162D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162A SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16AC JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x16A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169B SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174E DUP2 PUSH2 0x171A JUMP JUMPDEST DUP2 EQ PUSH2 0x1758 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1769 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1784 JUMPI PUSH2 0x1783 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1791 DUP5 DUP3 DUP6 ADD PUSH2 0x175B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AE DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180F DUP3 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x1819 DUP2 DUP6 PUSH2 0x17D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1829 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x1832 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186F DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x1879 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188A DUP2 PUSH2 0x1866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH2 0x18A4 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B2 DUP5 DUP3 DUP6 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18E4 DUP3 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F4 DUP2 PUSH2 0x18DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190D PUSH0 DUP4 ADD DUP5 PUSH2 0x18EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191C DUP2 PUSH2 0x18DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1937 DUP2 PUSH2 0x1913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1971 DUP6 DUP3 DUP7 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1990 JUMPI PUSH2 0x198F PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x199D DUP5 DUP3 DUP6 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BD JUMPI PUSH2 0x19BC PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CA DUP7 DUP3 DUP8 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DB DUP7 DUP3 DUP8 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19EC DUP7 DUP3 DUP8 ADD PUSH2 0x187C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A18 PUSH0 DUP4 ADD DUP5 PUSH2 0x19F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A27 DUP2 PUSH2 0x179A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A42 DUP2 PUSH2 0x1A1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6B DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7C DUP6 DUP3 DUP7 ADD PUSH2 0x1A34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1AC4 DUP3 PUSH2 0x17F5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AE3 JUMPI PUSH2 0x1AE2 PUSH2 0x1A8E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF5 PUSH2 0x1709 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 DUP3 DUP3 PUSH2 0x1ABB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x1A8E JUMP JUMPDEST JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x17F5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B56 PUSH2 0x1B51 DUP5 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST PUSH2 0x1B7D DUP5 DUP3 DUP6 PUSH2 0x1B36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B99 JUMPI PUSH2 0x1B98 PUSH2 0x1A86 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BA9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD7 DUP8 DUP3 DUP9 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BE8 DUP8 DUP3 DUP9 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BF9 DUP8 DUP3 DUP9 ADD PUSH2 0x187C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x1716 JUMP JUMPDEST JUMPDEST PUSH2 0x1C26 DUP8 DUP3 DUP9 ADD PUSH2 0x1B85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C55 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C66 DUP6 DUP3 DUP7 ADD PUSH2 0x1929 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CC7 JUMPI PUSH2 0x1CC6 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D27 PUSH1 0x2C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D32 DUP3 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB5 PUSH1 0x21 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC0 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE2 DUP2 PUSH2 0x1DA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E43 PUSH1 0x38 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4E DUP3 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E70 DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED1 PUSH1 0x31 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDC DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFE DUP2 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F39 PUSH1 0x20 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F66 DUP2 PUSH2 0x1F2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA1 PUSH1 0x1C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAC DUP3 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCE DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200C DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 POP PUSH2 0x2017 DUP4 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 PUSH1 0x19 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2074 DUP3 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2096 DUP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20F7 PUSH1 0x2F DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2102 DUP3 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2124 DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206E6F7420746F6B656E206F776E65720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215F PUSH1 0x1E DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218C DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21ED PUSH1 0x2C DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F8 DUP3 PUSH2 0x2193 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x221A DUP2 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x227B PUSH1 0x25 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP3 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A8 DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2309 PUSH1 0x24 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2314 DUP3 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2336 DUP2 PUSH2 0x22FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2347 DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 POP PUSH2 0x2352 DUP4 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x236A JUMPI PUSH2 0x2369 PUSH2 0x1FD5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23CA PUSH1 0x32 DUP4 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D5 DUP3 PUSH2 0x2370 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F7 DUP2 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2422 DUP3 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x242C DUP2 DUP6 PUSH2 0x2408 JUMP JUMPDEST SWAP4 POP PUSH2 0x243C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x2445 DUP2 PUSH2 0x17F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2463 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x2470 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x247D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x248F DUP2 DUP5 PUSH2 0x2418 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A8 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C3 JUMPI PUSH2 0x24C2 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D0 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP15 0xE4 0xB5 SDIV 0xF8 MOD DUP8 0xCC 0xDA RETURNDATASIZE SWAP6 0xE 0xD4 KECCAK256 SWAP2 GAS PUSH9 0x244DA0D2904DC63816 SWAP13 0xEB CALLER NUMBER BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "340:10791:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1807:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3994:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3454:479;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10961:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2684:353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5314:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3275:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3096;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1970:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4347:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5542:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2139:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4738:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1412:329;1480:4;1530:10;1515:25;;:11;:25;;;;:100;;;;1605:10;1590:25;;:11;:25;;;;1515:100;:175;;;;1680:10;1665:25;;:11;:25;;;;1515:175;1496:194;;1412:329;;;:::o;1807:99::-;1844:13;1894:5;1887:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:99;:::o;3994:286::-;4053:7;4141:1;4115:28;;:7;:16;4123:7;4115:16;;;;;;;;;;;;;;;;;;;;;:28;;;4072:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;4249:15;:24;4265:7;4249:24;;;;;;;;;;;;;;;;;;;;;4242:31;;3994:286;;;:::o;3454:479::-;3517:13;3533:16;3541:7;3533;:16::i;:::-;3517:32;;3583:2;3576:9;;:5;:9;;;3559:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3689:5;3677:17;;:10;:17;;;:72;;;;3725:15;:24;3741:7;3725:24;;;;;;;;;;;;;;;;;;;;;3711:38;;:10;:38;;;3677:72;:136;;;;3765:18;:36;3784:7;:16;3792:7;3784:16;;;;;;;;;;;;;;;;;;;;;3765:36;;;;;;;;;;;;;;;:48;3802:10;3765:48;;;;;;;;;;;;;;;;;;;;;;;;;3677:136;3634:261;;;;;;;;;;;;:::i;:::-;;;;;;;;;3905:21;3914:2;3918:7;3905:8;:21::i;:::-;3507:426;3454:479;;:::o;10961:168::-;11019:4;11035:12;11088:7;11076:20;11068:28;;11121:1;11114:4;:8;11107:15;;;10961:168;;;:::o;4985:263::-;5088:39;5107:10;5119:7;5088:18;:39::i;:::-;5067:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;5213:28;5223:4;5229:2;5233:7;5213:9;:28::i;:::-;4985:263;;;:::o;2684:353::-;2774:1;2762:14;;:2;:14;;;2744:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2869:1;2841:30;;:7;:16;2849:7;2841:16;;;;;;;;;;;;;;;;;;;;;:30;;;2823:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2952:2;2933:7;:16;2941:7;2933:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;2981:1;2964:9;:13;2974:2;2964:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;3022:7;3018:2;2997:33;;3014:1;2997:33;;;;;;;;;;;;2684:353;;:::o;5314:162::-;5430:39;5447:4;5453:2;5457:7;5430:39;;;;;;;;;;;;:16;:39::i;:::-;5314:162;;;:::o;3275:122::-;3330:7;3374;:16;3382:7;3374:16;;;;;;;;;;;;;;;;;;;;;3367:23;;3275:122;;;:::o;3096:::-;3151:7;3195:9;:16;3205:5;3195:16;;;;;;;;;;;;;;;;3188:23;;3096:122;;;:::o;1970:103::-;2009:13;2059:7;2052:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:103;:::o;4347:325::-;4424:14;4441:10;4424:27;;4486:8;4478:16;;:6;:16;;;4461:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4600:8;4561:18;:26;4580:6;4561:26;;;;;;;;;;;;;;;:36;4588:8;4561:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;4646:8;4623:42;;4638:6;4623:42;;;4656:8;4623:42;;;;;;:::i;:::-;;;;;;;;4414:258;4347:325;;:::o;5542:335::-;5707:39;5726:10;5738:7;5707:18;:39::i;:::-;5686:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;5831:39;5845:4;5851:2;5855:7;5864:5;5831:13;:39::i;:::-;5542:335;;;;:::o;2139:310::-;2195:13;2289:1;2263:28;;:7;:16;2271:7;2263:16;;;;;;;;;;;;;;;;;;;;;:28;;;2220:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;2433:8;2426:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:310;;;:::o;4738:185::-;4840:4;4881:18;:25;4900:5;4881:25;;;;;;;;;;;;;;;:35;4907:8;4881:35;;;;;;;;;;;;;;;;;;;;;;;;;4874:42;;4738:185;;;;:::o;9142:313::-;9260:10;9242:28;;:7;:16;9250:7;9242:16;;;;;;;;;;;;;;;;;;;;;:28;;;:78;;;;9272:18;:36;9291:7;:16;9299:7;9291:16;;;;;;;;;;;;;;;;;;;;;9272:36;;;;;;;;;;;;;;;:48;9309:10;9272:48;;;;;;;;;;;;;;;;;;;;;;;;;9242:78;9234:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;9392:2;9365:15;:24;9381:7;9365:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;9440:7;9436:2;9409:39;;9418:16;9426:7;9418;:16::i;:::-;9409:39;;;;;;;;;;;;9142:313;;:::o;7668:485::-;7775:4;7834:16;7842:7;7834;:16::i;:::-;7791:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;7949:20;7972:7;:16;7980:7;7972:16;;;;;;;;;;;;;;;;;;;;;7949:39;;8021:7;8005:23;;:12;:23;;;:79;;;;8077:7;8049:35;;:15;:24;8065:7;8049:24;;;;;;;;;;;;;;;;;;;;;:35;;;8005:79;:141;;;;8105:18;:32;8124:12;8105:32;;;;;;;;;;;;;;;:41;8138:7;8105:41;;;;;;;;;;;;;;;;;;;;;;;;;8005:141;7998:148;;;7668:485;;;;:::o;8477:554::-;8607:7;:16;8615:7;8607:16;;;;;;;;;;;;;;;;;;;;;8599:24;;:4;:24;;;8558:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;8726:1;8714:14;;:2;:14;;;8697:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8806:39;8825:10;8837:7;8806:18;:39::i;:::-;8798:48;;;;;;8875:2;8856:7;:16;8864:7;8856:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;8904:1;8887:9;:13;8897:2;8887:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;8934:1;8915:9;:15;8925:4;8915:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;8980:1;8945:15;:24;8961:7;8945:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9016:7;9012:2;8997:27;;9006:4;8997:27;;;;;;;;;;;;8477:554;;;:::o;6739:333::-;6882:28;6892:4;6898:2;6902:7;6882:9;:28::i;:::-;6941:48;6964:4;6970:2;6974:7;6983:5;6941:22;:48::i;:::-;6920:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;6739:333;;;;:::o;7375:135::-;7432:4;7501:1;7473:30;;:7;:16;7481:7;7473:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7466:37;;7375:135;;;:::o;10008:947::-;10158:4;10178:14;10189:2;10178:10;:14::i;:::-;10174:775;;;10244:2;10228:36;;;10286:10;10318:4;10344:7;10373:5;10228:168;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10208:689;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10592:1;10575:6;:13;:18;10571:312;;10617:106;;;;;;;;;;:::i;:::-;;;;;;;;10571:312;10835:6;10829:13;10820:6;10816:2;10812:15;10805:38;10208:689;10468:41;;;10458:51;;;:6;:51;;;;10451:58;;;;;10174:775;10934:4;10927:11;;10008:947;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:329::-;4842:6;4891:2;4879:9;4870:7;4866:23;4862:32;4859:119;;;4897:79;;:::i;:::-;4859:119;5017:1;5042:53;5087:7;5078:6;5067:9;5063:22;5042:53;:::i;:::-;5032:63;;4988:117;4783:329;;;;:::o;5118:619::-;5195:6;5203;5211;5260:2;5248:9;5239:7;5235:23;5231:32;5228:119;;;5266:79;;:::i;:::-;5228:119;5386:1;5411:53;5456:7;5447:6;5436:9;5432:22;5411:53;:::i;:::-;5401:63;;5357:117;5513:2;5539:53;5584:7;5575:6;5564:9;5560:22;5539:53;:::i;:::-;5529:63;;5484:118;5641:2;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5612:118;5118:619;;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:231::-;11018:34;11014:1;11006:6;11002:14;10995:58;11087:14;11082:2;11074:6;11070:15;11063:39;10878:231;:::o;11115:366::-;11257:3;11278:67;11342:2;11337:3;11278:67;:::i;:::-;11271:74;;11354:93;11443:3;11354:93;:::i;:::-;11472:2;11467:3;11463:12;11456:19;;11115:366;;;:::o;11487:419::-;11653:4;11691:2;11680:9;11676:18;11668:26;;11740:9;11734:4;11730:20;11726:1;11715:9;11711:17;11704:47;11768:131;11894:4;11768:131;:::i;:::-;11760:139;;11487:419;;;:::o;11912:220::-;12052:34;12048:1;12040:6;12036:14;12029:58;12121:3;12116:2;12108:6;12104:15;12097:28;11912:220;:::o;12138:366::-;12280:3;12301:67;12365:2;12360:3;12301:67;:::i;:::-;12294:74;;12377:93;12466:3;12377:93;:::i;:::-;12495:2;12490:3;12486:12;12479:19;;12138:366;;;:::o;12510:419::-;12676:4;12714:2;12703:9;12699:18;12691:26;;12763:9;12757:4;12753:20;12749:1;12738:9;12734:17;12727:47;12791:131;12917:4;12791:131;:::i;:::-;12783:139;;12510:419;;;:::o;12935:243::-;13075:34;13071:1;13063:6;13059:14;13052:58;13144:26;13139:2;13131:6;13127:15;13120:51;12935:243;:::o;13184:366::-;13326:3;13347:67;13411:2;13406:3;13347:67;:::i;:::-;13340:74;;13423:93;13512:3;13423:93;:::i;:::-;13541:2;13536:3;13532:12;13525:19;;13184:366;;;:::o;13556:419::-;13722:4;13760:2;13749:9;13745:18;13737:26;;13809:9;13803:4;13799:20;13795:1;13784:9;13780:17;13773:47;13837:131;13963:4;13837:131;:::i;:::-;13829:139;;13556:419;;;:::o;13981:236::-;14121:34;14117:1;14109:6;14105:14;14098:58;14190:19;14185:2;14177:6;14173:15;14166:44;13981:236;:::o;14223:366::-;14365:3;14386:67;14450:2;14445:3;14386:67;:::i;:::-;14379:74;;14462:93;14551:3;14462:93;:::i;:::-;14580:2;14575:3;14571:12;14564:19;;14223:366;;;:::o;14595:419::-;14761:4;14799:2;14788:9;14784:18;14776:26;;14848:9;14842:4;14838:20;14834:1;14823:9;14819:17;14812:47;14876:131;15002:4;14876:131;:::i;:::-;14868:139;;14595:419;;;:::o;15020:182::-;15160:34;15156:1;15148:6;15144:14;15137:58;15020:182;:::o;15208:366::-;15350:3;15371:67;15435:2;15430:3;15371:67;:::i;:::-;15364:74;;15447:93;15536:3;15447:93;:::i;:::-;15565:2;15560:3;15556:12;15549:19;;15208:366;;;:::o;15580:419::-;15746:4;15784:2;15773:9;15769:18;15761:26;;15833:9;15827:4;15823:20;15819:1;15808:9;15804:17;15797:47;15861:131;15987:4;15861:131;:::i;:::-;15853:139;;15580:419;;;:::o;16005:178::-;16145:30;16141:1;16133:6;16129:14;16122:54;16005:178;:::o;16189:366::-;16331:3;16352:67;16416:2;16411:3;16352:67;:::i;:::-;16345:74;;16428:93;16517:3;16428:93;:::i;:::-;16546:2;16541:3;16537:12;16530:19;;16189:366;;;:::o;16561:419::-;16727:4;16765:2;16754:9;16750:18;16742:26;;16814:9;16808:4;16804:20;16800:1;16789:9;16785:17;16778:47;16842:131;16968:4;16842:131;:::i;:::-;16834:139;;16561:419;;;:::o;16986:180::-;17034:77;17031:1;17024:88;17131:4;17128:1;17121:15;17155:4;17152:1;17145:15;17172:191;17212:3;17231:20;17249:1;17231:20;:::i;:::-;17226:25;;17265:20;17283:1;17265:20;:::i;:::-;17260:25;;17308:1;17305;17301:9;17294:16;;17329:3;17326:1;17323:10;17320:36;;;17336:18;;:::i;:::-;17320:36;17172:191;;;;:::o;17369:175::-;17509:27;17505:1;17497:6;17493:14;17486:51;17369:175;:::o;17550:366::-;17692:3;17713:67;17777:2;17772:3;17713:67;:::i;:::-;17706:74;;17789:93;17878:3;17789:93;:::i;:::-;17907:2;17902:3;17898:12;17891:19;;17550:366;;;:::o;17922:419::-;18088:4;18126:2;18115:9;18111:18;18103:26;;18175:9;18169:4;18165:20;18161:1;18150:9;18146:17;18139:47;18203:131;18329:4;18203:131;:::i;:::-;18195:139;;17922:419;;;:::o;18347:234::-;18487:34;18483:1;18475:6;18471:14;18464:58;18556:17;18551:2;18543:6;18539:15;18532:42;18347:234;:::o;18587:366::-;18729:3;18750:67;18814:2;18809:3;18750:67;:::i;:::-;18743:74;;18826:93;18915:3;18826:93;:::i;:::-;18944:2;18939:3;18935:12;18928:19;;18587:366;;;:::o;18959:419::-;19125:4;19163:2;19152:9;19148:18;19140:26;;19212:9;19206:4;19202:20;19198:1;19187:9;19183:17;19176:47;19240:131;19366:4;19240:131;:::i;:::-;19232:139;;18959:419;;;:::o;19384:180::-;19524:32;19520:1;19512:6;19508:14;19501:56;19384:180;:::o;19570:366::-;19712:3;19733:67;19797:2;19792:3;19733:67;:::i;:::-;19726:74;;19809:93;19898:3;19809:93;:::i;:::-;19927:2;19922:3;19918:12;19911:19;;19570:366;;;:::o;19942:419::-;20108:4;20146:2;20135:9;20131:18;20123:26;;20195:9;20189:4;20185:20;20181:1;20170:9;20166:17;20159:47;20223:131;20349:4;20223:131;:::i;:::-;20215:139;;19942:419;;;:::o;20367:231::-;20507:34;20503:1;20495:6;20491:14;20484:58;20576:14;20571:2;20563:6;20559:15;20552:39;20367:231;:::o;20604:366::-;20746:3;20767:67;20831:2;20826:3;20767:67;:::i;:::-;20760:74;;20843:93;20932:3;20843:93;:::i;:::-;20961:2;20956:3;20952:12;20945:19;;20604:366;;;:::o;20976:419::-;21142:4;21180:2;21169:9;21165:18;21157:26;;21229:9;21223:4;21219:20;21215:1;21204:9;21200:17;21193:47;21257:131;21383:4;21257:131;:::i;:::-;21249:139;;20976:419;;;:::o;21401:224::-;21541:34;21537:1;21529:6;21525:14;21518:58;21610:7;21605:2;21597:6;21593:15;21586:32;21401:224;:::o;21631:366::-;21773:3;21794:67;21858:2;21853:3;21794:67;:::i;:::-;21787:74;;21870:93;21959:3;21870:93;:::i;:::-;21988:2;21983:3;21979:12;21972:19;;21631:366;;;:::o;22003:419::-;22169:4;22207:2;22196:9;22192:18;22184:26;;22256:9;22250:4;22246:20;22242:1;22231:9;22227:17;22220:47;22284:131;22410:4;22284:131;:::i;:::-;22276:139;;22003:419;;;:::o;22428:223::-;22568:34;22564:1;22556:6;22552:14;22545:58;22637:6;22632:2;22624:6;22620:15;22613:31;22428:223;:::o;22657:366::-;22799:3;22820:67;22884:2;22879:3;22820:67;:::i;:::-;22813:74;;22896:93;22985:3;22896:93;:::i;:::-;23014:2;23009:3;23005:12;22998:19;;22657:366;;;:::o;23029:419::-;23195:4;23233:2;23222:9;23218:18;23210:26;;23282:9;23276:4;23272:20;23268:1;23257:9;23253:17;23246:47;23310:131;23436:4;23310:131;:::i;:::-;23302:139;;23029:419;;;:::o;23454:194::-;23494:4;23514:20;23532:1;23514:20;:::i;:::-;23509:25;;23548:20;23566:1;23548:20;:::i;:::-;23543:25;;23592:1;23589;23585:9;23577:17;;23616:1;23610:4;23607:11;23604:37;;;23621:18;;:::i;:::-;23604:37;23454:194;;;;:::o;23654:237::-;23794:34;23790:1;23782:6;23778:14;23771:58;23863:20;23858:2;23850:6;23846:15;23839:45;23654:237;:::o;23897:366::-;24039:3;24060:67;24124:2;24119:3;24060:67;:::i;:::-;24053:74;;24136:93;24225:3;24136:93;:::i;:::-;24254:2;24249:3;24245:12;24238:19;;23897:366;;;:::o;24269:419::-;24435:4;24473:2;24462:9;24458:18;24450:26;;24522:9;24516:4;24512:20;24508:1;24497:9;24493:17;24486:47;24550:131;24676:4;24550:131;:::i;:::-;24542:139;;24269:419;;;:::o;24694:98::-;24745:6;24779:5;24773:12;24763:22;;24694:98;;;:::o;24798:168::-;24881:11;24915:6;24910:3;24903:19;24955:4;24950:3;24946:14;24931:29;;24798:168;;;;:::o;24972:373::-;25058:3;25086:38;25118:5;25086:38;:::i;:::-;25140:70;25203:6;25198:3;25140:70;:::i;:::-;25133:77;;25219:65;25277:6;25272:3;25265:4;25258:5;25254:16;25219:65;:::i;:::-;25309:29;25331:6;25309:29;:::i;:::-;25304:3;25300:39;25293:46;;25062:283;24972:373;;;;:::o;25351:640::-;25546:4;25584:3;25573:9;25569:19;25561:27;;25598:71;25666:1;25655:9;25651:17;25642:6;25598:71;:::i;:::-;25679:72;25747:2;25736:9;25732:18;25723:6;25679:72;:::i;:::-;25761;25829:2;25818:9;25814:18;25805:6;25761:72;:::i;:::-;25880:9;25874:4;25870:20;25865:2;25854:9;25850:18;25843:48;25908:76;25979:4;25970:6;25908:76;:::i;:::-;25900:84;;25351:640;;;;;;;:::o;25997:141::-;26053:5;26084:6;26078:13;26069:22;;26100:32;26126:5;26100:32;:::i;:::-;25997:141;;;;:::o;26144:349::-;26213:6;26262:2;26250:9;26241:7;26237:23;26233:32;26230:119;;;26268:79;;:::i;:::-;26230:119;26388:1;26413:63;26468:7;26459:6;26448:9;26444:22;26413:63;:::i;:::-;26403:73;;26359:127;26144:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1897400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"getApproved(uint256)": "5166",
								"isApprovedForAll(address,address)": "infinite",
								"isContract(address)": "3310",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2897",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "736",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2265",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1131,
									"end": 1345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1277,
									"end": 1282,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1274,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1302,
									"end": 1309,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1292,
									"end": 1309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1292,
									"end": 1309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1330,
									"end": 1338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1327,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1319,
									"end": 1338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1338,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1345,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2688,
									"end": 2694,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2696,
									"end": 2702,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2704,
									"end": 2710,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2755,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2741,
									"end": 2750,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2739,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2728,
									"end": 2751,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2724,
									"end": 2756,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2840,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2721,
									"end": 2840,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2759,
									"end": 2838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2759,
									"end": 2838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2838,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2759,
									"end": 2838,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2840,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2721,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2900,
									"end": 2901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2889,
									"end": 2898,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2902,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2879,
									"end": 2903,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 2948,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2922,
									"end": 2928,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2919,
									"end": 2949,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2916,
									"end": 3033,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2916,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2916,
									"end": 3033,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2952,
									"end": 3031,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2952,
									"end": 3031,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2952,
									"end": 3031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2952,
									"end": 3031,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2952,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2916,
									"end": 3033,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2916,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3057,
									"end": 3131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3123,
									"end": 3130,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3114,
									"end": 3120,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3103,
									"end": 3112,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3099,
									"end": 3121,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3057,
									"end": 3131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3057,
									"end": 3131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3057,
									"end": 3131,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3057,
									"end": 3131,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3047,
									"end": 3131,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3047,
									"end": 3131,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2850,
									"end": 3141,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3201,
									"end": 3203,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3199,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3186,
									"end": 3204,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3180,
									"end": 3205,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3232,
									"end": 3250,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3224,
									"end": 3230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3221,
									"end": 3251,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3218,
									"end": 3335,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3218,
									"end": 3335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3218,
									"end": 3335,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 3333,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 3333,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3254,
									"end": 3333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 3333,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 3333,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3218,
									"end": 3335,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3218,
									"end": 3335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3425,
									"end": 3432,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3422,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3405,
									"end": 3414,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3423,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3359,
									"end": 3433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3433,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3359,
									"end": 3433,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3433,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3433,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3151,
									"end": 3443,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3503,
									"end": 3505,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3492,
									"end": 3501,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3488,
									"end": 3506,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3482,
									"end": 3507,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3534,
									"end": 3552,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3526,
									"end": 3532,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3523,
									"end": 3553,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3520,
									"end": 3637,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3520,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3520,
									"end": 3637,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3556,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3556,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3556,
									"end": 3635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3556,
									"end": 3635,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3556,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3520,
									"end": 3637,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3520,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3661,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3727,
									"end": 3734,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3718,
									"end": 3724,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3707,
									"end": 3716,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3703,
									"end": 3725,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3661,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3661,
									"end": 3735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3661,
									"end": 3735,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3661,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3735,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3651,
									"end": 3735,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3453,
									"end": 3745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 3752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3857,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3758,
									"end": 3857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3810,
									"end": 3816,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3844,
									"end": 3849,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3828,
									"end": 3850,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3828,
									"end": 3850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3857,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3857,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3857,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3863,
									"end": 4043,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3863,
									"end": 4043,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3911,
									"end": 3988,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3989,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4008,
									"end": 4012,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 4005,
									"end": 4006,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3998,
									"end": 4013,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4029,
									"end": 4030,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4037,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4369,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4049,
									"end": 4369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4093,
									"end": 4099,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4130,
									"end": 4131,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4124,
									"end": 4128,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4120,
									"end": 4132,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4110,
									"end": 4132,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4110,
									"end": 4132,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4177,
									"end": 4178,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4171,
									"end": 4175,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4167,
									"end": 4179,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4198,
									"end": 4216,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4188,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4188,
									"end": 4269,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4254,
									"end": 4258,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4246,
									"end": 4252,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4242,
									"end": 4259,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4232,
									"end": 4259,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4232,
									"end": 4259,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4188,
									"end": 4269,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4188,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4316,
									"end": 4318,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4314,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4305,
									"end": 4319,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4285,
									"end": 4303,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4282,
									"end": 4320,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 4353,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4335,
									"end": 4353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 4353,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4335,
									"end": 4353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4100,
									"end": 4369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4369,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4369,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4516,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4375,
									"end": 4516,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4424,
									"end": 4428,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4447,
									"end": 4450,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4439,
									"end": 4450,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4439,
									"end": 4450,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4470,
									"end": 4473,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4467,
									"end": 4468,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4460,
									"end": 4474,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4508,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4501,
									"end": 4502,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4491,
									"end": 4509,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4509,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4509,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4516,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4615,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4522,
									"end": 4615,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4559,
									"end": 4565,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4606,
									"end": 4608,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4601,
									"end": 4603,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4594,
									"end": 4599,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4590,
									"end": 4604,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4586,
									"end": 4609,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4576,
									"end": 4609,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4576,
									"end": 4609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4615,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4615,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4615,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4522,
									"end": 4615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4665,
									"end": 4673,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4715,
									"end": 4720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4709,
									"end": 4713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4705,
									"end": 4721,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4721,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4721,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4728,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4809,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4853,
									"end": 4854,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4841,
									"end": 4851,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4855,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4876,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4906,
									"end": 4972,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4895,
									"end": 4904,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4876,
									"end": 4973,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4876,
									"end": 4973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4876,
									"end": 4973,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4876,
									"end": 4973,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 5024,
									"end": 5032,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5013,
									"end": 5022,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4994,
									"end": 5033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5033,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 4994,
									"end": 5033,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4982,
									"end": 5033,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4982,
									"end": 5033,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5066,
									"end": 5070,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5062,
									"end": 5071,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5055,
									"end": 5060,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5051,
									"end": 5072,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5042,
									"end": 5072,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5042,
									"end": 5072,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5115,
									"end": 5119,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5105,
									"end": 5113,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5120,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5094,
									"end": 5099,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5091,
									"end": 5121,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5081,
									"end": 5121,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5081,
									"end": 5121,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4810,
									"end": 5127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4810,
									"end": 5127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4734,
									"end": 5127,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5210,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5133,
									"end": 5210,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5199,
									"end": 5204,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5188,
									"end": 5204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5188,
									"end": 5204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5210,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5210,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5210,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5133,
									"end": 5210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5216,
									"end": 5276,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5216,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5244,
									"end": 5247,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5265,
									"end": 5270,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5258,
									"end": 5270,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5258,
									"end": 5270,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5216,
									"end": 5276,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5216,
									"end": 5276,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5216,
									"end": 5276,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5216,
									"end": 5276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5424,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5282,
									"end": 5424,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5332,
									"end": 5341,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5365,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5383,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5392,
									"end": 5416,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5410,
									"end": 5415,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5416,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5392,
									"end": 5416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5392,
									"end": 5416,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5392,
									"end": 5416,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5383,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5383,
									"end": 5417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5383,
									"end": 5417,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5383,
									"end": 5417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5365,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5365,
									"end": 5418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5365,
									"end": 5418,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5365,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5352,
									"end": 5418,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5352,
									"end": 5418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5424,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5424,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5424,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5424,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5430,
									"end": 5505,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5430,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5473,
									"end": 5476,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5494,
									"end": 5499,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5487,
									"end": 5499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5487,
									"end": 5499,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5430,
									"end": 5505,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5430,
									"end": 5505,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5430,
									"end": 5505,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5430,
									"end": 5505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5780,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5511,
									"end": 5780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5621,
									"end": 5660,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5652,
									"end": 5659,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5621,
									"end": 5660,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5621,
									"end": 5660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5621,
									"end": 5660,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5621,
									"end": 5660,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5682,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5731,
									"end": 5772,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5755,
									"end": 5771,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5772,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5731,
									"end": 5772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5772,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 5731,
									"end": 5772,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5729,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 5720,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5710,
									"end": 5721,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5682,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5682,
									"end": 5773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5682,
									"end": 5773,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5682,
									"end": 5773,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5676,
									"end": 5680,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5669,
									"end": 5774,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5587,
									"end": 5780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5511,
									"end": 5780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5786,
									"end": 5859,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5786,
									"end": 5859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5831,
									"end": 5834,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5786,
									"end": 5859,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5786,
									"end": 5859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5865,
									"end": 6054,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5865,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5942,
									"end": 5974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5942,
									"end": 5974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5974,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5942,
									"end": 5974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5983,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 6041,
									"end": 6047,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6027,
									"end": 6031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5983,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5983,
									"end": 6048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5983,
									"end": 6048,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 5983,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5918,
									"end": 6054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5865,
									"end": 6054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5865,
									"end": 6054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5865,
									"end": 6054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6246,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 6060,
									"end": 6246,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6137,
									"end": 6140,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6130,
									"end": 6135,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6127,
									"end": 6141,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6191,
									"end": 6230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 6228,
									"end": 6229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6226,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6191,
									"end": 6230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6191,
									"end": 6230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6191,
									"end": 6230,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 6191,
									"end": 6230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6165,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6157,
									"end": 6162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6153,
									"end": 6166,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6144,
									"end": 6166,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6144,
									"end": 6166,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6120,
									"end": 6240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6252,
									"end": 6795,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6252,
									"end": 6795,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6353,
									"end": 6355,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6345,
									"end": 6356,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6342,
									"end": 6788,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6342,
									"end": 6788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6342,
									"end": 6788,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6387,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6419,
									"end": 6424,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6387,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6387,
									"end": 6425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6387,
									"end": 6425,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6387,
									"end": 6425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6471,
									"end": 6500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6489,
									"end": 6499,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6471,
									"end": 6500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 6471,
									"end": 6500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6471,
									"end": 6500,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6471,
									"end": 6500,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6461,
									"end": 6469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6457,
									"end": 6501,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6654,
									"end": 6656,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6642,
									"end": 6652,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6639,
									"end": 6657,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6636,
									"end": 6685,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6636,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6636,
									"end": 6685,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6675,
									"end": 6683,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6660,
									"end": 6683,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6660,
									"end": 6683,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6636,
									"end": 6685,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6636,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6698,
									"end": 6778,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6754,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 6772,
									"end": 6775,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6754,
									"end": 6776,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 6754,
									"end": 6776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6754,
									"end": 6776,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 6754,
									"end": 6776,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6744,
									"end": 6752,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6740,
									"end": 6777,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6727,
									"end": 6738,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6698,
									"end": 6778,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 6698,
									"end": 6778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6698,
									"end": 6778,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6698,
									"end": 6778,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6357,
									"end": 6788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6357,
									"end": 6788,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6342,
									"end": 6788,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6342,
									"end": 6788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6252,
									"end": 6795,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6252,
									"end": 6795,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6252,
									"end": 6795,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6252,
									"end": 6795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 6863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6905,
									"end": 6910,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6899,
									"end": 6903,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6895,
									"end": 6911,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6874,
									"end": 6911,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6874,
									"end": 6911,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6801,
									"end": 6918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6968,
									"end": 6974,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7001,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 7049,
									"end": 7050,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7045,
									"end": 7051,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7037,
									"end": 7042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7034,
									"end": 7035,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7030,
									"end": 7043,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7001,
									"end": 7052,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7001,
									"end": 7052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7001,
									"end": 7052,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 7001,
									"end": 7052,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6997,
									"end": 7053,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7076,
									"end": 7080,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7062,
									"end": 7087,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7062,
									"end": 7087,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6975,
									"end": 7093,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 7093,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7174,
									"end": 7178,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7320,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 7345,
									"end": 7348,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7339,
									"end": 7343,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7320,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 7320,
									"end": 7349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7320,
									"end": 7349,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 7320,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7312,
									"end": 7349,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7312,
									"end": 7349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7382,
									"end": 7385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7379,
									"end": 7380,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7375,
									"end": 7386,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7369,
									"end": 7373,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7366,
									"end": 7387,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7358,
									"end": 7387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7358,
									"end": 7387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7398,
									"end": 8793,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 7398,
									"end": 8793,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7548,
									"end": 7551,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7515,
									"end": 7552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7515,
									"end": 7552,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7617,
									"end": 7635,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7609,
									"end": 7615,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7606,
									"end": 7636,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7603,
									"end": 7659,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7603,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7603,
									"end": 7659,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7639,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7639,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 7639,
									"end": 7657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7639,
									"end": 7657,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7639,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7603,
									"end": 7659,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7603,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7715,
									"end": 7719,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7709,
									"end": 7720,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7683,
									"end": 7721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7721,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7683,
									"end": 7721,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7768,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7828,
									"end": 7834,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7814,
									"end": 7818,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7768,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 7768,
									"end": 7835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7768,
									"end": 7835,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7768,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7862,
									"end": 7863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7886,
									"end": 7890,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7873,
									"end": 7890,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7873,
									"end": 7890,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7918,
									"end": 7920,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7910,
									"end": 7916,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7907,
									"end": 7921,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7935,
									"end": 7936,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8592,
									"end": 8593,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8609,
									"end": 8615,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8606,
									"end": 8683,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8606,
									"end": 8683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8606,
									"end": 8683,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8653,
									"end": 8656,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8649,
									"end": 8668,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8643,
									"end": 8669,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8634,
									"end": 8669,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8634,
									"end": 8669,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8606,
									"end": 8683,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8606,
									"end": 8683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 8769,
									"end": 8775,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8762,
									"end": 8767,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8776,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 8709,
									"end": 8776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 8776,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 8709,
									"end": 8776,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8703,
									"end": 8707,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8696,
									"end": 8777,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8565,
									"end": 8787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7900,
									"end": 8787,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7900,
									"end": 8787,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 7930,
									"end": 8548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7982,
									"end": 7986,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7978,
									"end": 7987,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7970,
									"end": 7976,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7966,
									"end": 7988,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8016,
									"end": 8053,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 8048,
									"end": 8052,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8016,
									"end": 8053,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 8016,
									"end": 8053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8016,
									"end": 8053,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 8016,
									"end": 8053,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8075,
									"end": 8076,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8110,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8100,
									"end": 8101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8097,
									"end": 8111,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8182,
									"end": 8191,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8177,
									"end": 8180,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8173,
									"end": 8192,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8167,
									"end": 8193,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8159,
									"end": 8165,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8152,
									"end": 8194,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8233,
									"end": 8234,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8225,
									"end": 8231,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8221,
									"end": 8235,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8211,
									"end": 8235,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8211,
									"end": 8235,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8280,
									"end": 8282,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8269,
									"end": 8278,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8265,
									"end": 8283,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8252,
									"end": 8283,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8252,
									"end": 8283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8126,
									"end": 8130,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8119,
									"end": 8131,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8114,
									"end": 8131,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8114,
									"end": 8131,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8089,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8325,
									"end": 8331,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8316,
									"end": 8323,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8313,
									"end": 8332,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8310,
									"end": 8489,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8310,
									"end": 8489,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8310,
									"end": 8489,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8383,
									"end": 8392,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8378,
									"end": 8381,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8374,
									"end": 8393,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8368,
									"end": 8394,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8426,
									"end": 8474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 8468,
									"end": 8472,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8460,
									"end": 8466,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8456,
									"end": 8473,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8445,
									"end": 8454,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8426,
									"end": 8474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 8426,
									"end": 8474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8426,
									"end": 8474,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 8426,
									"end": 8474,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8418,
									"end": 8424,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8411,
									"end": 8475,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8333,
									"end": 8489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8310,
									"end": 8489,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8310,
									"end": 8489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8535,
									"end": 8536,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8531,
									"end": 8532,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8523,
									"end": 8529,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8519,
									"end": 8533,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8515,
									"end": 8537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8509,
									"end": 8513,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8502,
									"end": 8538,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 8548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 8548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 8548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7900,
									"end": 8787,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7900,
									"end": 8787,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7900,
									"end": 8787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7490,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7490,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7490,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7398,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7398,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7398,
									"end": 8793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 11131,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df9ee4b505f80687ccda3d950ed420915a68244da0d2904dc638169ceb33434864736f6c634300081a0033",
									".code": [
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "16279055"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 11131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1412,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1412,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1807,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1807,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3994,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3994,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3994,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3454,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10961,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10961,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10961,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4985,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4985,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2684,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2684,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5314,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5314,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3275,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3275,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3275,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3096,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3096,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3096,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1970,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1970,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4347,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4347,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5542,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5542,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2139,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2139,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4738,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4738,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4738,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1515,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1515,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1496,
											"end": 1690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1844,
											"end": 1857,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1887,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1887,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4122,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4072,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4072,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4264,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4249,
											"end": 4273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3533,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3559,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3559,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3725,
											"end": 3749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3677,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3791,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3812,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3765,
											"end": 3813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3677,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3634,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3634,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3905,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3905,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3507,
											"end": 3933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 11047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11068,
											"end": 11096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11068,
											"end": 11096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11107,
											"end": 11122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10961,
											"end": 11129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5107,
											"end": 5117,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5088,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5127,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5088,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5067,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5067,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5223,
											"end": 5227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5213,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5241,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5213,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2744,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2744,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2823,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2823,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2964,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3030,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5447,
											"end": 5451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5430,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5430,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3275,
											"end": 3397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2059,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2052,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2052,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4451,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4486,
											"end": 4494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4461,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4461,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4561,
											"end": 4608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4656,
											"end": 4664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4623,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4665,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5726,
											"end": 5736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5707,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5746,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5707,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5686,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5686,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5845,
											"end": 5849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5851,
											"end": 5853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5855,
											"end": 5862,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5831,
											"end": 5870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5870,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5831,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2220,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2220,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2426,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2426,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4906,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4874,
											"end": 4916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4874,
											"end": 4916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9455,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9142,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9270,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9242,
											"end": 9270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9242,
											"end": 9258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9242,
											"end": 9270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9298,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9306,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9291,
											"end": 9307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9319,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9242,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9234,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9234,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9392,
											"end": 9394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9380,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9436,
											"end": 9438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9426,
											"end": 9433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9418,
											"end": 9434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9434,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9418,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9409,
											"end": 9448,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7842,
											"end": 7849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7834,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7834,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7791,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7791,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7979,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7972,
											"end": 7988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8077,
											"end": 8084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8049,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8049,
											"end": 8073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8049,
											"end": 8084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8084,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8005,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8105,
											"end": 8146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8005,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7998,
											"end": 8146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7998,
											"end": 8146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7998,
											"end": 8146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 9031,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8477,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8614,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8607,
											"end": 8623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8599,
											"end": 8623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8599,
											"end": 8623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8558,
											"end": 8686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8558,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8714,
											"end": 8728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8697,
											"end": 8769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8697,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8825,
											"end": 8835,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8806,
											"end": 8845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8806,
											"end": 8845,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8806,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8798,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8904,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8887,
											"end": 8905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8915,
											"end": 8924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 8929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8915,
											"end": 8935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8915,
											"end": 8935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 8981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8961,
											"end": 8968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9024,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 9031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 9031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 9031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 9031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6892,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6902,
											"end": 6909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6882,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6910,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6882,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6981,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6941,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6989,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6941,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6920,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6920,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 7072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7510,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7375,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7480,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7473,
											"end": 7489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10178,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10192,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10178,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10174,
											"end": 10949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10174,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10174,
											"end": 10949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 10286,
											"end": 10296,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10322,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10344,
											"end": 10351,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10228,
											"end": 10396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10228,
											"end": 10396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10228,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10592,
											"end": 10593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10571,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10571,
											"end": 10883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10617,
											"end": 10723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10571,
											"end": 10883,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10571,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10829,
											"end": 10842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10820,
											"end": 10826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10816,
											"end": 10818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10812,
											"end": 10827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10805,
											"end": 10843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 10208,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10468,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 10468,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10468,
											"end": 10509,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10458,
											"end": 10509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10451,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 10451,
											"end": 10509,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10174,
											"end": 10949,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10174,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10938,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10927,
											"end": 10938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4870,
											"end": 4877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4866,
											"end": 4889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4894,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4897,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5087,
											"end": 5094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5063,
											"end": 5085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5042,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5248,
											"end": 5257,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5258,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5266,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5456,
											"end": 5463,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5411,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5464,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5515,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5584,
											"end": 5591,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5539,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5602,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11052,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10995,
											"end": 11053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11087,
											"end": 11101,
											"name": "PUSH",
											"source": 9,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11102,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10878,
											"end": 11109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10878,
											"end": 11109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 11278,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11278,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 11354,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11354,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11463,
											"end": 11475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11693,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11740,
											"end": 11749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11730,
											"end": 11750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11715,
											"end": 11724,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11704,
											"end": 11751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11894,
											"end": 11898,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 11768,
											"end": 11899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11768,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11760,
											"end": 11899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11760,
											"end": 11899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11487,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12052,
											"end": 12086,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12036,
											"end": 12050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12029,
											"end": 12087,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12124,
											"name": "PUSH",
											"source": 9,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12116,
											"end": 12118,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12097,
											"end": 12125,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 12132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11912,
											"end": 12132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12280,
											"end": 12283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 12360,
											"end": 12363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12301,
											"end": 12368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 12301,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12294,
											"end": 12368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12294,
											"end": 12368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12466,
											"end": 12469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12377,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12377,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12497,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12490,
											"end": 12493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12498,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12703,
											"end": 12712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12691,
											"end": 12717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12691,
											"end": 12717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12763,
											"end": 12772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12757,
											"end": 12761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12753,
											"end": 12773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12738,
											"end": 12747,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12734,
											"end": 12751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12727,
											"end": 12774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 12917,
											"end": 12921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 12791,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 12791,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13075,
											"end": 13109,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13059,
											"end": 13073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13052,
											"end": 13110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13144,
											"end": 13170,
											"name": "PUSH",
											"source": 9,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 13139,
											"end": 13141,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12935,
											"end": 13178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13326,
											"end": 13329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13411,
											"end": 13413,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 13406,
											"end": 13409,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 13347,
											"end": 13414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13347,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13512,
											"end": 13515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 13423,
											"end": 13516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13423,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13541,
											"end": 13543,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13536,
											"end": 13539,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13525,
											"end": 13544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13525,
											"end": 13544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13184,
											"end": 13550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13722,
											"end": 13726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13762,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13737,
											"end": 13763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13809,
											"end": 13818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13803,
											"end": 13807,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13795,
											"end": 13796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13784,
											"end": 13793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13780,
											"end": 13797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13773,
											"end": 13820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 13837,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13837,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13829,
											"end": 13968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13829,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14121,
											"end": 14155,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 14117,
											"end": 14118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14098,
											"end": 14156,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14190,
											"end": 14209,
											"name": "PUSH",
											"source": 9,
											"value": "776E6572206E6F7220617070726F766564000000000000000000000000000000"
										},
										{
											"begin": 14185,
											"end": 14187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14177,
											"end": 14183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 14217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 14217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 14450,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 14445,
											"end": 14448,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 14386,
											"end": 14453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 14386,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 14453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 14453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14551,
											"end": 14554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14462,
											"end": 14555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14462,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14580,
											"end": 14582,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14575,
											"end": 14578,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14564,
											"end": 14583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14761,
											"end": 14765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14784,
											"end": 14802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14848,
											"end": 14857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14842,
											"end": 14846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14823,
											"end": 14832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14819,
											"end": 14836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14812,
											"end": 14859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14876,
											"end": 15007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 14876,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 15007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 15007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 15014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 15014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15202,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15020,
											"end": 15202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15160,
											"end": 15194,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 15156,
											"end": 15157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15148,
											"end": 15154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15144,
											"end": 15158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15137,
											"end": 15195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15574,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 15208,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15350,
											"end": 15353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 15435,
											"end": 15437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15430,
											"end": 15433,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15371,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 15371,
											"end": 15438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15371,
											"end": 15438,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 15371,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15364,
											"end": 15438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15364,
											"end": 15438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15447,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15536,
											"end": 15539,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15447,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 15447,
											"end": 15540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15447,
											"end": 15540,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15447,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15565,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15560,
											"end": 15563,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15574,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15580,
											"end": 15999,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 15580,
											"end": 15999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15784,
											"end": 15786,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15773,
											"end": 15782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15769,
											"end": 15787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15761,
											"end": 15787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15761,
											"end": 15787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 15842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15827,
											"end": 15831,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15823,
											"end": 15843,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15819,
											"end": 15820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15808,
											"end": 15817,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15804,
											"end": 15821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15797,
											"end": 15844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15861,
											"end": 15992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15861,
											"end": 15992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 15861,
											"end": 15992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15861,
											"end": 15992,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15861,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15853,
											"end": 15992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15853,
											"end": 15992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15580,
											"end": 15999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15580,
											"end": 15999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15580,
											"end": 15999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15580,
											"end": 15999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16005,
											"end": 16183,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 16005,
											"end": 16183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16175,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 16141,
											"end": 16142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16133,
											"end": 16139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16129,
											"end": 16143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16122,
											"end": 16176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16005,
											"end": 16183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16005,
											"end": 16183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16331,
											"end": 16334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 16416,
											"end": 16418,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 16411,
											"end": 16414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16352,
											"end": 16419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 16352,
											"end": 16419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16345,
											"end": 16419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 16517,
											"end": 16520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 16428,
											"end": 16521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 16428,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16546,
											"end": 16548,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16530,
											"end": 16549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16530,
											"end": 16549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16189,
											"end": 16555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16189,
											"end": 16555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16727,
											"end": 16731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16767,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16754,
											"end": 16763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16750,
											"end": 16768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16742,
											"end": 16768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16742,
											"end": 16768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16814,
											"end": 16823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16808,
											"end": 16812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16804,
											"end": 16824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16789,
											"end": 16798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 16802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16778,
											"end": 16825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 16968,
											"end": 16972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 16842,
											"end": 16973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 16842,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16834,
											"end": 16973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16834,
											"end": 16973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16561,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16986,
											"end": 17166,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 16986,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17111,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17031,
											"end": 17032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17024,
											"end": 17112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17131,
											"end": 17135,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 17128,
											"end": 17129,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17121,
											"end": 17136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17155,
											"end": 17159,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17152,
											"end": 17153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17145,
											"end": 17160,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17212,
											"end": 17215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 17249,
											"end": 17250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 17231,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17226,
											"end": 17251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17226,
											"end": 17251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17265,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 17283,
											"end": 17284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17265,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 17265,
											"end": 17285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17265,
											"end": 17285,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 17265,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17285,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17305,
											"end": 17306,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17301,
											"end": 17310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17294,
											"end": 17310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17294,
											"end": 17310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17329,
											"end": 17332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17333,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17320,
											"end": 17356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17320,
											"end": 17356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 17320,
											"end": 17356,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 17336,
											"end": 17354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17320,
											"end": 17356,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 17320,
											"end": 17356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17544,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 17369,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17509,
											"end": 17536,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 17505,
											"end": 17506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17493,
											"end": 17507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17486,
											"end": 17537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17550,
											"end": 17916,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 17550,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17692,
											"end": 17695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17713,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 17777,
											"end": 17779,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 17772,
											"end": 17775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17713,
											"end": 17780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 17713,
											"end": 17780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17713,
											"end": 17780,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 17713,
											"end": 17780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17706,
											"end": 17780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17706,
											"end": 17780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17789,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17878,
											"end": 17881,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17789,
											"end": 17882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 17789,
											"end": 17882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17789,
											"end": 17882,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17789,
											"end": 17882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17907,
											"end": 17909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17902,
											"end": 17905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17891,
											"end": 17910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17891,
											"end": 17910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17550,
											"end": 17916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17550,
											"end": 17916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17550,
											"end": 17916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17550,
											"end": 17916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 18341,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 17922,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18088,
											"end": 18092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18126,
											"end": 18128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18115,
											"end": 18124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18111,
											"end": 18129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18103,
											"end": 18129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18103,
											"end": 18129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18175,
											"end": 18184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18169,
											"end": 18173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18185,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18161,
											"end": 18162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18150,
											"end": 18159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18146,
											"end": 18163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18139,
											"end": 18186,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18203,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 18329,
											"end": 18333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18203,
											"end": 18334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 18203,
											"end": 18334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18203,
											"end": 18334,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 18203,
											"end": 18334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18195,
											"end": 18334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18195,
											"end": 18334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 18341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 18341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 18341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18347,
											"end": 18581,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 18347,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18487,
											"end": 18521,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 18483,
											"end": 18484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18475,
											"end": 18481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18471,
											"end": 18485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18464,
											"end": 18522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18556,
											"end": 18573,
											"name": "PUSH",
											"source": 9,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 18551,
											"end": 18553,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18543,
											"end": 18549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18539,
											"end": 18554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18532,
											"end": 18574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18347,
											"end": 18581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18347,
											"end": 18581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18953,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 18587,
											"end": 18953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18729,
											"end": 18732,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18750,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 18814,
											"end": 18816,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 18809,
											"end": 18812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18750,
											"end": 18817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 18750,
											"end": 18817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18750,
											"end": 18817,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 18750,
											"end": 18817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18743,
											"end": 18817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18743,
											"end": 18817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18826,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 18915,
											"end": 18918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18826,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 18826,
											"end": 18919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18826,
											"end": 18919,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 18826,
											"end": 18919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18946,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18939,
											"end": 18942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18928,
											"end": 18947,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18928,
											"end": 18947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19378,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 18959,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19125,
											"end": 19129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19163,
											"end": 19165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19152,
											"end": 19161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19148,
											"end": 19166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19140,
											"end": 19166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19140,
											"end": 19166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19212,
											"end": 19221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19206,
											"end": 19210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19202,
											"end": 19222,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19198,
											"end": 19199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19187,
											"end": 19196,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19183,
											"end": 19200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19176,
											"end": 19223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 19366,
											"end": 19370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 19240,
											"end": 19371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19240,
											"end": 19371,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 19240,
											"end": 19371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19232,
											"end": 19371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18959,
											"end": 19378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19384,
											"end": 19564,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 19384,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19524,
											"end": 19556,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A2063616C6C6572206E6F7420746F6B656E206F776E65720000"
										},
										{
											"begin": 19520,
											"end": 19521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19512,
											"end": 19518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19508,
											"end": 19522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19501,
											"end": 19557,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19384,
											"end": 19564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19384,
											"end": 19564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19570,
											"end": 19936,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 19570,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 19715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 19797,
											"end": 19799,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 19792,
											"end": 19795,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19733,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 19733,
											"end": 19800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19733,
											"end": 19800,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 19733,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19726,
											"end": 19800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19726,
											"end": 19800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19809,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 19898,
											"end": 19901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19809,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 19809,
											"end": 19902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19809,
											"end": 19902,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 19809,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19927,
											"end": 19929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19922,
											"end": 19925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19918,
											"end": 19930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19911,
											"end": 19930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19911,
											"end": 19930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19570,
											"end": 19936,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19570,
											"end": 19936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19570,
											"end": 19936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19570,
											"end": 19936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 20361,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 19942,
											"end": 20361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20108,
											"end": 20112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20146,
											"end": 20148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20135,
											"end": 20144,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20131,
											"end": 20149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20123,
											"end": 20149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20123,
											"end": 20149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20195,
											"end": 20204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20189,
											"end": 20193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20185,
											"end": 20205,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20181,
											"end": 20182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20166,
											"end": 20183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20159,
											"end": 20206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20223,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 20349,
											"end": 20353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20223,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 20223,
											"end": 20354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20223,
											"end": 20354,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 20223,
											"end": 20354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 20361,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 20361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 20361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 20361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20367,
											"end": 20598,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 20367,
											"end": 20598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20507,
											"end": 20541,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 20503,
											"end": 20504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20495,
											"end": 20501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20491,
											"end": 20505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20484,
											"end": 20542,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20576,
											"end": 20590,
											"name": "PUSH",
											"source": 9,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 20571,
											"end": 20573,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20563,
											"end": 20569,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20559,
											"end": 20574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20552,
											"end": 20591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20367,
											"end": 20598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20367,
											"end": 20598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20970,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 20604,
											"end": 20970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 20749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 20831,
											"end": 20833,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 20826,
											"end": 20829,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20767,
											"end": 20834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 20767,
											"end": 20834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20767,
											"end": 20834,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 20767,
											"end": 20834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20760,
											"end": 20834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20760,
											"end": 20834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20843,
											"end": 20936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 20932,
											"end": 20935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20843,
											"end": 20936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 20843,
											"end": 20936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20843,
											"end": 20936,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 20843,
											"end": 20936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20961,
											"end": 20963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20956,
											"end": 20959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20952,
											"end": 20964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20945,
											"end": 20964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20604,
											"end": 20970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21395,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 20976,
											"end": 21395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21142,
											"end": 21146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21180,
											"end": 21182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21169,
											"end": 21178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21165,
											"end": 21183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21157,
											"end": 21183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21157,
											"end": 21183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21229,
											"end": 21238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21223,
											"end": 21227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21219,
											"end": 21239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21215,
											"end": 21216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21204,
											"end": 21213,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21200,
											"end": 21217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21193,
											"end": 21240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21257,
											"end": 21388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 21383,
											"end": 21387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21257,
											"end": 21388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 21257,
											"end": 21388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21257,
											"end": 21388,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 21257,
											"end": 21388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21249,
											"end": 21388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21249,
											"end": 21388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 21395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21401,
											"end": 21625,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 21401,
											"end": 21625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21541,
											"end": 21575,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 21537,
											"end": 21538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21529,
											"end": 21535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21525,
											"end": 21539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21518,
											"end": 21576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21610,
											"end": 21617,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21605,
											"end": 21607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21597,
											"end": 21603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21593,
											"end": 21608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21586,
											"end": 21618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21401,
											"end": 21625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21401,
											"end": 21625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21773,
											"end": 21776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 21858,
											"end": 21860,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 21853,
											"end": 21856,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 21794,
											"end": 21861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 21794,
											"end": 21861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21787,
											"end": 21861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 21959,
											"end": 21962,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 21870,
											"end": 21963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 21870,
											"end": 21963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21988,
											"end": 21990,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21983,
											"end": 21986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21979,
											"end": 21991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21972,
											"end": 21991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21972,
											"end": 21991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21631,
											"end": 21997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22169,
											"end": 22173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22207,
											"end": 22209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22196,
											"end": 22205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22192,
											"end": 22210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22184,
											"end": 22210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22184,
											"end": 22210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22256,
											"end": 22265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22250,
											"end": 22254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22246,
											"end": 22266,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22242,
											"end": 22243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22231,
											"end": 22240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22220,
											"end": 22267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 22410,
											"end": 22414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 22284,
											"end": 22415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 22284,
											"end": 22415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22428,
											"end": 22651,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 22428,
											"end": 22651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22568,
											"end": 22602,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 22564,
											"end": 22565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22556,
											"end": 22562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22552,
											"end": 22566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22545,
											"end": 22603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22637,
											"end": 22643,
											"name": "PUSH",
											"source": 9,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22632,
											"end": 22634,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22624,
											"end": 22630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22620,
											"end": 22635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22613,
											"end": 22644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22428,
											"end": 22651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22428,
											"end": 22651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22657,
											"end": 23023,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 22657,
											"end": 23023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22799,
											"end": 22802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22820,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 22884,
											"end": 22886,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 22879,
											"end": 22882,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22820,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 22820,
											"end": 22887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22820,
											"end": 22887,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 22820,
											"end": 22887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22813,
											"end": 22887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22813,
											"end": 22887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22896,
											"end": 22989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 22985,
											"end": 22988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22896,
											"end": 22989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 22896,
											"end": 22989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22896,
											"end": 22989,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 22896,
											"end": 22989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23014,
											"end": 23016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23009,
											"end": 23012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23005,
											"end": 23017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22998,
											"end": 23017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22998,
											"end": 23017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22657,
											"end": 23023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22657,
											"end": 23023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22657,
											"end": 23023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22657,
											"end": 23023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23448,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 23029,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23195,
											"end": 23199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23233,
											"end": 23235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23222,
											"end": 23231,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23218,
											"end": 23236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23210,
											"end": 23236,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23210,
											"end": 23236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23282,
											"end": 23291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23276,
											"end": 23280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23272,
											"end": 23292,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23268,
											"end": 23269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23257,
											"end": 23266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23253,
											"end": 23270,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23246,
											"end": 23293,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23310,
											"end": 23441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 23436,
											"end": 23440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23310,
											"end": 23441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 23310,
											"end": 23441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23310,
											"end": 23441,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 23310,
											"end": 23441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23302,
											"end": 23441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23302,
											"end": 23441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23514,
											"end": 23534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 23532,
											"end": 23533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 23514,
											"end": 23534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23534,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 23514,
											"end": 23534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23509,
											"end": 23534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23509,
											"end": 23534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23548,
											"end": 23568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 23566,
											"end": 23567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23548,
											"end": 23568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 23548,
											"end": 23568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23548,
											"end": 23568,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 23548,
											"end": 23568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23543,
											"end": 23568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23543,
											"end": 23568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23592,
											"end": 23593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23589,
											"end": 23590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23585,
											"end": 23594,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23577,
											"end": 23594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23577,
											"end": 23594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23616,
											"end": 23617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23610,
											"end": 23614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23607,
											"end": 23618,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23604,
											"end": 23641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23604,
											"end": 23641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 23604,
											"end": 23641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23621,
											"end": 23639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 23621,
											"end": 23639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 23621,
											"end": 23639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23621,
											"end": 23639,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 23621,
											"end": 23639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23604,
											"end": 23641,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 23604,
											"end": 23641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23654,
											"end": 23891,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 23654,
											"end": 23891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23794,
											"end": 23828,
											"name": "PUSH",
											"source": 9,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 23790,
											"end": 23791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23782,
											"end": 23788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23778,
											"end": 23792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23771,
											"end": 23829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23863,
											"end": 23883,
											"name": "PUSH",
											"source": 9,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 23858,
											"end": 23860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23850,
											"end": 23856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23846,
											"end": 23861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23839,
											"end": 23884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23654,
											"end": 23891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23654,
											"end": 23891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24263,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 23897,
											"end": 24263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24039,
											"end": 24042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24060,
											"end": 24127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 24124,
											"end": 24126,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 24119,
											"end": 24122,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24060,
											"end": 24127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 24060,
											"end": 24127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24060,
											"end": 24127,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 24060,
											"end": 24127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24053,
											"end": 24127,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24053,
											"end": 24127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24136,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 24225,
											"end": 24228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24136,
											"end": 24229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 24136,
											"end": 24229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24136,
											"end": 24229,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 24136,
											"end": 24229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24254,
											"end": 24256,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24249,
											"end": 24252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24245,
											"end": 24257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24238,
											"end": 24257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24238,
											"end": 24257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24263,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23897,
											"end": 24263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24688,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 24269,
											"end": 24688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24435,
											"end": 24439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24473,
											"end": 24475,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24462,
											"end": 24471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24458,
											"end": 24476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24450,
											"end": 24476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24450,
											"end": 24476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24522,
											"end": 24531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24516,
											"end": 24520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24512,
											"end": 24532,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24508,
											"end": 24509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24497,
											"end": 24506,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24493,
											"end": 24510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24486,
											"end": 24533,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24550,
											"end": 24681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 24676,
											"end": 24680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24550,
											"end": 24681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 24550,
											"end": 24681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24550,
											"end": 24681,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 24550,
											"end": 24681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24792,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 24694,
											"end": 24792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24745,
											"end": 24751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24779,
											"end": 24784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24773,
											"end": 24785,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24763,
											"end": 24785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24763,
											"end": 24785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24881,
											"end": 24892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24915,
											"end": 24921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24910,
											"end": 24913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24903,
											"end": 24922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24955,
											"end": 24959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24950,
											"end": 24953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24946,
											"end": 24960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24931,
											"end": 24960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24931,
											"end": 24960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24798,
											"end": 24966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25058,
											"end": 25061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25086,
											"end": 25124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 25118,
											"end": 25123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25086,
											"end": 25124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 25086,
											"end": 25124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25086,
											"end": 25124,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 25086,
											"end": 25124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25140,
											"end": 25210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 25203,
											"end": 25209,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25198,
											"end": 25201,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25140,
											"end": 25210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 25140,
											"end": 25210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25140,
											"end": 25210,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 25140,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25133,
											"end": 25210,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 25133,
											"end": 25210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25219,
											"end": 25284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 25277,
											"end": 25283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25272,
											"end": 25275,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25265,
											"end": 25269,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25258,
											"end": 25263,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 25254,
											"end": 25270,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25219,
											"end": 25284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 25219,
											"end": 25284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25219,
											"end": 25284,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 25219,
											"end": 25284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25309,
											"end": 25338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 25331,
											"end": 25337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25309,
											"end": 25338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 25309,
											"end": 25338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25309,
											"end": 25338,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 25309,
											"end": 25338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25300,
											"end": 25339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25293,
											"end": 25339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25293,
											"end": 25339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25062,
											"end": 25345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24972,
											"end": 25345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25546,
											"end": 25550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25584,
											"end": 25587,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 25573,
											"end": 25582,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25569,
											"end": 25588,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25561,
											"end": 25588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25561,
											"end": 25588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25598,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 25666,
											"end": 25667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25664,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25651,
											"end": 25668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25642,
											"end": 25648,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 25598,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 25598,
											"end": 25669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25598,
											"end": 25669,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 25598,
											"end": 25669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 25747,
											"end": 25749,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25736,
											"end": 25745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25732,
											"end": 25750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25723,
											"end": 25729,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 25679,
											"end": 25751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25679,
											"end": 25751,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 25679,
											"end": 25751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25761,
											"end": 25833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 25829,
											"end": 25831,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25818,
											"end": 25827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25814,
											"end": 25832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25805,
											"end": 25811,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25761,
											"end": 25833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 25761,
											"end": 25833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25761,
											"end": 25833,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 25761,
											"end": 25833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25880,
											"end": 25889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25874,
											"end": 25878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25870,
											"end": 25890,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25865,
											"end": 25867,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 25854,
											"end": 25863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25850,
											"end": 25868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25843,
											"end": 25891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25908,
											"end": 25984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 25979,
											"end": 25983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25970,
											"end": 25976,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25908,
											"end": 25984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 25908,
											"end": 25984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25908,
											"end": 25984,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 25908,
											"end": 25984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25900,
											"end": 25984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25900,
											"end": 25984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26053,
											"end": 26058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26084,
											"end": 26090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26078,
											"end": 26091,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 26069,
											"end": 26091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26069,
											"end": 26091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26100,
											"end": 26132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 26126,
											"end": 26131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26100,
											"end": 26132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 26100,
											"end": 26132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26100,
											"end": 26132,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 26100,
											"end": 26132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25997,
											"end": 26138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26213,
											"end": 26219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26262,
											"end": 26264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26250,
											"end": 26259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26241,
											"end": 26248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26237,
											"end": 26260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26233,
											"end": 26265,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 26230,
											"end": 26349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26230,
											"end": 26349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 26230,
											"end": 26349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 26268,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 26268,
											"end": 26347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26347,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 26268,
											"end": 26347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26230,
											"end": 26349,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 26230,
											"end": 26349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26388,
											"end": 26389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26413,
											"end": 26476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 26468,
											"end": 26475,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26459,
											"end": 26465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26448,
											"end": 26457,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 26444,
											"end": 26466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 26413,
											"end": 26476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26476,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 26413,
											"end": 26476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26403,
											"end": 26476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26403,
											"end": 26476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26359,
											"end": 26486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26144,
											"end": 26493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isContract(address)": "16279055",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name`, a `symbol` and a `baseURI` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address,uint256)\":{\"details\":\"Mints `tokenId` and transfers it to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` must not exist. Emits a {Transfer} event.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1014/NFT/BaseERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1014/NFT/BaseERC721.sol\":{\"keccak256\":\"0xdd2a684ad7041ebc8d93a29f9a584eb85373361f813979e5b7ef2e15ab0ca2ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14dc76cbbbc448fd7b7b3231b6e92d55d13d530c73d11d84b1b8df61814e24eb\",\"dweb:/ipfs/QmSVGaPwJJJ2yoodaFFtSDH2mXXmQU1jveMy7sKgJLxrKe\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 18,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 20,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_baseURI",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 28,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 32,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 38,
								"contract": "1014/NFT/BaseERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"1014/NFT/BaseERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"1014/NFT/BaseERC721.sol": {
				"ast": {
					"absolutePath": "1014/NFT/BaseERC721.sol",
					"exportedSymbols": {
						"Address": [
							1095
						],
						"BaseERC721Receiver": [
							707
						],
						"Context": [
							1125
						],
						"ERC721": [
							682
						],
						"IERC165": [
							1392
						],
						"IERC721": [
							824
						],
						"IERC721Receiver": [
							842
						],
						"Math": [
							2446
						],
						"SignedMath": [
							2551
						],
						"Strings": [
							1380
						]
					},
					"id": 708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 1096,
							"src": "57:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 1126,
							"src": "109:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 1381,
							"src": "161:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 843,
							"src": "213:66:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 825,
							"src": "280:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC721",
										"nameLocations": [
											"359:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "359:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 682,
							"linearizedBaseContracts": [
								682,
								824,
								1392
							],
							"name": "ERC721",
							"nameLocation": "349:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 11,
									"libraryName": {
										"id": 9,
										"name": "Strings",
										"nameLocations": [
											"378:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1380,
										"src": "378:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "372:26:0",
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "390:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 14,
									"libraryName": {
										"id": 12,
										"name": "Address",
										"nameLocations": [
											"409:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "409:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "403:26:0",
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "421:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "468:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "453:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 15,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "453:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "515:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "500:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 17,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "500:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_baseURI",
									"nameLocation": "565:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "550:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "550:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "662:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "626:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "634:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "626:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "645:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "756:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "720:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "720:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "857:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "821:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "829:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "821:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "840:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "980:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 682,
									"src": "927:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 37,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "927:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 36,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 34,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "954:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "946:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 35,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "965:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1241:104:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1269:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1277:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1269:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1269:13:0"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 52,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 53,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1292:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1292:17:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 56,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 57,
														"name": "baseURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1330:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1319:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1319:19:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1005:121:0",
										"text": " @dev Initializes the contract by setting a `name`, a `symbol` and a `baseURI` to the token collection."
									},
									"id": 61,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1152:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 40,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1152:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1181:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "baseURI_",
												"nameLocation": "1226:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1212:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:98:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1241:0:0"
									},
									"scope": 682,
									"src": "1131:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1486:255:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1515:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1530:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "1515:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 72,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1590:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "1590:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1515:100:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 76,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1665:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "1665:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1515:175:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 80,
												"nodeType": "Return",
												"src": "1496:194:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1351:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1421:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1446:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1439:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 63,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:20:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 682,
									"src": "1412:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1859:47:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"id": 88,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "1894:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 87,
												"id": 89,
												"nodeType": "Return",
												"src": "1887:12:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1751:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1816:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1820:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1844:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:15:0"
									},
									"scope": 682,
									"src": "1807:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2024:49:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"id": 97,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "2052:14:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1912:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1979:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2009:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:0"
									},
									"scope": 682,
									"src": "1970:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2210:239:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 109,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "2263:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 111,
																"indexExpression": {
																	"id": 110,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2271:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2263:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2289:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2281:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2281:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2281:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2263:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:144:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2220:144:0"
											},
											{
												"documentation": "code",
												"expression": {
													"id": 120,
													"name": "_baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "2433:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 107,
												"id": 121,
												"nodeType": "Return",
												"src": "2426:15:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2079:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2148:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2165:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2157:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:17:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2195:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:15:0"
									},
									"scope": 682,
									"src": "2139:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2734:303:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 132,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "2762:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2774:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2766:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 133,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2766:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2766:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2762:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2778:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2744:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 142,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "2841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 144,
																"indexExpression": {
																	"id": 143,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2841:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2861:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 145,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2861:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2861:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2841:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2823:81:0"
											},
											{
												"documentation": "code",
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 153,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 155,
														"indexExpression": {
															"id": 154,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2933:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2952:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2933:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2933:21:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 159,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2964:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 161,
														"indexExpression": {
															"id": 160,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2974:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2964:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2981:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2964:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2964:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3014:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3006:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3006:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3006:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3018:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 171,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "2997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "EmitStatement",
												"src": "2992:38:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2455:224:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must not exist.\n Emits a {Transfer} event."
									},
									"functionSelector": "40c10f19",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2693:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2706:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2698:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:29:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2734:0:0"
									},
									"scope": 682,
									"src": "2684:353:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										749
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3160:58:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"baseExpression": {
														"id": 183,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3195:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 185,
													"indexExpression": {
														"id": 184,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3205:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3195:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 186,
												"nodeType": "Return",
												"src": "3188:23:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3043:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3105:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3115:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:15:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:9:0"
									},
									"scope": 682,
									"src": "3096:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										757
									],
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "3339:58:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"baseExpression": {
														"id": 196,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3374:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 198,
													"indexExpression": {
														"id": 197,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3374:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 195,
												"id": 199,
												"nodeType": "Return",
												"src": "3367:23:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3224:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3284:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3300:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3292:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:17:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:0"
									},
									"scope": 682,
									"src": "3275:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3507:426:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3525:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 251,
														"src": "3517:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"arguments": [
														{
															"id": 212,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3533:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3517:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3576:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 217,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "3583:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3587:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3559:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "3559:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 223,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3677:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3681:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3677:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 225,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "3689:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3677:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 227,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3711:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3715:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3711:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 229,
																			"name": "_tokenApprovals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "3725:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 231,
																		"indexExpression": {
																			"id": 230,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "3741:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3725:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3711:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3677:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 234,
																		"name": "_operatorApprovals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "3765:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 235,
																			"name": "_owners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3784:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 237,
																		"indexExpression": {
																			"id": 236,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "3792:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3784:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3765:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 241,
																"indexExpression": {
																	"expression": {
																		"id": 239,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3802:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3806:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3802:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3765:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3677:136:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3827:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "3634:261:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 247,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3914:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 246,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3905:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3905:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3905:21:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "3403:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3463:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3479:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3471:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3483:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3470:29:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3507:0:0"
									},
									"scope": 682,
									"src": "3454:479:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										813
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "4062:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 261,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "4115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 263,
																"indexExpression": {
																	"id": 262,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4123:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4115:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4141:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4133:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 264,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4133:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4133:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4115:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4157:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4072:141:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "4072:141:0"
											},
											{
												"documentation": "code",
												"expression": {
													"baseExpression": {
														"id": 272,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "4249:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 274,
													"indexExpression": {
														"id": 273,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "4265:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4249:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 259,
												"id": 275,
												"nodeType": "Return",
												"src": "4242:31:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3939:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4003:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:17:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4053:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4052:9:0"
									},
									"scope": 682,
									"src": "3994:286:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										805
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "4414:258:0",
										"statements": [
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4432:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "4424:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 285,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4424:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"expression": {
														"id": 287,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4441:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4445:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4441:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4424:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "4478:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 292,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "4486:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4478:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4496:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4461:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "4461:63:0"
											},
											{
												"documentation": "code",
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 297,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "4561:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 300,
															"indexExpression": {
																"id": 298,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "4580:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4561:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 301,
														"indexExpression": {
															"id": 299,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4561:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "4600:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4561:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "4561:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 306,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4638:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4656:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 305,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4623:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4623:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "EmitStatement",
												"src": "4618:47:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4286:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4356:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4382:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "4374:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4397:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "4392:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4392:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:33:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4414:0:0"
									},
									"scope": 682,
									"src": "4347:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										823
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "4846:77:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 322,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "4881:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 324,
														"indexExpression": {
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4881:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 326,
													"indexExpression": {
														"id": 325,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "4907:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4881:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 327,
												"nodeType": "Return",
												"src": "4874:42:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "4678:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4747:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4781:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4804:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4796:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4763:55:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4840:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4839:6:0"
									},
									"scope": 682,
									"src": "4738:185:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "5057:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 341,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5107:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5111:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5107:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 343,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "5119:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 340,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "5088:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:135:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5067:135:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "5233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "5213:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "5213:28:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "4929:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4994:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5015:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5029:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5021:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5006:43:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5057:0:0"
									},
									"scope": 682,
									"src": "4985:263:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "5420:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5453:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5466:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 365,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															373,
															402
														],
														"referencedDeclaration": 402,
														"src": "5430:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5430:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "5430:39:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "5254:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5323:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "5349:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5379:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "5371:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "5391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5339:73:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5420:0:0"
									},
									"scope": 682,
									"src": "5314:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										769
									],
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5676:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 387,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5726:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5730:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5726:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 389,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "5738:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 386,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "5707:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5707:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5760:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5686:135:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "5686:135:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5851:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "5855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5864:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "5831:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5831:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "5831:39:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "5482:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5551:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5585:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5577:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5607:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5644:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5644:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:101:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5676:0:0"
									},
									"scope": 682,
									"src": "5542:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "6872:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6902:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "6882:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "6882:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6964:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 423,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6970:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 424,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 425,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6983:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 421,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "6941:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6941:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7003:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:145:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "6920:145:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "5883:851:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6748:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6801:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6793:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6838:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6838:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6761:101:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:0:0"
									},
									"scope": 682,
									"src": "6739:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7438:72:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 439,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "7473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 441,
														"indexExpression": {
															"id": 440,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "7481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7473:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7501:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 442,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7493:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7493:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7473:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 438,
												"id": 447,
												"nodeType": "Return",
												"src": "7466:37:0"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "7078:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7384:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7391:17:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7432:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7432:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7431:6:0"
									},
									"scope": 682,
									"src": "7375:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "7781:372:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 461,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7842:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 460,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "7834:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7834:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7864:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7791:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "7791:129:0"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "addressOwner",
														"nameLocation": "7957:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "7949:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7949:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "code",
												"id": 472,
												"initialValue": {
													"baseExpression": {
														"id": 469,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "7972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 471,
													"indexExpression": {
														"id": 470,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7972:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7949:39:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 473,
																"name": "addressOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "8005:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 474,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "8021:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8005:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 476,
																	"name": "_tokenApprovals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "8049:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 478,
																"indexExpression": {
																	"id": 477,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "8065:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8049:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 479,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "8077:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8049:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8005:79:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 482,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "8105:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 484,
															"indexExpression": {
																"id": 483,
																"name": "addressOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "8124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8105:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8105:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8005:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 458,
												"id": 488,
												"nodeType": "Return",
												"src": "7998:148:0"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "7516:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7677:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "7705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "7730:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7695:56:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "7775:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7774:6:0"
									},
									"scope": 682,
									"src": "7668:485:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "8548:483:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "8599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 502,
																	"name": "_owners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"id": 503,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8607:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8599:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8637:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8558:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8558:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 510,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "8714:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 511,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8718:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8718:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8714:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8730:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8697:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "8697:72:0"
											},
											{
												"documentation": "code",
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 521,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8829:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 523,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 520,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "8806:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8806:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8798:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "8798:48:0"
											},
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 527,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "8856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8856:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "8875:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8856:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "8856:21:0"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 533,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "8887:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 535,
														"indexExpression": {
															"id": 534,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8897:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8887:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8904:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8887:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8887:18:0"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 539,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "8915:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 541,
														"indexExpression": {
															"id": 540,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8925:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8915:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8915:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "8915:20:0"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 545,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "8945:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 547,
														"indexExpression": {
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8945:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8980:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8972:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8972:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8972:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8945:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8945:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "9006:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "9012:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "8997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8997:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "8992:32:0"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "8159:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8486:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8504:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8518:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8510:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "8522:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8495:43:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8548:0:0"
									},
									"scope": 682,
									"src": "8477:554:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "9206:249:0",
										"statements": [
											{
												"documentation": "code",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 570,
																		"name": "_owners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "9242:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 572,
																	"indexExpression": {
																		"id": 571,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "9250:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9242:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 573,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9260:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9264:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9260:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9242:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 576,
																		"name": "_operatorApprovals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "9272:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 580,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 577,
																			"name": "_owners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "9291:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 579,
																		"indexExpression": {
																			"id": 578,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 566,
																			"src": "9299:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9291:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9272:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 583,
																"indexExpression": {
																	"expression": {
																		"id": 581,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9309:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9313:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9309:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9272:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9242:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206e6f7420746f6b656e206f776e6572",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9322:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a",
																"typeString": "literal_string \"ERC721: caller not token owner\""
															},
															"value": "ERC721: caller not token owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e91c394c0e2f92bce1c5a14e46ebb33f1ad94224d810abf85e65cddc4d3fd2a",
																"typeString": "literal_string \"ERC721: caller not token owner\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9234:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "9234:121:0"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 588,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "9365:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 590,
														"indexExpression": {
															"id": 589,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9365:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "9392:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9365:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "9365:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "9426:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 595,
																"name": "ownerOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "9418:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9418:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9436:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "9440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "9409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9409:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "9404:44:0"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "9037:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9151:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9168:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "9160:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9180:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "9172:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9159:29:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9206:0:0"
									},
									"scope": 682,
									"src": "9142:313:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "10164:791:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10189:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "10178:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10178:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "10913:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10934:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 616,
															"id": 661,
															"nodeType": "Return",
															"src": "10927:11:0"
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "10174:775:0",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "10194:713:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 639,
																		"nodeType": "Block",
																		"src": "10433:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 633,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 631,
																						"src": "10458:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 634,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 842,
																								"src": "10468:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$842_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 635,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "10484:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 841,
																							"src": "10468:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "10501:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "10468:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "10458:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 616,
																				"id": 638,
																				"nodeType": "Return",
																				"src": "10451:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 640,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 632,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 631,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "10425:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 640,
																				"src": "10418:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 630,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "10418:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10417:15:0"
																	},
																	"src": "10409:115:0"
																},
																{
																	"block": {
																		"id": 656,
																		"nodeType": "Block",
																		"src": "10553:344:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 644,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 642,
																							"src": "10575:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10582:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "10575:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10592:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "10575:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 654,
																					"nodeType": "Block",
																					"src": "10748:135:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "10779:86:0",
																								"nodeType": "YulBlock",
																								"src": "10779:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "10816:2:0",
																															"nodeType": "YulLiteral",
																															"src": "10816:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "10820:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "10820:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "10812:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "10812:3:0"
																													},
																													"nativeSrc": "10812:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "10812:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "10835:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "10835:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "10829:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "10829:5:0"
																													},
																													"nativeSrc": "10829:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "10829:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "10805:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "10805:6:0"
																											},
																											"nativeSrc": "10805:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "10805:38:0"
																										},
																										"nativeSrc": "10805:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "10805:38:0"
																									}
																								]
																							},
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 642,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "10820:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 642,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "10835:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 653,
																							"nodeType": "InlineAssembly",
																							"src": "10770:95:0"
																						}
																					]
																				},
																				"id": 655,
																				"nodeType": "IfStatement",
																				"src": "10571:312:0",
																				"trueBody": {
																					"id": 652,
																					"nodeType": "Block",
																					"src": "10595:147:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 649,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10649:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 648,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "10617:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 650,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10617:106:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 651,
																							"nodeType": "ExpressionStatement",
																							"src": "10617:106:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 657,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 643,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 642,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "10545:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 657,
																				"src": "10532:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 641,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "10532:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "10531:21:0"
																	},
																	"src": "10525:372:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 624,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10286:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10290:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10286:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "10318:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 627,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "10344:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 628,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "10373:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 621,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "10244:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 620,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "10228:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$842_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10228:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$842",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10248:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "10228:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10228:168:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 658,
															"nodeType": "TryStatement",
															"src": "10208:689:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "9461:542:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "10017:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "10049:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10079:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "10071:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "10091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "10116:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10039:101:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "10158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10157:6:0"
									},
									"scope": 682,
									"src": "10008:947:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "11025:104:0",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "11043:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "11035:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"nodeType": "VariableDeclarationStatement",
												"src": "11035:12:0"
											},
											{
												"AST": {
													"nativeSrc": "11066:32:0",
													"nodeType": "YulBlock",
													"src": "11066:32:0",
													"statements": [
														{
															"nativeSrc": "11068:28:0",
															"nodeType": "YulAssignment",
															"src": "11068:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "11088:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "11088:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "11076:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "11076:11:0"
																},
																"nativeSrc": "11076:20:0",
																"nodeType": "YulFunctionCall",
																"src": "11076:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11068:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "11068:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 667,
														"isOffset": false,
														"isSlot": false,
														"src": "11088:7:0",
														"valueSize": 1
													},
													{
														"declaration": 673,
														"isOffset": false,
														"isSlot": false,
														"src": "11068:4:0",
														"valueSize": 1
													}
												],
												"id": 675,
												"nodeType": "InlineAssembly",
												"src": "11057:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "11114:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11121:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11114:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 679,
												"nodeType": "Return",
												"src": "11107:15:0"
											}
										]
									},
									"functionSelector": "16279055",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "10970:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10989:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10980:17:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11018:6:0"
									},
									"scope": 682,
									"src": "10961:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 708,
							"src": "340:10791:0",
							"usedErrors": [],
							"usedEvents": [
								723,
								732,
								741
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 683,
										"name": "IERC721Receiver",
										"nameLocations": [
											"11164:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "11164:15:0"
									},
									"id": 684,
									"nodeType": "InheritanceSpecifier",
									"src": "11164:15:0"
								}
							],
							"canonicalName": "BaseERC721Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 707,
							"linearizedBaseContracts": [
								707,
								842
							],
							"name": "BaseERC721Receiver",
							"nameLocation": "11142:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "11200:2:0",
										"statements": []
									},
									"id": 688,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11197:2:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11200:0:0"
									},
									"scope": 707,
									"src": "11186:16:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										841
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "11346:54:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 701,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "11363:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_BaseERC721Receiver_$707",
																"typeString": "contract BaseERC721Receiver"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11368:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "11363:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) pure external returns (bytes4)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "11385:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "11363:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "11356:37:0"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "11217:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "11243:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "11260:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "11277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "11294:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11233:81:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "11338:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 698,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "11338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11337:8:0"
									},
									"scope": 707,
									"src": "11208:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 708,
							"src": "11133:269:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:11370:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1392
						],
						"IERC721": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 825,
							"sourceUnit": 1393,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 710,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1392,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 713,
										"name": "IERC165",
										"nameLocations": [
											"287:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "287:7:1"
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 712,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 824,
							"linearizedBaseContracts": [
								824,
								1392
							],
							"name": "IERC721",
							"nameLocation": "276:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 723,
									"name": "Transfer",
									"nameLocation": "400:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "409:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "431:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "451:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:1"
									},
									"src": "394:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 732,
									"name": "Approval",
									"nameLocation": "587:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "596:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "619:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "645:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:1"
									},
									"src": "581:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 741,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "819:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "842:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "868:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:1"
									},
									"src": "798:85:1"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "989:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:1"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1027:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:1"
									},
									"scope": 824,
									"src": "970:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1203:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:1"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1243:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:1"
									},
									"scope": 824,
									"src": "1186:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1860:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1874:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1903:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:1"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:1"
									},
									"scope": 824,
									"src": "1834:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "2675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "2689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "2701:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:1"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:1"
									},
									"scope": 824,
									"src": "2649:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3492:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3506:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:1"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:1"
									},
									"scope": 824,
									"src": "3470:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4024:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:1"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:1"
									},
									"scope": 824,
									"src": "4007:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "4415:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "4433:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:1"
									},
									"scope": 824,
									"src": "4388:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4668:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:1"
									},
									"scope": 824,
									"src": "4607:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4876:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:1"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4917:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:1"
									},
									"scope": 824,
									"src": "4835:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 825,
							"src": "266:4659:1",
							"usedErrors": [],
							"usedEvents": [
								723,
								732,
								741
							]
						}
					],
					"src": "108:4818:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "867:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "915:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "940:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:2"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "984:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 838,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:2"
									},
									"scope": 842,
									"src": "832:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 843,
							"src": "295:699:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1095
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 850,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 855,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 858,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1095",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1095",
																		"typeString": "library Address"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 871,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 876,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1095",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1095",
																					"typeString": "library Address"
																				}
																			],
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 874,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 873,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 879,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													883,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 884,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 886,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 891,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 893,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 895,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 1095,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 909,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 914,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 1095,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1095",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1095",
																		"typeString": "library Address"
																	}
																],
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 933,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 938,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1095",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1095",
																					"typeString": "library Address"
																				}
																			],
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 936,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 935,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 941,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													945,
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 944,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 946,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [
														{
															"id": 952,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 948,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 950,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 958,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 955,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 927,
												"id": 960,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 1095,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													973,
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 972,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 974,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [
														{
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 984,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 981,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 971,
												"id": 986,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 1095,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													999,
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 998,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"id": 1004,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1002,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1010,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 997,
												"id": 1012,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 1095,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 1026,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1033,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1037,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1017,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1048,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 1047,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1044,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1043,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1046,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1049,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1025,
															"id": 1050,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1029,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1028,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 1095,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 1064,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 1071,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1063,
															"id": 1072,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1067,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1066,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 1095,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1082,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1088,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1090,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1079,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 1079,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 1086,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 1095,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1096,
							"src": "195:6066:3",
							"usedErrors": [
								850,
								855,
								858
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1125
						]
					},
					"id": 1126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1125,
							"linearizedBaseContracts": [
								1125
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1103,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1105,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 1125,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1114,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 1125,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1120,
												"id": 1122,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 1125,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1126,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2446
						],
						"SignedMath": [
							2551
						],
						"Strings": [
							1380
						]
					},
					"id": 1381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 2447,
							"src": "127:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1128,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2446,
										"src": "135:4:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 2552,
							"src": "165:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1130,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2551,
										"src": "173:10:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1132,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1380,
							"linearizedBaseContracts": [
								1380
							],
							"name": "Strings",
							"nameLocation": "259:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1135,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "273:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1133,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1138,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "335:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1136,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1137,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:5",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1145,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "520:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:5"
									},
									"src": "470:66:5"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "708:627:5",
										"statements": [
											{
												"id": 1191,
												"nodeType": "UncheckedBlock",
												"src": "718:611:5",
												"statements": [
													{
														"assignments": [
															1154
														],
														"declarations": [
															{
																"constant": false,
																"id": 1154,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1191,
																"src": "742:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1153,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1161,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "770:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1155,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "759:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2446_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "759:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:5"
													},
													{
														"assignments": [
															1163
														],
														"declarations": [
															{
																"constant": false,
																"id": 1163,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1191,
																"src": "794:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1162,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1168,
														"initialValue": {
															"arguments": [
																{
																	"id": 1166,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "828:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1164,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:5"
													},
													{
														"assignments": [
															1170
														],
														"declarations": [
															{
																"constant": false,
																"id": 1170,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 1191,
																"src": "849:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1171,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:5"
													},
													{
														"AST": {
															"nativeSrc": "930:67:5",
															"nodeType": "YulBlock",
															"src": "930:67:5",
															"statements": [
																{
																	"nativeSrc": "948:35:5",
																	"nodeType": "YulAssignment",
																	"src": "948:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:5",
																						"nodeType": "YulLiteral",
																						"src": "971:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:5"
																				},
																				"nativeSrc": "967:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:5"
																		},
																		"nativeSrc": "955:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1163,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:5",
																"valueSize": 1
															},
															{
																"declaration": 1154,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:5",
																"valueSize": 1
															},
															{
																"declaration": 1170,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:5",
																"valueSize": 1
															}
														],
														"id": 1172,
														"nodeType": "InlineAssembly",
														"src": "921:76:5"
													},
													{
														"body": {
															"id": 1187,
															"nodeType": "Block",
															"src": "1023:269:5",
															"statements": [
																{
																	"expression": {
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:5",
																		"subExpression": {
																			"id": 1174,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "1041:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1176,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:5",
																		"nodeType": "YulBlock",
																		"src": "1124:86:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:5",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:5"
																									},
																									"nativeSrc": "1164:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:5"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:5"
																							},
																							"nativeSrc": "1159:32:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:5"
																					},
																					"nativeSrc": "1146:46:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:5"
																				},
																				"nativeSrc": "1146:46:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1135,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1170,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1148,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 1177,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:5"
																},
																{
																	"expression": {
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1178,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "1227:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1182,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "1260:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1186,
																	"nodeType": "IfStatement",
																	"src": "1256:21:5",
																	"trueBody": {
																		"id": 1185,
																		"nodeType": "Break",
																		"src": "1272:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1188,
														"nodeType": "WhileStatement",
														"src": "1010:282:5"
													},
													{
														"expression": {
															"id": 1189,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "1312:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1152,
														"id": 1190,
														"nodeType": "Return",
														"src": "1305:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:5"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:5"
									},
									"scope": 1380,
									"src": "637:698:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "1511:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "1542:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:5",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "1588:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1211,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2551,
																			"src": "1573:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2551_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:5",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2550,
																		"src": "1573:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1210,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "1564:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1201,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:5",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1217,
												"nodeType": "Return",
												"src": "1521:75:5"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1459:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1195,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1496:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:5"
									},
									"scope": 1380,
									"src": "1435:168:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "1782:100:5",
										"statements": [
											{
												"id": 1237,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1228,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1835:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1231,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1222,
																				"src": "1854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1229,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2446,
																				"src": "1842:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2446_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2388,
																			"src": "1842:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1227,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1239,
																	1322,
																	1342
																],
																"referencedDeclaration": 1322,
																"src": "1823:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1226,
														"id": 1236,
														"nodeType": "Return",
														"src": "1816:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1729:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1767:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:5"
									},
									"scope": 1380,
									"src": "1708:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "2095:435:5",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "2105:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"id": 1251,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1242,
													"src": "2126:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:5"
											},
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "2141:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1253,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1258,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "2177:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1255,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:5"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1264,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "2198:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1266,
														"indexExpression": {
															"hexValue": "30",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:5"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1270,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "2223:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1272,
														"indexExpression": {
															"hexValue": "31",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:5"
											},
											{
												"body": {
													"id": 1304,
													"nodeType": "Block",
													"src": "2293:95:5",
													"statements": [
														{
															"expression": {
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1290,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "2307:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1292,
																	"indexExpression": {
																		"id": 1291,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "2314:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1293,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "2319:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1297,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1294,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "2330:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:5"
														},
														{
															"expression": {
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1300,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "2361:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1303,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2281:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"initializationExpression": {
													"assignments": [
														1277
													],
													"declarations": [
														{
															"constant": false,
															"id": 1277,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1305,
															"src": "2253:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1276,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1283,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1279,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "2269:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:5",
														"subExpression": {
															"id": 1287,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "2290:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1289,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1306,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "2401:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "2397:96:5",
												"trueBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "2418:75:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1310,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "2468:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1311,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "2475:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1309,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "2439:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1313,
															"nodeType": "RevertStatement",
															"src": "2432:50:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1318,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "2516:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1316,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1320,
												"nodeType": "Return",
												"src": "2502:21:5"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2026:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2041:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2080:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:5"
									},
									"scope": 1380,
									"src": "2005:525:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "2762:75:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1335,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1325,
																			"src": "2807:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1333,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1338,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2815:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1330,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1239,
															1322,
															1342
														],
														"referencedDeclaration": 1322,
														"src": "2779:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1329,
												"id": 1340,
												"nodeType": "Return",
												"src": "2772:58:5"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "2710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:5"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "2747:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1327,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:5"
									},
									"scope": 1380,
									"src": "2689:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2992:104:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "3015:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1352,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1359,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "3034:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1357,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1366,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "3063:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1364,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1363,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1372,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "3086:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1370,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1369,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1377,
												"nodeType": "Return",
												"src": "3002:87:5"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2929:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2946:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:5"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2986:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:5"
									},
									"scope": 1380,
									"src": "2914:182:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1381,
							"src": "251:2847:5",
							"usedErrors": [
								1145
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 1392,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1393,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2446
						]
					},
					"id": 2447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1395,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2446,
							"linearizedBaseContracts": [
								2446
							],
							"name": "Math",
							"nameLocation": "211:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:7",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1398,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:7"
									},
									"src": "277:29:7"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1403,
									"members": [
										{
											"id": 1399,
											"name": "Floor",
											"nameLocation": "336:5:7",
											"nodeType": "EnumValue",
											"src": "336:5:7"
										},
										{
											"id": 1400,
											"name": "Ceil",
											"nameLocation": "379:4:7",
											"nodeType": "EnumValue",
											"src": "379:4:7"
										},
										{
											"id": 1401,
											"name": "Trunc",
											"nameLocation": "421:5:7",
											"nodeType": "EnumValue",
											"src": "421:5:7"
										},
										{
											"id": 1402,
											"name": "Expand",
											"nameLocation": "451:6:7",
											"nodeType": "EnumValue",
											"src": "451:6:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:7",
									"nodeType": "EnumDefinition",
									"src": "312:169:7"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "661:140:7",
										"statements": [
											{
												"id": 1433,
												"nodeType": "UncheckedBlock",
												"src": "671:124:7",
												"statements": [
													{
														"assignments": [
															1416
														],
														"declarations": [
															{
																"constant": false,
																"id": 1416,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1433,
																"src": "695:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1415,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1420,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "707:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1418,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "711:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1421,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "730:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1422,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "734:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "726:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1426,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1414,
															"id": 1427,
															"nodeType": "Return",
															"src": "737:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1430,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "782:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1414,
														"id": 1432,
														"nodeType": "Return",
														"src": "768:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "646:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "652:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:7"
									},
									"scope": 2446,
									"src": "585:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "984:113:7",
										"statements": [
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "994:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "1022:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1448,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "1026:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1454,
														"nodeType": "IfStatement",
														"src": "1018:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1446,
															"id": 1453,
															"nodeType": "Return",
															"src": "1029:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1456,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "1074:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "1078:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1459,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1446,
														"id": 1460,
														"nodeType": "Return",
														"src": "1060:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "924:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "935:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:7"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "969:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "975:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:7"
									},
									"scope": 2446,
									"src": "908:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "1283:417:7",
										"statements": [
											{
												"id": 1503,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1475,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "1551:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "1547:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1481,
															"nodeType": "Return",
															"src": "1559:16:7"
														}
													},
													{
														"assignments": [
															1484
														],
														"declarations": [
															{
																"constant": false,
																"id": 1484,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1503,
																"src": "1589:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1483,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1488,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1485,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "1601:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1486,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "1605:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1489,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "1624:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1490,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "1628:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1492,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "1633:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "1620:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1497,
															"nodeType": "Return",
															"src": "1636:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1500,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "1681:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1501,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1474,
														"id": 1502,
														"nodeType": "Return",
														"src": "1667:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1223:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1234:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "1274:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:7"
									},
									"scope": 2446,
									"src": "1207:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "1887:114:7",
										"statements": [
											{
												"id": 1531,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "1925:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1524,
														"nodeType": "IfStatement",
														"src": "1921:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1516,
															"id": 1523,
															"nodeType": "Return",
															"src": "1933:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1526,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "1978:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1527,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "1982:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1529,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1516,
														"id": 1530,
														"nodeType": "Return",
														"src": "1964:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1827:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1838:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:7"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1872:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1878:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:7"
									},
									"scope": 2446,
									"src": "1811:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "2198:114:7",
										"statements": [
											{
												"id": 1559,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2236:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1552,
														"nodeType": "IfStatement",
														"src": "2232:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1544,
															"id": 1551,
															"nodeType": "Return",
															"src": "2244:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1554,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "2289:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1555,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "2293:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1544,
														"id": 1558,
														"nodeType": "Return",
														"src": "2275:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2138:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2149:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:7"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2183:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "2189:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:7"
									},
									"scope": 2446,
									"src": "2122:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "2449:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1571,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "2466:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1572,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "2470:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1575,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2478:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:7",
													"trueExpression": {
														"id": 1574,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2474:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1577,
												"nodeType": "Return",
												"src": "2459:20:7"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "2395:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "2406:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:7"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "2440:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:7"
									},
									"scope": 2446,
									"src": "2382:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "2624:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1589,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "2641:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1590,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2645:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1593,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "2653:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:7",
													"trueExpression": {
														"id": 1592,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "2649:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1595,
												"nodeType": "Return",
												"src": "2634:20:7"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2570:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2581:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:7"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2615:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:7"
									},
									"scope": 2446,
									"src": "2557:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "2845:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "2900:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1608,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "2904:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1611,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "2910:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1612,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "2914:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1618,
												"nodeType": "Return",
												"src": "2892:28:7"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2791:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2802:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:7"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2836:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:7"
									},
									"scope": 2446,
									"src": "2774:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "3219:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1630,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "3233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1638,
												"nodeType": "IfStatement",
												"src": "3229:127:7",
												"trueBody": {
													"id": 1637,
													"nodeType": "Block",
													"src": "3241:115:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1633,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "3340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1634,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "3344:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1629,
															"id": 1636,
															"nodeType": "Return",
															"src": "3333:12:7"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1639,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "3444:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1643,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1623,
																			"src": "3458:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "3467:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1652,
												"nodeType": "Return",
												"src": "3437:35:7"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3165:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3176:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:7"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3210:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:7"
									},
									"scope": 2446,
									"src": "3148:331:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "3901:4018:7",
										"statements": [
											{
												"id": 1778,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:7",
												"statements": [
													{
														"assignments": [
															1667
														],
														"declarations": [
															{
																"constant": false,
																"id": 1667,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "4232:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1666,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1671,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1668,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "4248:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1669,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "4252:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:7"
													},
													{
														"assignments": [
															1673
														],
														"declarations": [
															{
																"constant": false,
																"id": 1673,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "4312:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1674,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:7"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:7",
															"nodeType": "YulBlock",
															"src": "4392:122:7",
															"statements": [
																{
																	"nativeSrc": "4410:30:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:7"
																				},
																				"nativeSrc": "4433:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:7"
																		},
																		"nativeSrc": "4420:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:7",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:7",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:7"
																				},
																				"nativeSrc": "4470:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:7"
																				},
																				"nativeSrc": "4486:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:7"
																		},
																		"nativeSrc": "4466:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1673,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1657,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1659,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:7",
																"valueSize": 1
															}
														],
														"id": 1675,
														"nodeType": "InlineAssembly",
														"src": "4383:131:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1676,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "4595:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1684,
														"nodeType": "IfStatement",
														"src": "4591:368:7",
														"trueBody": {
															"id": 1683,
															"nodeType": "Block",
															"src": "4607:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1679,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "4925:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1680,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "4933:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1665,
																	"id": 1682,
																	"nodeType": "Return",
																	"src": "4918:26:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "5065:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1686,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5080:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1692,
														"nodeType": "IfStatement",
														"src": "5061:88:7",
														"trueBody": {
															"id": 1691,
															"nodeType": "Block",
															"src": "5087:62:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1688,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1398,
																			"src": "5112:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1690,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:7"
																}
															]
														}
													},
													{
														"assignments": [
															1694
														],
														"declarations": [
															{
																"constant": false,
																"id": 1694,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "5404:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1693,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1695,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:7"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:7",
															"nodeType": "YulBlock",
															"src": "5444:291:7",
															"statements": [
																{
																	"nativeSrc": "5513:38:7",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:7"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:7"
																		},
																		"nativeSrc": "5526:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:7"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:7",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:7"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:7"
																				},
																				"nativeSrc": "5653:20:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:7"
																		},
																		"nativeSrc": "5642:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:7",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:7"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:7"
																		},
																		"nativeSrc": "5700:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1661,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1673,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1673,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1694,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1694,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1694,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1657,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1659,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:7",
																"valueSize": 1
															}
														],
														"id": 1696,
														"nodeType": "InlineAssembly",
														"src": "5435:300:7"
													},
													{
														"assignments": [
															1698
														],
														"declarations": [
															{
																"constant": false,
																"id": 1698,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "5939:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1697,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1705,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1699,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "5954:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1701,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "5973:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:7"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:7",
															"nodeType": "YulBlock",
															"src": "6008:362:7",
															"statements": [
																{
																	"nativeSrc": "6073:37:7",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:7"
																		},
																		"nativeSrc": "6088:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:7",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:7"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:7"
																		},
																		"nativeSrc": "6186:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:7"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:7",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:7"
																						},
																						"nativeSrc": "6333:12:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:7"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:7"
																				},
																				"nativeSrc": "6329:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:7"
																		},
																		"nativeSrc": "6325:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1661,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1661,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1698,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1698,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1698,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1698,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1698,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:7",
																"valueSize": 1
															}
														],
														"id": 1706,
														"nodeType": "InlineAssembly",
														"src": "5999:371:7"
													},
													{
														"expression": {
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1707,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "6436:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1708,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "6445:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1709,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "6453:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1712,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:7"
													},
													{
														"assignments": [
															1714
														],
														"declarations": [
															{
																"constant": false,
																"id": 1714,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "6775:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1713,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1721,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1716,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "6798:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:7"
													},
													{
														"expression": {
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1722,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7031:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1724,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7046:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1725,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7060:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1729,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:7"
													},
													{
														"expression": {
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1730,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7100:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1732,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7115:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1733,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7129:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1737,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:7"
													},
													{
														"expression": {
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1738,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7170:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1740,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7185:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1741,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7199:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1745,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:7"
													},
													{
														"expression": {
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1746,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7240:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1748,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7255:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1749,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7269:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1753,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:7"
													},
													{
														"expression": {
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1754,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7310:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7325:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1757,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7339:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1761,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:7"
													},
													{
														"expression": {
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1762,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "7381:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1764,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7396:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1765,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "7410:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:7"
													},
													{
														"expression": {
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "7851:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1771,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "7860:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1772,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "7868:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1775,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:7"
													},
													{
														"expression": {
															"id": 1776,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "7896:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1665,
														"id": 1777,
														"nodeType": "Return",
														"src": "7889:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3819:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3830:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3841:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:7"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3885:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:7"
									},
									"scope": 2446,
									"src": "3803:4116:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "8161:192:7",
										"statements": [
											{
												"assignments": [
													1796
												],
												"declarations": [
													{
														"constant": false,
														"id": 1796,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "8171:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"arguments": [
														{
															"id": 1798,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "8195:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1799,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "8198:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1800,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "8201:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1797,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1780,
															1823
														],
														"referencedDeclaration": 1780,
														"src": "8188:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1804,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "8244:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1403",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1403",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1803,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2445,
															"src": "8227:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1403_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1807,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "8264:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1808,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "8267:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1809,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "8270:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1806,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1819,
												"nodeType": "IfStatement",
												"src": "8223:101:7",
												"trueBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "8288:36:7",
													"statements": [
														{
															"expression": {
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1814,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "8302:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1820,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1796,
													"src": "8340:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1821,
												"nodeType": "Return",
												"src": "8333:13:7"
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "8067:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "8078:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "8089:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "8110:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1788,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "8110:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "8110:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:7"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "8152:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:7"
									},
									"scope": 2446,
									"src": "8051:302:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "8644:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1831,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "8658:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "IfStatement",
												"src": "8654:45:7",
												"trueBody": {
													"id": 1836,
													"nodeType": "Block",
													"src": "8666:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1830,
															"id": 1835,
															"nodeType": "Return",
															"src": "8680:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "9378:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1848,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1842,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "9406:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1841,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2102,
																			2137
																		],
																		"referencedDeclaration": 2102,
																		"src": "9401:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1846,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:7"
											},
											{
												"id": 1933,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:7",
												"statements": [
													{
														"expression": {
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "9839:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1850,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "9849:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1851,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "9858:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1852,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "9862:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1855,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1859,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:7"
													},
													{
														"expression": {
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1860,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "9888:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1861,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "9898:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1862,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "9907:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1863,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "9911:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1870,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:7"
													},
													{
														"expression": {
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1871,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "9937:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1872,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "9947:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1873,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "9956:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1874,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "9960:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1877,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1881,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:7"
													},
													{
														"expression": {
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1882,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "9986:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1883,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "9996:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1884,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "10005:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1885,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "10009:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1888,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1892,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:7"
													},
													{
														"expression": {
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1893,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "10035:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1894,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "10045:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1895,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "10054:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1896,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "10058:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1903,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:7"
													},
													{
														"expression": {
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1904,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "10084:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1905,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "10094:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1906,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "10103:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1907,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "10107:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1910,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1914,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:7"
													},
													{
														"expression": {
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1915,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "10133:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1916,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "10143:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1917,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "10152:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1918,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1839,
																					"src": "10156:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1921,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1925,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1927,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "10193:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1928,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "10201:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1929,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "10205:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1926,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "10189:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1830,
														"id": 1932,
														"nodeType": "Return",
														"src": "10182:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "8601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:7"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "8635:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:7"
									},
									"scope": 2446,
									"src": "8587:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "10405:164:7",
										"statements": [
											{
												"id": 1968,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:7",
												"statements": [
													{
														"assignments": [
															1947
														],
														"declarations": [
															{
																"constant": false,
																"id": 1947,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "10439:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1946,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1951,
														"initialValue": {
															"arguments": [
																{
																	"id": 1949,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "10461:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1948,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1935,
																	1970
																],
																"referencedDeclaration": 1935,
																"src": "10456:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "10484:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1954,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1941,
																						"src": "10511:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1953,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "10494:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1403_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1960,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1956,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1947,
																						"src": "10524:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1957,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1947,
																						"src": "10533:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1959,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1938,
																					"src": "10542:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1945,
														"id": 1967,
														"nodeType": "Return",
														"src": "10477:75:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "10343:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "10354:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1939,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "10354:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "10354:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:7"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "10396:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:7"
									},
									"scope": 2446,
									"src": "10329:240:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "10760:922:7",
										"statements": [
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2101,
														"src": "10770:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"hexValue": "30",
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:7"
											},
											{
												"id": 2098,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "10826:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1996,
														"nodeType": "IfStatement",
														"src": "10822:99:7",
														"trueBody": {
															"id": 1995,
															"nodeType": "Block",
															"src": "10844:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1987,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "10862:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1990,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:7"
																},
																{
																	"expression": {
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1991,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "10893:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1994,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1997,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "10938:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "10934:96:7",
														"trueBody": {
															"id": 2010,
															"nodeType": "Block",
															"src": "10955:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2002,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "10973:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:7"
																},
																{
																	"expression": {
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2006,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11003:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2009,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11047:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2026,
														"nodeType": "IfStatement",
														"src": "11043:96:7",
														"trueBody": {
															"id": 2025,
															"nodeType": "Block",
															"src": "11064:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "11082:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:7"
																},
																{
																	"expression": {
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2021,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11112:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2024,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2027,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11156:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2041,
														"nodeType": "IfStatement",
														"src": "11152:96:7",
														"trueBody": {
															"id": 2040,
															"nodeType": "Block",
															"src": "11173:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2032,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "11191:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2035,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:7"
																},
																{
																	"expression": {
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2036,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11221:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2039,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2042,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11265:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2056,
														"nodeType": "IfStatement",
														"src": "11261:93:7",
														"trueBody": {
															"id": 2055,
															"nodeType": "Block",
															"src": "11281:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2047,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "11299:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:7"
																},
																{
																	"expression": {
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2051,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11328:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2054,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2057,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11371:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2071,
														"nodeType": "IfStatement",
														"src": "11367:93:7",
														"trueBody": {
															"id": 2070,
															"nodeType": "Block",
															"src": "11387:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2062,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "11405:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2065,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:7"
																},
																{
																	"expression": {
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2066,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11434:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2069,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2072,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11477:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2086,
														"nodeType": "IfStatement",
														"src": "11473:93:7",
														"trueBody": {
															"id": 2085,
															"nodeType": "Block",
															"src": "11493:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "11511:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:7"
																},
																{
																	"expression": {
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2081,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11540:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2084,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2087,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "11583:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2097,
														"nodeType": "IfStatement",
														"src": "11579:64:7",
														"trueBody": {
															"id": 2096,
															"nodeType": "Block",
															"src": "11599:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "11617:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2095,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2099,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1979,
													"src": "11669:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1977,
												"id": 2100,
												"nodeType": "Return",
												"src": "11662:13:7"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:7",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "10713:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:7"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "10751:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:7"
									},
									"scope": 2446,
									"src": "10699:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "11915:168:7",
										"statements": [
											{
												"id": 2135,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:7",
												"statements": [
													{
														"assignments": [
															2114
														],
														"declarations": [
															{
																"constant": false,
																"id": 2114,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2135,
																"src": "11949:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2113,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2118,
														"initialValue": {
															"arguments": [
																{
																	"id": 2116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2105,
																	"src": "11971:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2115,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2102,
																	2137
																],
																"referencedDeclaration": 2102,
																"src": "11966:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2119,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "11998:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2121,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2108,
																						"src": "12025:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2120,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "12008:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1403_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2124,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2114,
																						"src": "12043:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2126,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2105,
																					"src": "12052:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2112,
														"id": 2134,
														"nodeType": "Return",
														"src": "11991:75:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "11849:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "11864:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2106,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "11864:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "11864:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:7"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "11906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:7"
									},
									"scope": 2446,
									"src": "11835:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "12276:854:7",
										"statements": [
											{
												"assignments": [
													2146
												],
												"declarations": [
													{
														"constant": false,
														"id": 2146,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2265,
														"src": "12286:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2148,
												"initialValue": {
													"hexValue": "30",
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:7"
											},
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2149,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12342:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2165,
														"nodeType": "IfStatement",
														"src": "12338:103:7",
														"trueBody": {
															"id": 2164,
															"nodeType": "Block",
															"src": "12361:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2154,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12379:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2159,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:7"
																},
																{
																	"expression": {
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12414:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2163,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2166,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12458:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2182,
														"nodeType": "IfStatement",
														"src": "12454:103:7",
														"trueBody": {
															"id": 2181,
															"nodeType": "Block",
															"src": "12477:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2171,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12495:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2176,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:7"
																},
																{
																	"expression": {
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12530:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2180,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2183,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12574:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2199,
														"nodeType": "IfStatement",
														"src": "12570:103:7",
														"trueBody": {
															"id": 2198,
															"nodeType": "Block",
															"src": "12593:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12611:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2193,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:7"
																},
																{
																	"expression": {
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12646:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2197,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2200,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12690:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2216,
														"nodeType": "IfStatement",
														"src": "12686:100:7",
														"trueBody": {
															"id": 2215,
															"nodeType": "Block",
															"src": "12708:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12726:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2210,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:7"
																},
																{
																	"expression": {
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2211,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12760:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2214,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2217,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12803:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "12799:100:7",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "12821:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12839:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:7"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12873:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2234,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "12916:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2250,
														"nodeType": "IfStatement",
														"src": "12912:100:7",
														"trueBody": {
															"id": 2249,
															"nodeType": "Block",
															"src": "12934:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "12952:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2244,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:7"
																},
																{
																	"expression": {
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2245,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "12986:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2248,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2251,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "13029:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2261,
														"nodeType": "IfStatement",
														"src": "13025:66:7",
														"trueBody": {
															"id": 2260,
															"nodeType": "Block",
															"src": "13047:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2256,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "13065:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2259,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2263,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2146,
													"src": "13117:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2144,
												"id": 2264,
												"nodeType": "Return",
												"src": "13110:13:7"
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:7",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "12229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:7"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "12267:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:7"
									},
									"scope": 2446,
									"src": "12214:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2300,
										"nodeType": "Block",
										"src": "13365:170:7",
										"statements": [
											{
												"id": 2299,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:7",
												"statements": [
													{
														"assignments": [
															2278
														],
														"declarations": [
															{
																"constant": false,
																"id": 2278,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2299,
																"src": "13399:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2282,
														"initialValue": {
															"arguments": [
																{
																	"id": 2280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "13422:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2279,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2266,
																	2301
																],
																"referencedDeclaration": 2266,
																"src": "13416:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2283,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "13449:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2285,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2272,
																						"src": "13476:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2284,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "13459:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1403_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2289,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2288,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2278,
																						"src": "13495:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2290,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2269,
																					"src": "13504:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2276,
														"id": 2298,
														"nodeType": "Return",
														"src": "13442:76:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "13299:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "13314:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2270,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "13314:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "13314:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:7"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "13356:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:7"
									},
									"scope": 2446,
									"src": "13284:251:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "13855:600:7",
										"statements": [
											{
												"assignments": [
													2310
												],
												"declarations": [
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2387,
														"src": "13865:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2312,
												"initialValue": {
													"hexValue": "30",
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:7"
											},
											{
												"id": 2384,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2313,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "13921:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2327,
														"nodeType": "IfStatement",
														"src": "13917:98:7",
														"trueBody": {
															"id": 2326,
															"nodeType": "Block",
															"src": "13939:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "13957:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2321,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:7"
																},
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "13988:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "14032:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2342,
														"nodeType": "IfStatement",
														"src": "14028:95:7",
														"trueBody": {
															"id": 2341,
															"nodeType": "Block",
															"src": "14049:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2333,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "14067:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2336,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:7"
																},
																{
																	"expression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "14097:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2340,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "14140:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2357,
														"nodeType": "IfStatement",
														"src": "14136:95:7",
														"trueBody": {
															"id": 2356,
															"nodeType": "Block",
															"src": "14157:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2348,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "14175:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2351,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:7"
																},
																{
																	"expression": {
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "14205:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2355,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "14248:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2372,
														"nodeType": "IfStatement",
														"src": "14244:95:7",
														"trueBody": {
															"id": 2371,
															"nodeType": "Block",
															"src": "14265:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2363,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "14283:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2366,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:7"
																},
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2367,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "14313:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "14356:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2383,
														"nodeType": "IfStatement",
														"src": "14352:64:7",
														"trueBody": {
															"id": 2382,
															"nodeType": "Block",
															"src": "14372:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2378,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2310,
																			"src": "14390:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2381,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2385,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2310,
													"src": "14442:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2386,
												"nodeType": "Return",
												"src": "14435:13:7"
											}
										]
									},
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:7",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "13808:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:7"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "13846:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:7"
									},
									"scope": 2446,
									"src": "13792:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "14692:177:7",
										"statements": [
											{
												"id": 2424,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:7",
												"statements": [
													{
														"assignments": [
															2400
														],
														"declarations": [
															{
																"constant": false,
																"id": 2400,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2424,
																"src": "14726:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2404,
														"initialValue": {
															"arguments": [
																{
																	"id": 2402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "14750:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2401,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2388,
																	2426
																],
																"referencedDeclaration": 2388,
																"src": "14743:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2405,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "14777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2407,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2394,
																						"src": "14804:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1403",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2406,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "14787:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1403_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2409,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2412,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2410,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2400,
																									"src": "14823:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2411,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2413,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2415,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2391,
																					"src": "14838:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2398,
														"id": 2423,
														"nodeType": "Return",
														"src": "14770:82:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "14626:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "14641:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2392,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "14641:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "14641:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:7"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "14683:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:7"
									},
									"scope": 2446,
									"src": "14610:259:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "15067:48:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2437,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "15090:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1403",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1403",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2435,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2434,
												"id": 2443,
												"nodeType": "Return",
												"src": "15077:31:7"
											}
										]
									},
									"documentation": {
										"id": 2427,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:7",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "15019:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1403",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2428,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "15019:8:7"
													},
													"referencedDeclaration": 1403,
													"src": "15019:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1403",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:7"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "15061:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:7"
									},
									"scope": 2446,
									"src": "14993:122:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2447,
							"src": "203:14914:7",
							"usedErrors": [
								1398
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2551
						]
					},
					"id": 2552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2449,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:8",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2551,
							"linearizedBaseContracts": [
								2551
							],
							"name": "SignedMath",
							"nameLocation": "224:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "376:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2459,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "393:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2460,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "397:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2463,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "405:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:8",
													"trueExpression": {
														"id": 2462,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2452,
														"src": "401:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2465,
												"nodeType": "Return",
												"src": "386:20:8"
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:8",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "325:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2451,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "335:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2453,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:8"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "368:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:8"
									},
									"scope": 2551,
									"src": "312:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "555:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2477,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "572:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2478,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "576:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "584:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:8",
													"trueExpression": {
														"id": 2480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "580:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2476,
												"id": 2483,
												"nodeType": "Return",
												"src": "565:20:8"
											}
										]
									},
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:8",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "504:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2469,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "514:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2471,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:8"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "547:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2474,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:8"
									},
									"scope": 2551,
									"src": "491:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "797:162:8",
										"statements": [
											{
												"assignments": [
													2496
												],
												"declarations": [
													{
														"constant": false,
														"id": 2496,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 2528,
														"src": "859:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2495,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2497,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "871:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2498,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "875:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2500,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2501,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "882:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2502,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2490,
																				"src": "886:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2507,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "911:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2515,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2496,
																						"src": "931:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2513,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2511,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2520,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "945:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2521,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2490,
																				"src": "949:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2523,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2525,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2494,
												"id": 2527,
												"nodeType": "Return",
												"src": "904:48:8"
											}
										]
									},
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:8",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "746:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2487,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "756:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2489,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:8"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "789:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2492,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:8"
									},
									"scope": 2551,
									"src": "729:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2549,
										"nodeType": "Block",
										"src": "1103:158:8",
										"statements": [
											{
												"id": 2548,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2539,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "1228:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:8",
																		"subExpression": {
																			"id": 2543,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2532,
																			"src": "1242:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:8",
																	"trueExpression": {
																		"id": 2542,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2532,
																		"src": "1237:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2537,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2536,
														"id": 2547,
														"nodeType": "Return",
														"src": "1213:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:8",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "1061:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2531,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:8"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "1094:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:8"
									},
									"scope": 2551,
									"src": "1048:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2552,
							"src": "216:1047:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:8"
				},
				"id": 8
			}
		}
	}
}